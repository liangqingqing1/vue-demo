{"ast":null,"code":"import \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.concat.js\";\nexport default {\n  name: \"roleList\",\n  data: function data() {\n    var _this = this;\n    return {\n      formData: {\n        name: ''\n      },\n      gridOptions: {\n        resizable: true,\n        showOverflow: true,\n        border: 'inner',\n        rowId: 'id',\n        sortConfig: {\n          trigger: 'cell',\n          remote: true,\n          defaultSort: {\n            field: 'name',\n            order: 'desc'\n          }\n        },\n        filterConfig: {\n          remote: true\n        },\n        pagerConfig: {\n          // perfect: true,\n          pageSize: 10,\n          pageSizes: [5, 10, 15, 20, 50, 100, 200, 500, 1000]\n        },\n        checkboxConfig: {\n          labelField: 'id',\n          reserve: true,\n          // 分页场景下，继续保留选中状态\n          highlight: true,\n          range: true\n        },\n        proxyConfig: {\n          seq: true,\n          // 启用动态序号代理\n          sort: true,\n          // 启用排序代理\n          filter: true,\n          // 启用筛选代理\n          props: {\n            result: 'result',\n            // 配置响应结果列表字段\n            total: 'page.total' // 配置响应结果总页数字段\n          },\n\n          ajax: {\n            // 接收 Promise 对象\n            query: function query(_ref) {\n              var page = _ref.page,\n                sorts = _ref.sorts,\n                filters = _ref.filters;\n              var queryParams = Object.assign({}, _this.formData);\n              // 处理排序条件\n              var firstSort = sorts[0];\n              if (firstSort) {\n                queryParams.sort = firstSort.property;\n                queryParams.order = firstSort.order;\n              }\n              // 处理筛选条件\n              filters.forEach(function (_ref2) {\n                var property = _ref2.property,\n                  values = _ref2.values;\n                queryParams[property] = values.join(',');\n              });\n              return _this.$axios.get(\"https://api.xuliangzhan.com:10443/api/pub/page/list/\".concat(page.pageSize, \"/\").concat(page.currentPage), queryParams);\n            },\n            // 被某些特殊功能所触发，例如：导出数据 mode=all 时，会触发该方法并对返回的数据进行导出\n            queryAll: function queryAll() {\n              return _this.$axios.get('https://api.xuliangzhan.com:10443/api/pub/all');\n            }\n          }\n        },\n        toolbarConfig: {\n          export: true,\n          print: true,\n          custom: true,\n          zoom: true,\n          slots: {\n            buttons: 'toolbar_buttons'\n          }\n        }\n      }\n    };\n  },\n  created: function created() {},\n  methods: {\n    searchEvent: function searchEvent() {\n      this.$refs.xGrid.commitProxy('reload');\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;AAmDA;EACAA;EACAC;IAAA;IACA;MACAC;QACAF;MACA;MACAG;QACAC;QACAC;QACAC;QACAC;QACAC;UACAC;UACAC;UACAC;YACAC;YACAC;UACA;QACA;QACAC;UACAJ;QACA;QACAK;UACA;UACAC;UACAC;QACA;QACAC;UACAC;UACAC;UAAA;UACAC;UACAC;QACA;QACAC;UACAC;UAAA;UACAC;UAAA;UACAC;UAAA;UACAC;YACAC;YAAA;YACAC;UACA;;UACAC;YACA;YACAC;cAAA;gBAAAC;gBAAAC;cACA;cACA;cACA;cACA;gBACAC;gBACAA;cACA;cACA;cACAD;gBAAA;kBAAAE;gBACAD;cACA;cACA;YACA;YACA;YACAE;cAAA;YAAA;UACA;QACA;QACAC;UACAC;UACAC;UACAC;UACAC;UACAC;YACAC;UACA;QACA;MACA;IACA;EACA;EACAC,6BAEA;EACAC;IACAC;MACA;IACA;EACA;AAEA","names":["name","data","formData","gridOptions","resizable","showOverflow","border","rowId","sortConfig","trigger","remote","defaultSort","field","order","filterConfig","pagerConfig","pageSize","pageSizes","checkboxConfig","labelField","reserve","highlight","range","proxyConfig","seq","sort","filter","props","result","total","ajax","query","sorts","filters","queryParams","values","queryAll","toolbarConfig","export","print","custom","zoom","slots","buttons","created","methods","searchEvent"],"sourceRoot":"src/views/system","sources":["roleList.vue"],"sourcesContent":["<template>\r\n  <div id=\"box\">\r\n    <template>\r\n      <div style=\"padding: 0 50px 0 50px\">\r\n          <vxe-grid ref=\"xGrid\" v-bind=\"gridOptions\">\r\n              <!--将表单放在工具栏中-->\r\n              <template v-slot:toolbar_buttons>\r\n                  <vxe-form :data=\"formData\" @submit=\"searchEvent\" @reset=\"searchEvent\">\r\n                      <!-- 搜索的字段 -->\r\n                      <vxe-form-item field=\"name\"\r\n                                     :item-render=\"{name: 'input', attrs: {placeholder: '请输入名称'}}\"></vxe-form-item>\r\n                      <vxe-form-item\r\n                              :item-render=\"{ name: '$buttons', children: [{ props: { type: 'submit', content: '查询', status: 'primary' } }, { props: { type: 'reset', content: '重置' } }] }\"></vxe-form-item>\r\n                  </vxe-form>\r\n\r\n                  <vxe-table :data=\"tableData\" class=\"table\"\r\n          border\r\n          ref=\"menu-Table\"\r\n          height=\"90%\"\r\n          :row-config=\"{isHover: true}\">\r\n          <vxe-column type=\"seq\" width=\"100\"></vxe-column>\r\n          <vxe-column field=\"nickName\" title=\"姓名\" width=\"100\" sortable></vxe-column>\r\n          <vxe-column field=\"username\" title=\"账号\" width=\"100\"></vxe-column>\r\n          <vxe-column field=\"mobile\" title=\"电话\" width=\"120\"></vxe-column>\r\n          <vxe-column class=\"test\" field=\"identity\" title=\"身份证\" width=\"100\"></vxe-column>\r\n          <vxe-column field=\"homeAddress\" title=\"家庭住址\" width=\"150\"></vxe-column>\r\n          <vxe-column field=\"onboardingTime\" title=\"入职时间\" width=\"130\" sortable></vxe-column>\r\n          <vxe-column field=\"departureTime\" title=\"离职时间\" width=\"130\" sortable></vxe-column>\r\n          <vxe-column field=\"status\" title=\"状态\" width=\"100\"></vxe-column>\r\n          <vxe-column field=\"departureTime\" title=\"操作\" width=\"200\">\r\n            <vxe-button status=\"primary\" content=\"编辑\"></vxe-button>\r\n            <vxe-button status=\"danger\" content=\"删除\"></vxe-button>\r\n          </vxe-column>\r\n        </vxe-table>\r\n    </div>\r\n              </template>\r\n\r\n              <!--自定义空数据模板-->\r\n              <template v-slot:empty>\r\n                  <span style=\"color: red;\">\r\n                      <p>没有更多数据了！</p>\r\n                  </span>\r\n              </template>\r\n\r\n          </vxe-grid>\r\n      </div>\r\n  </template>\r\n  </div>\r\n</template>\r\n<script>\r\n\r\nexport default {\r\n  name: \"roleList\",\r\n  data() {\r\n      return {\r\n          formData: {\r\n              name: '',\r\n          },\r\n          gridOptions: {\r\n              resizable: true,\r\n              showOverflow: true,\r\n              border: 'inner',\r\n              rowId: 'id',\r\n              sortConfig: {\r\n                  trigger: 'cell',\r\n                  remote: true,\r\n                  defaultSort: {\r\n                      field: 'name',\r\n                      order: 'desc'\r\n                  }\r\n              },\r\n              filterConfig: {\r\n                  remote: true\r\n              },\r\n              pagerConfig: {\r\n                  // perfect: true,\r\n                  pageSize: 10,\r\n                  pageSizes: [5, 10, 15, 20, 50, 100, 200, 500, 1000]\r\n              },\r\n              checkboxConfig: {\r\n                  labelField: 'id',\r\n                  reserve: true,  // 分页场景下，继续保留选中状态\r\n                  highlight: true,\r\n                  range: true\r\n              },\r\n              proxyConfig: {\r\n                  seq: true, // 启用动态序号代理\r\n                  sort: true, // 启用排序代理\r\n                  filter: true, // 启用筛选代理\r\n                  props: {\r\n                      result: 'result', // 配置响应结果列表字段\r\n                      total: 'page.total' // 配置响应结果总页数字段\r\n                  },\r\n                  ajax: {\r\n                      // 接收 Promise 对象\r\n                      query: ({page, sorts, filters}) => {\r\n                          const queryParams = Object.assign({}, this.formData);\r\n                          // 处理排序条件\r\n                          const firstSort = sorts[0];\r\n                          if (firstSort) {\r\n                              queryParams.sort = firstSort.property;\r\n                              queryParams.order = firstSort.order\r\n                          }\r\n                          // 处理筛选条件\r\n                          filters.forEach(({property, values}) => {\r\n                              queryParams[property] = values.join(',')\r\n                          });\r\n                          return this.$axios.get(`https://api.xuliangzhan.com:10443/api/pub/page/list/${page.pageSize}/${page.currentPage}`, queryParams)\r\n                      },\r\n                      // 被某些特殊功能所触发，例如：导出数据 mode=all 时，会触发该方法并对返回的数据进行导出\r\n                      queryAll: () => this.$axios.get('https://api.xuliangzhan.com:10443/api/pub/all')\r\n                  }\r\n              },\r\n              toolbarConfig: {\r\n                  export: true,\r\n                  print: true,\r\n                  custom: true,\r\n                  zoom: true,\r\n                  slots: {\r\n                      buttons: 'toolbar_buttons'\r\n                  }\r\n              }\r\n          }\r\n      }\r\n  },\r\n  created() {\r\n\r\n  },\r\n  methods: {\r\n      searchEvent() {\r\n          this.$refs.xGrid.commitProxy('reload')\r\n      }\r\n  }\r\n\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}