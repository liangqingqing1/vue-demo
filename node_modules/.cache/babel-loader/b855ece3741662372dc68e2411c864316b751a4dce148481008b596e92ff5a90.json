{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\nrequire(\"core-js/modules/es.regexp.exec.js\");\nrequire(\"core-js/modules/es.regexp.test.js\");\nrequire(\"core-js/modules/es.regexp.constructor.js\");\nrequire(\"core-js/modules/es.regexp.dot-all.js\");\nrequire(\"core-js/modules/es.regexp.sticky.js\");\nrequire(\"core-js/modules/es.regexp.to-string.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/es.array.concat.js\");\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/es.string.iterator.js\");\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\nrequire(\"core-js/modules/es.object.keys.js\");\nrequire(\"core-js/modules/es.array.find.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _xeUtils = _interopRequireDefault(require(\"xe-utils\"));\nvar _conf = _interopRequireDefault(require(\"../../v-x-e-table/src/conf\"));\nvar _utils = require(\"../../tools/utils\");\nvar _dom = _interopRequireDefault(require(\"../../tools/dom\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n/**\r\n * 校验规则\r\n */\nvar Rule = /*#__PURE__*/function () {\n  function Rule(rule) {\n    _classCallCheck(this, Rule);\n    Object.assign(this, {\n      $options: rule,\n      required: rule.required,\n      min: rule.min,\n      max: rule.max,\n      type: rule.type,\n      pattern: rule.pattern,\n      validator: rule.validator,\n      trigger: rule.trigger,\n      maxWidth: rule.maxWidth\n    });\n  }\n\n  /**\r\n   * 获取校验不通过的消息\r\n   * 支持国际化翻译\r\n   */\n  _createClass(Rule, [{\n    key: \"content\",\n    get: function get() {\n      return (0, _utils.getFuncText)(this.$options.content || this.$options.message);\n    }\n  }, {\n    key: \"message\",\n    get: function get() {\n      return this.content;\n    }\n  }]);\n  return Rule;\n}();\nfunction validErrorRuleValue(rule, val) {\n  var type = rule.type,\n    min = rule.min,\n    max = rule.max,\n    pattern = rule.pattern;\n  var isNumType = type === 'number';\n  var numVal = isNumType ? _xeUtils.default.toNumber(val) : _xeUtils.default.getSize(val);\n  // 判断数值\n  if (isNumType && isNaN(val)) {\n    return true;\n  }\n  // 如果存在 min，判断最小值\n  if (!_xeUtils.default.eqNull(min) && numVal < _xeUtils.default.toNumber(min)) {\n    return true;\n  }\n  // 如果存在 max，判断最大值\n  if (!_xeUtils.default.eqNull(max) && numVal > _xeUtils.default.toNumber(max)) {\n    return true;\n  }\n  // 如果存在 pattern，正则校验\n  if (pattern && !(_xeUtils.default.isRegExp(pattern) ? pattern : new RegExp(pattern)).test(val)) {\n    return true;\n  }\n  return false;\n}\nvar _default = {\n  methods: {\n    /**\r\n     * 完整校验，和 validate 的区别就是会给有效数据中的每一行进行校验\r\n     */\n    _fullValidate: function _fullValidate(rows, cb) {\n      return this.beginValidate(rows, cb, true);\n    },\n    /**\r\n     * 快速校验，如果存在记录不通过的记录，则返回不再继续校验（异步校验除外）\r\n     */\n    _validate: function _validate(rows, cb) {\n      return this.beginValidate(rows, cb);\n    },\n    /**\r\n     * 聚焦到校验通过的单元格并弹出校验错误提示\r\n     */\n    handleValidError: function handleValidError(params) {\n      var _this = this;\n      return new Promise(function (resolve) {\n        if (_this.validOpts.autoPos === false) {\n          _this.emitEvent('valid-error', params);\n          resolve();\n        } else {\n          _this.handleActived(params, {\n            type: 'valid-error',\n            trigger: 'call'\n          }).then(function () {\n            setTimeout(function () {\n              resolve(_this.showValidTooltip(params));\n            }, 10);\n          });\n        }\n      });\n    },\n    /**\r\n     * 对表格数据进行校验\r\n     * 如果不指定数据，则默认只校验临时变动的数据，例如新增或修改\r\n     * 如果传 true 则校验当前表格数据\r\n     * 如果传 row 指定行记录，则只验证传入的行\r\n     * 如果传 rows 为多行记录，则只验证传入的行\r\n     * 如果只传 callback 否则默认验证整个表格数据\r\n     * 返回 Promise 对象，或者使用回调方式\r\n     */\n    beginValidate: function beginValidate(rows, cb, isFull) {\n      var _this2 = this;\n      var validRest = {};\n      var editRules = this.editRules,\n        afterFullData = this.afterFullData,\n        treeConfig = this.treeConfig,\n        treeOpts = this.treeOpts;\n      var vaildDatas;\n      if (rows === true) {\n        vaildDatas = afterFullData;\n      } else if (rows) {\n        if (_xeUtils.default.isFunction(rows)) {\n          cb = rows;\n        } else {\n          vaildDatas = _xeUtils.default.isArray(rows) ? rows : [rows];\n        }\n      }\n      if (!vaildDatas) {\n        vaildDatas = this.getInsertRecords().concat(this.getUpdateRecords());\n      }\n      var rowValids = [];\n      this.lastCallTime = Date.now();\n      this.validRuleErr = false; // 如果为快速校验，当存在某列校验不通过时将终止执行\n      this.clearValidate();\n      if (editRules) {\n        var columns = this.getColumns();\n        var handleVaild = function handleVaild(row) {\n          if (isFull || !_this2.validRuleErr) {\n            var colVailds = [];\n            columns.forEach(function (column) {\n              if ((isFull || !_this2.validRuleErr) && _xeUtils.default.has(editRules, column.property)) {\n                colVailds.push(_this2.validCellRules('all', row, column).catch(function (_ref) {\n                  var rule = _ref.rule,\n                    rules = _ref.rules;\n                  var rest = {\n                    rule: rule,\n                    rules: rules,\n                    rowIndex: _this2.getRowIndex(row),\n                    row: row,\n                    columnIndex: _this2.getColumnIndex(column),\n                    column: column,\n                    field: column.property,\n                    $table: _this2\n                  };\n                  if (!validRest[column.property]) {\n                    validRest[column.property] = [];\n                  }\n                  validRest[column.property].push(rest);\n                  if (!isFull) {\n                    _this2.validRuleErr = true;\n                    return Promise.reject(rest);\n                  }\n                }));\n              }\n            });\n            rowValids.push(Promise.all(colVailds));\n          }\n        };\n        if (treeConfig) {\n          _xeUtils.default.eachTree(vaildDatas, handleVaild, treeOpts);\n        } else {\n          vaildDatas.forEach(handleVaild);\n        }\n        return Promise.all(rowValids).then(function () {\n          var ruleProps = Object.keys(validRest);\n          return _this2.$nextTick().then(function () {\n            if (ruleProps.length) {\n              return Promise.reject(validRest[ruleProps[0]][0]);\n            }\n            if (cb) {\n              cb();\n            }\n          });\n        }).catch(function (firstErrParams) {\n          return new Promise(function (resolve, reject) {\n            var finish = function finish() {\n              _this2.$nextTick(function () {\n                if (cb) {\n                  cb(validRest);\n                  resolve();\n                } else {\n                  if (_conf.default.validToReject === 'obsolete') {\n                    // 已废弃，校验失败将不会执行catch\n                    reject(validRest);\n                  } else {\n                    resolve(validRest);\n                  }\n                }\n              });\n            };\n            var posAndFinish = function posAndFinish() {\n              firstErrParams.cell = _this2.getCell(firstErrParams.row, firstErrParams.column);\n              _dom.default.scrollToView(firstErrParams.cell);\n              _this2.handleValidError(firstErrParams).then(finish);\n            };\n            /**\r\n             * 当校验不通过时\r\n             * 将表格滚动到可视区\r\n             * 由于提示信息至少需要占一行，定位向上偏移一行\r\n             */\n            var row = firstErrParams.row;\n            var rowIndex = afterFullData.indexOf(row);\n            var locatRow = rowIndex > 0 ? afterFullData[rowIndex - 1] : row;\n            if (_this2.validOpts.autoPos === false) {\n              finish();\n            } else {\n              if (treeConfig) {\n                _this2.scrollToTreeRow(locatRow).then(posAndFinish);\n              } else {\n                _this2.scrollToRow(locatRow).then(posAndFinish);\n              }\n            }\n          });\n        });\n      }\n      return this.$nextTick().then(function () {\n        if (cb) {\n          cb();\n        }\n      });\n    },\n    hasCellRules: function hasCellRules(type, row, column) {\n      var editRules = this.editRules;\n      var property = column.property;\n      if (property && editRules) {\n        var rules = _xeUtils.default.get(editRules, property);\n        return rules && _xeUtils.default.find(rules, function (rule) {\n          return type === 'all' || !rule.trigger || type === rule.trigger;\n        });\n      }\n      return false;\n    },\n    /**\r\n     * 校验数据\r\n     * 按表格行、列顺序依次校验（同步或异步）\r\n     * 校验规则根据索引顺序依次校验，如果是异步则会等待校验完成才会继续校验下一列\r\n     * 如果校验失败则，触发回调或者Promise<不通过列的错误消息>\r\n     * 如果是传回调方式这返回一个校验不通过列的错误消息\r\n     *\r\n     * rule 配置：\r\n     *  required=Boolean 是否必填\r\n     *  min=Number 最小长度\r\n     *  max=Number 最大长度\r\n     *  validator=Function({ cellValue, rule, rules, row, column, rowIndex, columnIndex }) 自定义校验，接收一个 Promise\r\n     *  trigger=blur|change 触发方式（除非特殊场景，否则默认为空就行）\r\n     */\n    validCellRules: function validCellRules(validType, row, column, val) {\n      var _this3 = this;\n      var editRules = this.editRules;\n      var property = column.property;\n      var errorRules = [];\n      var syncVailds = [];\n      if (property && editRules) {\n        var rules = _xeUtils.default.get(editRules, property);\n        if (rules) {\n          var cellValue = _xeUtils.default.isUndefined(val) ? _xeUtils.default.get(row, property) : val;\n          rules.forEach(function (rule) {\n            var type = rule.type,\n              trigger = rule.trigger,\n              required = rule.required;\n            if (validType === 'all' || !trigger || validType === trigger) {\n              if (_xeUtils.default.isFunction(rule.validator)) {\n                var customValid = rule.validator({\n                  cellValue: cellValue,\n                  rule: rule,\n                  rules: rules,\n                  row: row,\n                  rowIndex: _this3.getRowIndex(row),\n                  column: column,\n                  columnIndex: _this3.getColumnIndex(column),\n                  field: column.property,\n                  $table: _this3\n                });\n                if (customValid) {\n                  if (_xeUtils.default.isError(customValid)) {\n                    _this3.validRuleErr = true;\n                    errorRules.push(new Rule({\n                      type: 'custom',\n                      trigger: trigger,\n                      content: customValid.message,\n                      rule: new Rule(rule)\n                    }));\n                  } else if (customValid.catch) {\n                    // 如果为异步校验（注：异步校验是并发无序的）\n                    syncVailds.push(customValid.catch(function (e) {\n                      _this3.validRuleErr = true;\n                      errorRules.push(new Rule({\n                        type: 'custom',\n                        trigger: trigger,\n                        content: e && e.message ? e.message : rule.content || rule.message,\n                        rule: new Rule(rule)\n                      }));\n                    }));\n                  }\n                }\n              } else {\n                var isArrType = type === 'array';\n                var hasEmpty = isArrType || _xeUtils.default.isArray(cellValue) ? !_xeUtils.default.isArray(cellValue) || !cellValue.length : (0, _utils.eqEmptyValue)(cellValue);\n                if (required ? hasEmpty || validErrorRuleValue(rule, cellValue) : !hasEmpty && validErrorRuleValue(rule, cellValue)) {\n                  _this3.validRuleErr = true;\n                  errorRules.push(new Rule(rule));\n                }\n              }\n            }\n          });\n        }\n      }\n      return Promise.all(syncVailds).then(function () {\n        if (errorRules.length) {\n          var rest = {\n            rules: errorRules,\n            rule: errorRules[0]\n          };\n          return Promise.reject(rest);\n        }\n      });\n    },\n    _clearValidate: function _clearValidate() {\n      var validTip = this.$refs.validTip;\n      Object.assign(this.validStore, {\n        visible: false,\n        row: null,\n        column: null,\n        content: '',\n        rule: null\n      });\n      if (validTip && validTip.visible) {\n        validTip.close();\n      }\n      return this.$nextTick();\n    },\n    /**\r\n     * 触发校验\r\n     */\n    triggerValidate: function triggerValidate(type) {\n      var _this4 = this;\n      var editConfig = this.editConfig,\n        editStore = this.editStore,\n        editRules = this.editRules,\n        validStore = this.validStore;\n      var actived = editStore.actived;\n      if (actived.row && editRules) {\n        var _actived$args = actived.args,\n          row = _actived$args.row,\n          column = _actived$args.column,\n          cell = _actived$args.cell;\n        if (this.hasCellRules(type, row, column)) {\n          return this.validCellRules(type, row, column).then(function () {\n            if (editConfig.mode === 'row') {\n              if (validStore.visible && validStore.row === row && validStore.column === column) {\n                _this4.clearValidate();\n              }\n            }\n          }).catch(function (_ref2) {\n            var rule = _ref2.rule;\n            // 如果校验不通过与触发方式一致，则聚焦提示错误，否则跳过并不作任何处理\n            if (!rule.trigger || type === rule.trigger) {\n              var rest = {\n                rule: rule,\n                row: row,\n                column: column,\n                cell: cell\n              };\n              _this4.showValidTooltip(rest);\n              return Promise.reject(rest);\n            }\n            return Promise.resolve();\n          });\n        }\n      }\n      return Promise.resolve();\n    },\n    /**\r\n     * 弹出校验错误提示\r\n     */\n    showValidTooltip: function showValidTooltip(params) {\n      var _this5 = this;\n      var $refs = this.$refs,\n        height = this.height,\n        tableData = this.tableData,\n        validOpts = this.validOpts;\n      var rule = params.rule,\n        row = params.row,\n        column = params.column,\n        cell = params.cell;\n      var validTip = $refs.validTip;\n      var content = rule.content;\n      return this.$nextTick(function () {\n        Object.assign(_this5.validStore, {\n          row: row,\n          column: column,\n          rule: rule,\n          content: content,\n          visible: true\n        });\n        _this5.emitEvent('valid-error', params);\n        if (validTip && (validOpts.message === 'tooltip' || validOpts.message === 'default' && !height && tableData.length < 2)) {\n          return validTip.open(cell, content);\n        }\n      });\n    }\n  }\n};\nexports.default = _default;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_xeUtils","_interopRequireDefault","require","_conf","_utils","_dom","obj","__esModule","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","_createClass","protoProps","staticProps","prototype","Rule","rule","assign","$options","required","min","max","type","pattern","validator","trigger","maxWidth","get","getFuncText","content","message","validErrorRuleValue","val","isNumType","numVal","toNumber","getSize","isNaN","eqNull","isRegExp","RegExp","test","_default","methods","_fullValidate","rows","cb","beginValidate","_validate","handleValidError","params","_this","Promise","resolve","validOpts","autoPos","emitEvent","handleActived","then","setTimeout","showValidTooltip","isFull","_this2","validRest","editRules","afterFullData","treeConfig","treeOpts","vaildDatas","isFunction","isArray","getInsertRecords","concat","getUpdateRecords","rowValids","lastCallTime","Date","now","validRuleErr","clearValidate","columns","getColumns","handleVaild","row","colVailds","forEach","column","has","property","push","validCellRules","catch","_ref","rules","rest","rowIndex","getRowIndex","columnIndex","getColumnIndex","field","$table","reject","all","eachTree","ruleProps","keys","$nextTick","firstErrParams","finish","validToReject","posAndFinish","cell","getCell","scrollToView","indexOf","locatRow","scrollToTreeRow","scrollToRow","hasCellRules","find","validType","_this3","errorRules","syncVailds","cellValue","isUndefined","customValid","isError","e","isArrType","hasEmpty","eqEmptyValue","_clearValidate","validTip","$refs","validStore","visible","close","triggerValidate","_this4","editConfig","editStore","actived","_actived$args","args","mode","_ref2","_this5","height","tableData","open"],"sources":["D:/program/LanqiaoVue/vue-demo/node_modules/vxe-table/lib/validator/src/mixin.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _xeUtils = _interopRequireDefault(require(\"xe-utils\"));\nvar _conf = _interopRequireDefault(require(\"../../v-x-e-table/src/conf\"));\nvar _utils = require(\"../../tools/utils\");\nvar _dom = _interopRequireDefault(require(\"../../tools/dom\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n/**\r\n * 校验规则\r\n */\nvar Rule = /*#__PURE__*/function () {\n  function Rule(rule) {\n    _classCallCheck(this, Rule);\n    Object.assign(this, {\n      $options: rule,\n      required: rule.required,\n      min: rule.min,\n      max: rule.max,\n      type: rule.type,\n      pattern: rule.pattern,\n      validator: rule.validator,\n      trigger: rule.trigger,\n      maxWidth: rule.maxWidth\n    });\n  }\n\n  /**\r\n   * 获取校验不通过的消息\r\n   * 支持国际化翻译\r\n   */\n  _createClass(Rule, [{\n    key: \"content\",\n    get: function get() {\n      return (0, _utils.getFuncText)(this.$options.content || this.$options.message);\n    }\n  }, {\n    key: \"message\",\n    get: function get() {\n      return this.content;\n    }\n  }]);\n  return Rule;\n}();\nfunction validErrorRuleValue(rule, val) {\n  var type = rule.type,\n    min = rule.min,\n    max = rule.max,\n    pattern = rule.pattern;\n  var isNumType = type === 'number';\n  var numVal = isNumType ? _xeUtils.default.toNumber(val) : _xeUtils.default.getSize(val);\n  // 判断数值\n  if (isNumType && isNaN(val)) {\n    return true;\n  }\n  // 如果存在 min，判断最小值\n  if (!_xeUtils.default.eqNull(min) && numVal < _xeUtils.default.toNumber(min)) {\n    return true;\n  }\n  // 如果存在 max，判断最大值\n  if (!_xeUtils.default.eqNull(max) && numVal > _xeUtils.default.toNumber(max)) {\n    return true;\n  }\n  // 如果存在 pattern，正则校验\n  if (pattern && !(_xeUtils.default.isRegExp(pattern) ? pattern : new RegExp(pattern)).test(val)) {\n    return true;\n  }\n  return false;\n}\nvar _default = {\n  methods: {\n    /**\r\n     * 完整校验，和 validate 的区别就是会给有效数据中的每一行进行校验\r\n     */\n    _fullValidate: function _fullValidate(rows, cb) {\n      return this.beginValidate(rows, cb, true);\n    },\n    /**\r\n     * 快速校验，如果存在记录不通过的记录，则返回不再继续校验（异步校验除外）\r\n     */\n    _validate: function _validate(rows, cb) {\n      return this.beginValidate(rows, cb);\n    },\n    /**\r\n     * 聚焦到校验通过的单元格并弹出校验错误提示\r\n     */\n    handleValidError: function handleValidError(params) {\n      var _this = this;\n      return new Promise(function (resolve) {\n        if (_this.validOpts.autoPos === false) {\n          _this.emitEvent('valid-error', params);\n          resolve();\n        } else {\n          _this.handleActived(params, {\n            type: 'valid-error',\n            trigger: 'call'\n          }).then(function () {\n            setTimeout(function () {\n              resolve(_this.showValidTooltip(params));\n            }, 10);\n          });\n        }\n      });\n    },\n    /**\r\n     * 对表格数据进行校验\r\n     * 如果不指定数据，则默认只校验临时变动的数据，例如新增或修改\r\n     * 如果传 true 则校验当前表格数据\r\n     * 如果传 row 指定行记录，则只验证传入的行\r\n     * 如果传 rows 为多行记录，则只验证传入的行\r\n     * 如果只传 callback 否则默认验证整个表格数据\r\n     * 返回 Promise 对象，或者使用回调方式\r\n     */\n    beginValidate: function beginValidate(rows, cb, isFull) {\n      var _this2 = this;\n      var validRest = {};\n      var editRules = this.editRules,\n        afterFullData = this.afterFullData,\n        treeConfig = this.treeConfig,\n        treeOpts = this.treeOpts;\n      var vaildDatas;\n      if (rows === true) {\n        vaildDatas = afterFullData;\n      } else if (rows) {\n        if (_xeUtils.default.isFunction(rows)) {\n          cb = rows;\n        } else {\n          vaildDatas = _xeUtils.default.isArray(rows) ? rows : [rows];\n        }\n      }\n      if (!vaildDatas) {\n        vaildDatas = this.getInsertRecords().concat(this.getUpdateRecords());\n      }\n      var rowValids = [];\n      this.lastCallTime = Date.now();\n      this.validRuleErr = false; // 如果为快速校验，当存在某列校验不通过时将终止执行\n      this.clearValidate();\n      if (editRules) {\n        var columns = this.getColumns();\n        var handleVaild = function handleVaild(row) {\n          if (isFull || !_this2.validRuleErr) {\n            var colVailds = [];\n            columns.forEach(function (column) {\n              if ((isFull || !_this2.validRuleErr) && _xeUtils.default.has(editRules, column.property)) {\n                colVailds.push(_this2.validCellRules('all', row, column).catch(function (_ref) {\n                  var rule = _ref.rule,\n                    rules = _ref.rules;\n                  var rest = {\n                    rule: rule,\n                    rules: rules,\n                    rowIndex: _this2.getRowIndex(row),\n                    row: row,\n                    columnIndex: _this2.getColumnIndex(column),\n                    column: column,\n                    field: column.property,\n                    $table: _this2\n                  };\n                  if (!validRest[column.property]) {\n                    validRest[column.property] = [];\n                  }\n                  validRest[column.property].push(rest);\n                  if (!isFull) {\n                    _this2.validRuleErr = true;\n                    return Promise.reject(rest);\n                  }\n                }));\n              }\n            });\n            rowValids.push(Promise.all(colVailds));\n          }\n        };\n        if (treeConfig) {\n          _xeUtils.default.eachTree(vaildDatas, handleVaild, treeOpts);\n        } else {\n          vaildDatas.forEach(handleVaild);\n        }\n        return Promise.all(rowValids).then(function () {\n          var ruleProps = Object.keys(validRest);\n          return _this2.$nextTick().then(function () {\n            if (ruleProps.length) {\n              return Promise.reject(validRest[ruleProps[0]][0]);\n            }\n            if (cb) {\n              cb();\n            }\n          });\n        }).catch(function (firstErrParams) {\n          return new Promise(function (resolve, reject) {\n            var finish = function finish() {\n              _this2.$nextTick(function () {\n                if (cb) {\n                  cb(validRest);\n                  resolve();\n                } else {\n                  if (_conf.default.validToReject === 'obsolete') {\n                    // 已废弃，校验失败将不会执行catch\n                    reject(validRest);\n                  } else {\n                    resolve(validRest);\n                  }\n                }\n              });\n            };\n            var posAndFinish = function posAndFinish() {\n              firstErrParams.cell = _this2.getCell(firstErrParams.row, firstErrParams.column);\n              _dom.default.scrollToView(firstErrParams.cell);\n              _this2.handleValidError(firstErrParams).then(finish);\n            };\n            /**\r\n             * 当校验不通过时\r\n             * 将表格滚动到可视区\r\n             * 由于提示信息至少需要占一行，定位向上偏移一行\r\n             */\n            var row = firstErrParams.row;\n            var rowIndex = afterFullData.indexOf(row);\n            var locatRow = rowIndex > 0 ? afterFullData[rowIndex - 1] : row;\n            if (_this2.validOpts.autoPos === false) {\n              finish();\n            } else {\n              if (treeConfig) {\n                _this2.scrollToTreeRow(locatRow).then(posAndFinish);\n              } else {\n                _this2.scrollToRow(locatRow).then(posAndFinish);\n              }\n            }\n          });\n        });\n      }\n      return this.$nextTick().then(function () {\n        if (cb) {\n          cb();\n        }\n      });\n    },\n    hasCellRules: function hasCellRules(type, row, column) {\n      var editRules = this.editRules;\n      var property = column.property;\n      if (property && editRules) {\n        var rules = _xeUtils.default.get(editRules, property);\n        return rules && _xeUtils.default.find(rules, function (rule) {\n          return type === 'all' || !rule.trigger || type === rule.trigger;\n        });\n      }\n      return false;\n    },\n    /**\r\n     * 校验数据\r\n     * 按表格行、列顺序依次校验（同步或异步）\r\n     * 校验规则根据索引顺序依次校验，如果是异步则会等待校验完成才会继续校验下一列\r\n     * 如果校验失败则，触发回调或者Promise<不通过列的错误消息>\r\n     * 如果是传回调方式这返回一个校验不通过列的错误消息\r\n     *\r\n     * rule 配置：\r\n     *  required=Boolean 是否必填\r\n     *  min=Number 最小长度\r\n     *  max=Number 最大长度\r\n     *  validator=Function({ cellValue, rule, rules, row, column, rowIndex, columnIndex }) 自定义校验，接收一个 Promise\r\n     *  trigger=blur|change 触发方式（除非特殊场景，否则默认为空就行）\r\n     */\n    validCellRules: function validCellRules(validType, row, column, val) {\n      var _this3 = this;\n      var editRules = this.editRules;\n      var property = column.property;\n      var errorRules = [];\n      var syncVailds = [];\n      if (property && editRules) {\n        var rules = _xeUtils.default.get(editRules, property);\n        if (rules) {\n          var cellValue = _xeUtils.default.isUndefined(val) ? _xeUtils.default.get(row, property) : val;\n          rules.forEach(function (rule) {\n            var type = rule.type,\n              trigger = rule.trigger,\n              required = rule.required;\n            if (validType === 'all' || !trigger || validType === trigger) {\n              if (_xeUtils.default.isFunction(rule.validator)) {\n                var customValid = rule.validator({\n                  cellValue: cellValue,\n                  rule: rule,\n                  rules: rules,\n                  row: row,\n                  rowIndex: _this3.getRowIndex(row),\n                  column: column,\n                  columnIndex: _this3.getColumnIndex(column),\n                  field: column.property,\n                  $table: _this3\n                });\n                if (customValid) {\n                  if (_xeUtils.default.isError(customValid)) {\n                    _this3.validRuleErr = true;\n                    errorRules.push(new Rule({\n                      type: 'custom',\n                      trigger: trigger,\n                      content: customValid.message,\n                      rule: new Rule(rule)\n                    }));\n                  } else if (customValid.catch) {\n                    // 如果为异步校验（注：异步校验是并发无序的）\n                    syncVailds.push(customValid.catch(function (e) {\n                      _this3.validRuleErr = true;\n                      errorRules.push(new Rule({\n                        type: 'custom',\n                        trigger: trigger,\n                        content: e && e.message ? e.message : rule.content || rule.message,\n                        rule: new Rule(rule)\n                      }));\n                    }));\n                  }\n                }\n              } else {\n                var isArrType = type === 'array';\n                var hasEmpty = isArrType || _xeUtils.default.isArray(cellValue) ? !_xeUtils.default.isArray(cellValue) || !cellValue.length : (0, _utils.eqEmptyValue)(cellValue);\n                if (required ? hasEmpty || validErrorRuleValue(rule, cellValue) : !hasEmpty && validErrorRuleValue(rule, cellValue)) {\n                  _this3.validRuleErr = true;\n                  errorRules.push(new Rule(rule));\n                }\n              }\n            }\n          });\n        }\n      }\n      return Promise.all(syncVailds).then(function () {\n        if (errorRules.length) {\n          var rest = {\n            rules: errorRules,\n            rule: errorRules[0]\n          };\n          return Promise.reject(rest);\n        }\n      });\n    },\n    _clearValidate: function _clearValidate() {\n      var validTip = this.$refs.validTip;\n      Object.assign(this.validStore, {\n        visible: false,\n        row: null,\n        column: null,\n        content: '',\n        rule: null\n      });\n      if (validTip && validTip.visible) {\n        validTip.close();\n      }\n      return this.$nextTick();\n    },\n    /**\r\n     * 触发校验\r\n     */\n    triggerValidate: function triggerValidate(type) {\n      var _this4 = this;\n      var editConfig = this.editConfig,\n        editStore = this.editStore,\n        editRules = this.editRules,\n        validStore = this.validStore;\n      var actived = editStore.actived;\n      if (actived.row && editRules) {\n        var _actived$args = actived.args,\n          row = _actived$args.row,\n          column = _actived$args.column,\n          cell = _actived$args.cell;\n        if (this.hasCellRules(type, row, column)) {\n          return this.validCellRules(type, row, column).then(function () {\n            if (editConfig.mode === 'row') {\n              if (validStore.visible && validStore.row === row && validStore.column === column) {\n                _this4.clearValidate();\n              }\n            }\n          }).catch(function (_ref2) {\n            var rule = _ref2.rule;\n            // 如果校验不通过与触发方式一致，则聚焦提示错误，否则跳过并不作任何处理\n            if (!rule.trigger || type === rule.trigger) {\n              var rest = {\n                rule: rule,\n                row: row,\n                column: column,\n                cell: cell\n              };\n              _this4.showValidTooltip(rest);\n              return Promise.reject(rest);\n            }\n            return Promise.resolve();\n          });\n        }\n      }\n      return Promise.resolve();\n    },\n    /**\r\n     * 弹出校验错误提示\r\n     */\n    showValidTooltip: function showValidTooltip(params) {\n      var _this5 = this;\n      var $refs = this.$refs,\n        height = this.height,\n        tableData = this.tableData,\n        validOpts = this.validOpts;\n      var rule = params.rule,\n        row = params.row,\n        column = params.column,\n        cell = params.cell;\n      var validTip = $refs.validTip;\n      var content = rule.content;\n      return this.$nextTick(function () {\n        Object.assign(_this5.validStore, {\n          row: row,\n          column: column,\n          rule: rule,\n          content: content,\n          visible: true\n        });\n        _this5.emitEvent('valid-error', params);\n        if (validTip && (validOpts.message === 'tooltip' || validOpts.message === 'default' && !height && tableData.length < 2)) {\n          return validTip.open(cell, content);\n        }\n      });\n    }\n  }\n};\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}