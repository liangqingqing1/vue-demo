{"ast":null,"code":"require(\"core-js/modules/es.regexp.exec.js\");\nrequire(\"core-js/modules/es.string.replace.js\");\nrequire(\"core-js/modules/es.regexp.constructor.js\");\nrequire(\"core-js/modules/es.regexp.dot-all.js\");\nrequire(\"core-js/modules/es.regexp.sticky.js\");\nrequire(\"core-js/modules/es.regexp.to-string.js\");\nvar setupDefaults = require('./setupDefaults');\nvar round = require('./round');\nvar ceil = require('./ceil');\nvar floor = require('./floor');\nvar isNumber = require('./isNumber');\nvar toValueString = require('./toValueString');\nvar toFixed = require('./toFixed');\nvar toNumberString = require('./toNumberString');\nvar assign = require('./assign');\n\n/**\r\n  * 千分位分隔符、小数点\r\n  *\r\n  * @param {String/Number} num 数值\r\n  * @param {CommafyOptions} options 参数\r\n  * @return {String}\r\n */\nfunction commafy(num, options) {\n  var opts = assign({}, setupDefaults.commafyOptions, options);\n  var optDigits = opts.digits;\n  var isNum = isNumber(num);\n  var rest, result, isNegative, intStr, floatStr;\n  if (isNum) {\n    rest = (opts.ceil ? ceil : opts.floor ? floor : round)(num, optDigits);\n    result = toNumberString(optDigits ? toFixed(rest, optDigits) : rest).split('.');\n    intStr = result[0];\n    floatStr = result[1];\n    isNegative = intStr && rest < 0;\n    if (isNegative) {\n      intStr = intStr.substring(1, intStr.length);\n    }\n  } else {\n    rest = toValueString(num).replace(/,/g, '');\n    result = rest ? [rest] : [];\n    intStr = result[0];\n  }\n  if (result.length) {\n    return (isNegative ? '-' : '') + intStr.replace(new RegExp('(?=(?!(\\\\b))(.{' + (opts.spaceNumber || 3) + '})+$)', 'g'), opts.separator || ',') + (floatStr ? '.' + floatStr : '');\n  }\n  return rest;\n}\nmodule.exports = commafy;","map":{"version":3,"names":["setupDefaults","require","round","ceil","floor","isNumber","toValueString","toFixed","toNumberString","assign","commafy","num","options","opts","commafyOptions","optDigits","digits","isNum","rest","result","isNegative","intStr","floatStr","split","substring","length","replace","RegExp","spaceNumber","separator","module","exports"],"sources":["D:/program/LanqiaoVue/vue-demo/node_modules/xe-utils/commafy.js"],"sourcesContent":["var setupDefaults = require('./setupDefaults')\r\n\r\nvar round = require('./round')\r\nvar ceil = require('./ceil')\r\nvar floor = require('./floor')\r\n\r\nvar isNumber = require('./isNumber')\r\nvar toValueString = require('./toValueString')\r\nvar toFixed = require('./toFixed')\r\n\r\nvar toNumberString = require('./toNumberString')\r\nvar assign = require('./assign')\r\n\r\n/**\r\n  * 千分位分隔符、小数点\r\n  *\r\n  * @param {String/Number} num 数值\r\n  * @param {CommafyOptions} options 参数\r\n  * @return {String}\r\n */\r\nfunction commafy(num, options) {\r\n  var opts = assign({}, setupDefaults.commafyOptions, options)\r\n  var optDigits = opts.digits\r\n  var isNum = isNumber(num)\r\n  var rest, result, isNegative, intStr, floatStr\r\n  if (isNum) {\r\n    rest = (opts.ceil ? ceil : (opts.floor ? floor : round))(num, optDigits)\r\n    result = toNumberString(optDigits ? toFixed(rest, optDigits) : rest).split('.')\r\n    intStr = result[0]\r\n    floatStr = result[1]\r\n    isNegative = intStr && rest < 0\r\n    if (isNegative) {\r\n      intStr = intStr.substring(1, intStr.length)\r\n    }\r\n  } else {\r\n    rest = toValueString(num).replace(/,/g, '')\r\n    result = rest ? [rest] : []\r\n    intStr = result[0]\r\n  }\r\n  if (result.length) {\r\n    return (isNegative ? '-' : '') + intStr.replace(new RegExp('(?=(?!(\\\\b))(.{' + (opts.spaceNumber || 3) + '})+$)', 'g'), (opts.separator || ',')) + (floatStr ? ('.' + floatStr) : '')\r\n  }\r\n  return rest\r\n}\r\n\r\nmodule.exports = commafy\r\n"],"mappings":";;;;;;AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAE9C,IAAIC,KAAK,GAAGD,OAAO,CAAC,SAAS,CAAC;AAC9B,IAAIE,IAAI,GAAGF,OAAO,CAAC,QAAQ,CAAC;AAC5B,IAAIG,KAAK,GAAGH,OAAO,CAAC,SAAS,CAAC;AAE9B,IAAII,QAAQ,GAAGJ,OAAO,CAAC,YAAY,CAAC;AACpC,IAAIK,aAAa,GAAGL,OAAO,CAAC,iBAAiB,CAAC;AAC9C,IAAIM,OAAO,GAAGN,OAAO,CAAC,WAAW,CAAC;AAElC,IAAIO,cAAc,GAAGP,OAAO,CAAC,kBAAkB,CAAC;AAChD,IAAIQ,MAAM,GAAGR,OAAO,CAAC,UAAU,CAAC;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASS,OAAO,CAACC,GAAG,EAAEC,OAAO,EAAE;EAC7B,IAAIC,IAAI,GAAGJ,MAAM,CAAC,CAAC,CAAC,EAAET,aAAa,CAACc,cAAc,EAAEF,OAAO,CAAC;EAC5D,IAAIG,SAAS,GAAGF,IAAI,CAACG,MAAM;EAC3B,IAAIC,KAAK,GAAGZ,QAAQ,CAACM,GAAG,CAAC;EACzB,IAAIO,IAAI,EAAEC,MAAM,EAAEC,UAAU,EAAEC,MAAM,EAAEC,QAAQ;EAC9C,IAAIL,KAAK,EAAE;IACTC,IAAI,GAAG,CAACL,IAAI,CAACV,IAAI,GAAGA,IAAI,GAAIU,IAAI,CAACT,KAAK,GAAGA,KAAK,GAAGF,KAAM,EAAES,GAAG,EAAEI,SAAS,CAAC;IACxEI,MAAM,GAAGX,cAAc,CAACO,SAAS,GAAGR,OAAO,CAACW,IAAI,EAAEH,SAAS,CAAC,GAAGG,IAAI,CAAC,CAACK,KAAK,CAAC,GAAG,CAAC;IAC/EF,MAAM,GAAGF,MAAM,CAAC,CAAC,CAAC;IAClBG,QAAQ,GAAGH,MAAM,CAAC,CAAC,CAAC;IACpBC,UAAU,GAAGC,MAAM,IAAIH,IAAI,GAAG,CAAC;IAC/B,IAAIE,UAAU,EAAE;MACdC,MAAM,GAAGA,MAAM,CAACG,SAAS,CAAC,CAAC,EAAEH,MAAM,CAACI,MAAM,CAAC;IAC7C;EACF,CAAC,MAAM;IACLP,IAAI,GAAGZ,aAAa,CAACK,GAAG,CAAC,CAACe,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;IAC3CP,MAAM,GAAGD,IAAI,GAAG,CAACA,IAAI,CAAC,GAAG,EAAE;IAC3BG,MAAM,GAAGF,MAAM,CAAC,CAAC,CAAC;EACpB;EACA,IAAIA,MAAM,CAACM,MAAM,EAAE;IACjB,OAAO,CAACL,UAAU,GAAG,GAAG,GAAG,EAAE,IAAIC,MAAM,CAACK,OAAO,CAAC,IAAIC,MAAM,CAAC,iBAAiB,IAAId,IAAI,CAACe,WAAW,IAAI,CAAC,CAAC,GAAG,OAAO,EAAE,GAAG,CAAC,EAAGf,IAAI,CAACgB,SAAS,IAAI,GAAG,CAAE,IAAIP,QAAQ,GAAI,GAAG,GAAGA,QAAQ,GAAI,EAAE,CAAC;EACvL;EACA,OAAOJ,IAAI;AACb;AAEAY,MAAM,CAACC,OAAO,GAAGrB,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}