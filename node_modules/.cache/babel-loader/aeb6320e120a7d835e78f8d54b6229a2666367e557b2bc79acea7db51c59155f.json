{"ast":null,"code":"import \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { defineComponent, getCurrentInstance, onMounted, reactive } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getUserList } from \"../../api/system\";\nexport default {\n  data: function data() {\n    return {\n      getTableData: [],\n      data: {\n        filterName: '',\n        list: [],\n        tableData: []\n      }\n    };\n  },\n  methods: {\n    GetUserList: function GetUserList() {\n      console.log(\"GetUserList()\");\n      getUserList().then(function (res) {\n        data.tableData = res.data.data;\n        data.list = res.data.data;\n      });\n    }\n  },\n  mounted: function mounted() {},\n  // setup表示允许在组件内部定义响应式状态和事件处理逻辑\n  setup: function setup() {\n    console.log(\"setup\");\n    var data = reactive({\n      filterName: '',\n      list: [],\n      tableData: []\n    });\n\n    //挂载后调用函数获取项目数据\n    onMounted(function () {});\n    var searchEvent1 = function searchEvent1() {\n      var filterName = XEUtils.toValueString(data.filterName).trim().toLowerCase();\n      if (filterName) {\n        var filterRE = new RegExp(filterName, 'gi');\n        var searchProps = ['nickName', 'username'];\n        var rest = data.tableData.filter(function (item) {\n          return searchProps.some(function (key) {\n            return XEUtils.toValueString(item[key]).toLowerCase().indexOf(filterName) > -1;\n          });\n        });\n        data.list = rest.map(function (row) {\n          var item = Object.assign({}, row);\n          searchProps.forEach(function (key) {\n            item[key] = XEUtils.toValueString(item[key]).replace(filterRE, function (match) {\n              return \"<span class=\\\"keyword-lighten\\\">\".concat(match, \"</span>\");\n            });\n          });\n          return item;\n        });\n      } else {\n        data.list = data.tableData;\n      }\n    };\n    searchEvent1();\n    return {\n      data: data,\n      searchEvent1: searchEvent1\n    };\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;AAuCA;AACA;AACA;AAEA;EACAA;IACA;MACAC;MACAD;QACAE;QACAC;QACAC;MACA;IACA;EACA;EACAC;IACAC;MACAC;MACAC;QACAR;QACAA;MACA;IACA;EACA;EACAS,6BAEA;EACA;EACAC;IACAH;IACA;MACAL;MACAC;MACAC;IACA;;IAEA;IACAO,uBAEA;IACA;MACA;MACA;QACA;QACA;QACA;UAAA;YAAA;UAAA;QAAA;QACAX;UACA;UACAY;YACAC;cAAA;YAAA;UACA;UACA;QACA;MACA;QACAb;MACA;IACA;IACAc;IACA;MACAd;MACAc;IACA;EACA;AAEA","names":["data","getTableData","filterName","list","tableData","methods","GetUserList","console","getUserList","mounted","setup","onMounted","searchProps","item","searchEvent1"],"sourceRoot":"src/views/system","sources":["logList.vue"],"sourcesContent":["<template>\r\n    <div id=\"view\">\r\n      <div id=\"box\">\r\n        <vxe-toolbar>\r\n            <template #buttons>\r\n              <vxe-input v-model=\"data.filterName\" type=\"search\" placeholder=\"输入账号或姓名\" @keyup=\"searchEvent1()\"></vxe-input>\r\n              <vxe-button>重置</vxe-button>\r\n              <vxe-button status=\"primary\" icon=\"vxe-icon-square-plus\" @click=\"insertEvent()\">新增</vxe-button>\r\n            </template>\r\n          </vxe-toolbar>\r\n          <vxe-table :data=\"data.list\" class=\"table\"\r\n              border\r\n              ref=\"userTable\"\r\n              height=\"83%\"\r\n              :row-config=\"{isHover: true}\">\r\n              <vxe-column type=\"seq\" width=\"100\"></vxe-column>\r\n              <vxe-column field=\"nickName\" title=\"姓名\" width=\"100\" sortable type=\"html\"></vxe-column>\r\n              <vxe-column field=\"username\" title=\"账号\" width=\"100\" type=\"html\"></vxe-column>\r\n              <vxe-column field=\"mobile\" title=\"电话\" width=\"120\"></vxe-column>\r\n              <vxe-column class=\"test\" field=\"identity\" title=\"身份证\" width=\"100\"></vxe-column>\r\n              <vxe-column field=\"homeAddress\" title=\"家庭住址\" width=\"150\"></vxe-column>\r\n              <vxe-column field=\"onboardingTime\" title=\"入职时间\" width=\"130\" sortable></vxe-column>\r\n              <vxe-column field=\"departureTime\" title=\"离职时间\" width=\"130\" sortable></vxe-column>\r\n              <vxe-column field=\"status\" title=\"状态\" width=\"100\"></vxe-column>\r\n              <vxe-column field=\"departureTime\" title=\"操作\" width=\"180\">\r\n                <vxe-button status=\"primary\" content=\"编辑\"></vxe-button>\r\n                <vxe-button status=\"danger\" content=\"删除\"></vxe-button>\r\n              </vxe-column>\r\n              <template #empty>\r\n              <span style=\"color: red;\">\r\n                <img src=\"https://n.sinaimg.cn/sinacn17/w120h120/20180314/89fc-fyscsmv5911424.gif\">\r\n                <p>没有更多数据了！</p>\r\n              </span>\r\n            </template>\r\n        </vxe-table>\r\n    </div>\r\n  </div>\r\n  </template>\r\n  <script>\r\n  import { defineComponent,getCurrentInstance,onMounted ,reactive } from 'vue'\r\n  import XEUtils from 'xe-utils'\r\n  import {getUserList} from \"../../api/system\"\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        getTableData:[],\r\n        data:{\r\n            filterName: '',\r\n            list: [],\r\n            tableData:[]\r\n        }\r\n      }\r\n    },\r\n    methods:{\r\n        GetUserList(){\r\n          console.log(\"GetUserList()\")\r\n          getUserList().then((res)=>{\r\n            data.tableData=res.data.data\r\n            data.list=res.data.data\r\n          })\r\n        }\r\n    },\r\n    mounted:function(){\r\n\r\n    },\r\n    // setup表示允许在组件内部定义响应式状态和事件处理逻辑\r\n      setup () {\r\n        console.log(\"setup\")\r\n        let data = reactive({\r\n          filterName: '',\r\n          list: [],\r\n          tableData:[]\r\n        })\r\n\r\n         //挂载后调用函数获取项目数据\r\n        onMounted(() => {\r\n          \r\n        });\r\n        const searchEvent1 = () => {\r\n          const filterName = XEUtils.toValueString(data.filterName).trim().toLowerCase()\r\n          if (filterName) {\r\n            const filterRE = new RegExp(filterName, 'gi')\r\n            const searchProps = ['nickName','username']\r\n            const rest = data.tableData.filter(item => searchProps.some(key => XEUtils.toValueString(item[key]).toLowerCase().indexOf(filterName) > -1))\r\n            data.list = rest.map(row => {\r\n              const item = Object.assign({}, row)\r\n              searchProps.forEach(key => {\r\n                item[key] = XEUtils.toValueString(item[key]).replace(filterRE, match => `<span class=\"keyword-lighten\">${match}</span>`)\r\n              })\r\n              return item\r\n            })\r\n          } else {\r\n            data.list = data.tableData\r\n          }\r\n        }\r\n        searchEvent1()\r\n          return {\r\n            data,\r\n            searchEvent1\r\n        }\r\n      },\r\n  \r\n    }\r\n  \r\n  </script>\r\n    \r\n    <style scoped>\r\n    #box{\r\n      width: 95%;\r\n      height: 100%;\r\n      margin: auto;\r\n      margin-top: 20px;\r\n    }\r\n    #box .table{\r\n      margin-top: 20px;\r\n      margin: auto;\r\n    }\r\n    </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}