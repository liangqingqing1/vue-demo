{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.error.cause.js\");\nrequire(\"core-js/modules/es.array.slice.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/es.function.name.js\");\nrequire(\"core-js/modules/es.array.from.js\");\nrequire(\"core-js/modules/es.string.iterator.js\");\nrequire(\"core-js/modules/es.regexp.exec.js\");\nrequire(\"core-js/modules/es.regexp.test.js\");\nrequire(\"core-js/modules/es.symbol.js\");\nrequire(\"core-js/modules/es.symbol.description.js\");\nrequire(\"core-js/modules/es.symbol.iterator.js\");\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertToRows = void 0;\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nvar getAllColumns = function getAllColumns(columns, parentColumn) {\n  var result = [];\n  columns.forEach(function (column) {\n    column.parentId = parentColumn ? parentColumn.id : null;\n    if (column.visible) {\n      if (column.children && column.children.length && column.children.some(function (column) {\n        return column.visible;\n      })) {\n        result.push(column);\n        result.push.apply(result, _toConsumableArray(getAllColumns(column.children, column)));\n      } else {\n        result.push(column);\n      }\n    }\n  });\n  return result;\n};\nvar convertToRows = function convertToRows(originColumns) {\n  var maxLevel = 1;\n  var traverse = function traverse(column, parent) {\n    if (parent) {\n      column.level = parent.level + 1;\n      if (maxLevel < column.level) {\n        maxLevel = column.level;\n      }\n    }\n    if (column.children && column.children.length && column.children.some(function (column) {\n      return column.visible;\n    })) {\n      var colSpan = 0;\n      column.children.forEach(function (subColumn) {\n        if (subColumn.visible) {\n          traverse(subColumn, column);\n          colSpan += subColumn.colSpan;\n        }\n      });\n      column.colSpan = colSpan;\n    } else {\n      column.colSpan = 1;\n    }\n  };\n  originColumns.forEach(function (column) {\n    column.level = 1;\n    traverse(column);\n  });\n  var rows = [];\n  for (var i = 0; i < maxLevel; i++) {\n    rows.push([]);\n  }\n  var allColumns = getAllColumns(originColumns);\n  allColumns.forEach(function (column) {\n    if (column.children && column.children.length && column.children.some(function (column) {\n      return column.visible;\n    })) {\n      column.rowSpan = 1;\n    } else {\n      column.rowSpan = maxLevel - column.level + 1;\n    }\n    rows[column.level - 1].push(column);\n  });\n  return rows;\n};\nexports.convertToRows = convertToRows;","map":{"version":3,"names":["Object","defineProperty","exports","value","convertToRows","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","prototype","toString","call","slice","constructor","name","Array","from","test","iter","Symbol","iterator","isArray","len","length","i","arr2","getAllColumns","columns","parentColumn","result","forEach","column","parentId","id","visible","children","some","push","apply","originColumns","maxLevel","traverse","parent","level","colSpan","subColumn","rows","allColumns","rowSpan"],"sources":["D:/program/LanqiaoVue/vue-demo/node_modules/vxe-table/lib/header/src/util.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.convertToRows = void 0;\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nvar getAllColumns = function getAllColumns(columns, parentColumn) {\n  var result = [];\n  columns.forEach(function (column) {\n    column.parentId = parentColumn ? parentColumn.id : null;\n    if (column.visible) {\n      if (column.children && column.children.length && column.children.some(function (column) {\n        return column.visible;\n      })) {\n        result.push(column);\n        result.push.apply(result, _toConsumableArray(getAllColumns(column.children, column)));\n      } else {\n        result.push(column);\n      }\n    }\n  });\n  return result;\n};\nvar convertToRows = function convertToRows(originColumns) {\n  var maxLevel = 1;\n  var traverse = function traverse(column, parent) {\n    if (parent) {\n      column.level = parent.level + 1;\n      if (maxLevel < column.level) {\n        maxLevel = column.level;\n      }\n    }\n    if (column.children && column.children.length && column.children.some(function (column) {\n      return column.visible;\n    })) {\n      var colSpan = 0;\n      column.children.forEach(function (subColumn) {\n        if (subColumn.visible) {\n          traverse(subColumn, column);\n          colSpan += subColumn.colSpan;\n        }\n      });\n      column.colSpan = colSpan;\n    } else {\n      column.colSpan = 1;\n    }\n  };\n  originColumns.forEach(function (column) {\n    column.level = 1;\n    traverse(column);\n  });\n  var rows = [];\n  for (var i = 0; i < maxLevel; i++) {\n    rows.push([]);\n  }\n  var allColumns = getAllColumns(originColumns);\n  allColumns.forEach(function (column) {\n    if (column.children && column.children.length && column.children.some(function (column) {\n      return column.visible;\n    })) {\n      column.rowSpan = 1;\n    } else {\n      column.rowSpan = maxLevel - column.level + 1;\n    }\n    rows[column.level - 1].push(column);\n  });\n  return rows;\n};\nexports.convertToRows = convertToRows;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}