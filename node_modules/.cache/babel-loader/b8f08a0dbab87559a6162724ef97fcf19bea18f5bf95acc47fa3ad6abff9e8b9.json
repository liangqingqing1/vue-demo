{"ast":null,"code":"require(\"core-js/modules/es.array.push.js\");\nvar setupDefaults = require('./setupDefaults');\nvar each = require('./each');\nvar assign = require('./assign');\nfunction unTreeList(result, array, opts) {\n  var optChildren = opts.children;\n  var optData = opts.data;\n  var optClear = opts.clear;\n  each(array, function (item) {\n    var children = item[optChildren];\n    if (optData) {\n      item = item[optData];\n    }\n    result.push(item);\n    if (children && children.length) {\n      unTreeList(result, children, opts);\n    }\n    if (optClear) {\n      delete item[optChildren];\n    }\n  });\n  return result;\n}\n\n/**\r\n  * 将一个树结构转成数组列表\r\n  *\r\n  * @param {Array} array 数组\r\n  * @param {Object} options { children: 'children', data: 'data', clear: false }\r\n  * @return {Array}\r\n  */\nfunction toTreeArray(array, options) {\n  return unTreeList([], array, assign({}, setupDefaults.treeOptions, options));\n}\nmodule.exports = toTreeArray;","map":{"version":3,"names":["setupDefaults","require","each","assign","unTreeList","result","array","opts","optChildren","children","optData","data","optClear","clear","item","push","length","toTreeArray","options","treeOptions","module","exports"],"sources":["D:/program/LanqiaoVue/vue-demo/node_modules/xe-utils/toTreeArray.js"],"sourcesContent":["var setupDefaults = require('./setupDefaults')\r\n\r\nvar each = require('./each')\r\n\r\nvar assign = require('./assign')\r\n\r\nfunction unTreeList (result, array, opts) {\r\n  var optChildren = opts.children\r\n  var optData = opts.data\r\n  var optClear = opts.clear\r\n  each(array, function (item) {\r\n    var children = item[optChildren]\r\n    if (optData) {\r\n      item = item[optData]\r\n    }\r\n    result.push(item)\r\n    if (children && children.length) {\r\n      unTreeList(result, children, opts)\r\n    }\r\n    if (optClear) {\r\n      delete item[optChildren]\r\n    }\r\n  })\r\n  return result\r\n}\r\n\r\n/**\r\n  * 将一个树结构转成数组列表\r\n  *\r\n  * @param {Array} array 数组\r\n  * @param {Object} options { children: 'children', data: 'data', clear: false }\r\n  * @return {Array}\r\n  */\r\nfunction toTreeArray (array, options) {\r\n  return unTreeList([], array, assign({}, setupDefaults.treeOptions, options))\r\n}\r\n\r\nmodule.exports = toTreeArray\r\n"],"mappings":";AAAA,IAAIA,aAAa,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAE9C,IAAIC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAE5B,IAAIE,MAAM,GAAGF,OAAO,CAAC,UAAU,CAAC;AAEhC,SAASG,UAAU,CAAEC,MAAM,EAAEC,KAAK,EAAEC,IAAI,EAAE;EACxC,IAAIC,WAAW,GAAGD,IAAI,CAACE,QAAQ;EAC/B,IAAIC,OAAO,GAAGH,IAAI,CAACI,IAAI;EACvB,IAAIC,QAAQ,GAAGL,IAAI,CAACM,KAAK;EACzBX,IAAI,CAACI,KAAK,EAAE,UAAUQ,IAAI,EAAE;IAC1B,IAAIL,QAAQ,GAAGK,IAAI,CAACN,WAAW,CAAC;IAChC,IAAIE,OAAO,EAAE;MACXI,IAAI,GAAGA,IAAI,CAACJ,OAAO,CAAC;IACtB;IACAL,MAAM,CAACU,IAAI,CAACD,IAAI,CAAC;IACjB,IAAIL,QAAQ,IAAIA,QAAQ,CAACO,MAAM,EAAE;MAC/BZ,UAAU,CAACC,MAAM,EAAEI,QAAQ,EAAEF,IAAI,CAAC;IACpC;IACA,IAAIK,QAAQ,EAAE;MACZ,OAAOE,IAAI,CAACN,WAAW,CAAC;IAC1B;EACF,CAAC,CAAC;EACF,OAAOH,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASY,WAAW,CAAEX,KAAK,EAAEY,OAAO,EAAE;EACpC,OAAOd,UAAU,CAAC,EAAE,EAAEE,KAAK,EAAEH,MAAM,CAAC,CAAC,CAAC,EAAEH,aAAa,CAACmB,WAAW,EAAED,OAAO,CAAC,CAAC;AAC9E;AAEAE,MAAM,CAACC,OAAO,GAAGJ,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}