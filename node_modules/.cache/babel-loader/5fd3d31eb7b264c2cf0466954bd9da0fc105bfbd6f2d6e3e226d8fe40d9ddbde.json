{"ast":null,"code":"require(\"core-js/modules/es.regexp.exec.js\");\nrequire(\"core-js/modules/es.string.match.js\");\nvar helperStringRepeat = require('./helperStringRepeat');\nvar helperNumberOffsetPoint = require('./helperNumberOffsetPoint');\n\n/**\r\n * 数值转字符串，科学计数转字符串\r\n * @param { Number } num 数值\r\n *\r\n * @return {Number}\r\n */\nfunction toNumberString(num) {\n  var rest = '' + num;\n  var scienceMatchs = rest.match(/^([-+]?)((\\d+)|((\\d+)?[.](\\d+)?))e([-+]{1})([0-9]+)$/);\n  if (scienceMatchs) {\n    var isNegative = num < 0;\n    var absFlag = isNegative ? '-' : '';\n    var intNumStr = scienceMatchs[3] || '';\n    var dIntNumStr = scienceMatchs[5] || '';\n    var dFloatNumStr = scienceMatchs[6] || '';\n    var sciencFlag = scienceMatchs[7];\n    var scienceNumStr = scienceMatchs[8];\n    var floatOffsetIndex = scienceNumStr - dFloatNumStr.length;\n    var intOffsetIndex = scienceNumStr - intNumStr.length;\n    var dIntOffsetIndex = scienceNumStr - dIntNumStr.length;\n    if (sciencFlag === '+') {\n      if (intNumStr) {\n        return absFlag + intNumStr + helperStringRepeat('0', scienceNumStr);\n      }\n      if (floatOffsetIndex > 0) {\n        return absFlag + dIntNumStr + dFloatNumStr + helperStringRepeat('0', floatOffsetIndex);\n      }\n      return absFlag + dIntNumStr + helperNumberOffsetPoint(dFloatNumStr, scienceNumStr);\n    }\n    if (intNumStr) {\n      if (intOffsetIndex > 0) {\n        return absFlag + '0.' + helperStringRepeat('0', Math.abs(intOffsetIndex)) + intNumStr;\n      }\n      return absFlag + helperNumberOffsetPoint(intNumStr, intOffsetIndex);\n    }\n    if (dIntOffsetIndex > 0) {\n      return absFlag + '0.' + helperStringRepeat('0', Math.abs(dIntOffsetIndex)) + dIntNumStr + dFloatNumStr;\n    }\n    return absFlag + helperNumberOffsetPoint(dIntNumStr, dIntOffsetIndex) + dFloatNumStr;\n  }\n  return rest;\n}\nmodule.exports = toNumberString;","map":{"version":3,"names":["helperStringRepeat","require","helperNumberOffsetPoint","toNumberString","num","rest","scienceMatchs","match","isNegative","absFlag","intNumStr","dIntNumStr","dFloatNumStr","sciencFlag","scienceNumStr","floatOffsetIndex","length","intOffsetIndex","dIntOffsetIndex","Math","abs","module","exports"],"sources":["D:/program/LanqiaoVue/vue-demo/node_modules/xe-utils/toNumberString.js"],"sourcesContent":["var helperStringRepeat = require('./helperStringRepeat')\r\nvar helperNumberOffsetPoint = require('./helperNumberOffsetPoint')\r\n\r\n/**\r\n * 数值转字符串，科学计数转字符串\r\n * @param { Number } num 数值\r\n *\r\n * @return {Number}\r\n */\r\nfunction toNumberString(num) {\r\n  var rest = '' + num\r\n  var scienceMatchs = rest.match(/^([-+]?)((\\d+)|((\\d+)?[.](\\d+)?))e([-+]{1})([0-9]+)$/)\r\n  if (scienceMatchs) {\r\n    var isNegative = num < 0\r\n    var absFlag = isNegative ? '-' : ''\r\n    var intNumStr = scienceMatchs[3] || ''\r\n    var dIntNumStr = scienceMatchs[5] || ''\r\n    var dFloatNumStr = scienceMatchs[6] || ''\r\n    var sciencFlag = scienceMatchs[7]\r\n    var scienceNumStr = scienceMatchs[8]\r\n    var floatOffsetIndex = scienceNumStr - dFloatNumStr.length\r\n    var intOffsetIndex = scienceNumStr - intNumStr.length\r\n    var dIntOffsetIndex = scienceNumStr - dIntNumStr.length\r\n    if (sciencFlag === '+') {\r\n      if (intNumStr) {\r\n        return absFlag + intNumStr + helperStringRepeat('0', scienceNumStr)\r\n      }\r\n      if (floatOffsetIndex > 0) {\r\n        return absFlag + dIntNumStr + dFloatNumStr + helperStringRepeat('0', floatOffsetIndex)\r\n      }\r\n      return absFlag + dIntNumStr + helperNumberOffsetPoint(dFloatNumStr, scienceNumStr)\r\n    }\r\n    if (intNumStr) {\r\n      if (intOffsetIndex > 0) {\r\n        return absFlag + '0.' + helperStringRepeat('0', Math.abs(intOffsetIndex)) + intNumStr\r\n      }\r\n      return absFlag + helperNumberOffsetPoint(intNumStr, intOffsetIndex)\r\n    }\r\n    if (dIntOffsetIndex > 0) {\r\n      return absFlag + '0.' + helperStringRepeat('0', Math.abs(dIntOffsetIndex)) + dIntNumStr + dFloatNumStr\r\n    }\r\n    return absFlag + helperNumberOffsetPoint(dIntNumStr, dIntOffsetIndex) + dFloatNumStr\r\n  }\r\n  return rest\r\n}\r\n\r\nmodule.exports = toNumberString\r\n"],"mappings":";;AAAA,IAAIA,kBAAkB,GAAGC,OAAO,CAAC,sBAAsB,CAAC;AACxD,IAAIC,uBAAuB,GAAGD,OAAO,CAAC,2BAA2B,CAAC;;AAElE;AACA;AACA;AACA;AACA;AACA;AACA,SAASE,cAAc,CAACC,GAAG,EAAE;EAC3B,IAAIC,IAAI,GAAG,EAAE,GAAGD,GAAG;EACnB,IAAIE,aAAa,GAAGD,IAAI,CAACE,KAAK,CAAC,sDAAsD,CAAC;EACtF,IAAID,aAAa,EAAE;IACjB,IAAIE,UAAU,GAAGJ,GAAG,GAAG,CAAC;IACxB,IAAIK,OAAO,GAAGD,UAAU,GAAG,GAAG,GAAG,EAAE;IACnC,IAAIE,SAAS,GAAGJ,aAAa,CAAC,CAAC,CAAC,IAAI,EAAE;IACtC,IAAIK,UAAU,GAAGL,aAAa,CAAC,CAAC,CAAC,IAAI,EAAE;IACvC,IAAIM,YAAY,GAAGN,aAAa,CAAC,CAAC,CAAC,IAAI,EAAE;IACzC,IAAIO,UAAU,GAAGP,aAAa,CAAC,CAAC,CAAC;IACjC,IAAIQ,aAAa,GAAGR,aAAa,CAAC,CAAC,CAAC;IACpC,IAAIS,gBAAgB,GAAGD,aAAa,GAAGF,YAAY,CAACI,MAAM;IAC1D,IAAIC,cAAc,GAAGH,aAAa,GAAGJ,SAAS,CAACM,MAAM;IACrD,IAAIE,eAAe,GAAGJ,aAAa,GAAGH,UAAU,CAACK,MAAM;IACvD,IAAIH,UAAU,KAAK,GAAG,EAAE;MACtB,IAAIH,SAAS,EAAE;QACb,OAAOD,OAAO,GAAGC,SAAS,GAAGV,kBAAkB,CAAC,GAAG,EAAEc,aAAa,CAAC;MACrE;MACA,IAAIC,gBAAgB,GAAG,CAAC,EAAE;QACxB,OAAON,OAAO,GAAGE,UAAU,GAAGC,YAAY,GAAGZ,kBAAkB,CAAC,GAAG,EAAEe,gBAAgB,CAAC;MACxF;MACA,OAAON,OAAO,GAAGE,UAAU,GAAGT,uBAAuB,CAACU,YAAY,EAAEE,aAAa,CAAC;IACpF;IACA,IAAIJ,SAAS,EAAE;MACb,IAAIO,cAAc,GAAG,CAAC,EAAE;QACtB,OAAOR,OAAO,GAAG,IAAI,GAAGT,kBAAkB,CAAC,GAAG,EAAEmB,IAAI,CAACC,GAAG,CAACH,cAAc,CAAC,CAAC,GAAGP,SAAS;MACvF;MACA,OAAOD,OAAO,GAAGP,uBAAuB,CAACQ,SAAS,EAAEO,cAAc,CAAC;IACrE;IACA,IAAIC,eAAe,GAAG,CAAC,EAAE;MACvB,OAAOT,OAAO,GAAG,IAAI,GAAGT,kBAAkB,CAAC,GAAG,EAAEmB,IAAI,CAACC,GAAG,CAACF,eAAe,CAAC,CAAC,GAAGP,UAAU,GAAGC,YAAY;IACxG;IACA,OAAOH,OAAO,GAAGP,uBAAuB,CAACS,UAAU,EAAEO,eAAe,CAAC,GAAGN,YAAY;EACtF;EACA,OAAOP,IAAI;AACb;AAEAgB,MAAM,CAACC,OAAO,GAAGnB,cAAc"},"metadata":{},"sourceType":"script","externalDependencies":[]}