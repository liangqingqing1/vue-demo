{"ast":null,"code":"import \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { defineComponent, getCurrentInstance, onMounted, reactive } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getUserList } from \"../../api/system\";\nexport default {\n  data: function data() {\n    return {\n      // submenu: {\n      //   submenuHide: false,\n      //   submenuShow: true\n      // },\n      getTableData: []\n    };\n  },\n  // setup表示允许在组件内部定义响应式状态和事件处理逻辑\n  setup: function setup() {\n    console.log(\"setup\");\n    var demo1 = reactive({\n      filterName: '',\n      list: [],\n      tableData: [{\n        \"userId\": 1,\n        \"username\": \"admin\",\n        \"nickName\": \"超管\",\n        \"mobile\": \"18076757556\",\n        \"identity\": \"452402200004090930\",\n        \"homeAddress\": \"广西桂林\",\n        \"onboardingTime\": \"11月 17, 2022\",\n        \"status\": \"在职\"\n      }]\n    });\n    //挂载后调用函数获取项目数据\n    function GetUserList() {}\n    onMounted(function () {\n      getUserList();\n    });\n    var searchEvent1 = function searchEvent1() {\n      var filterName = XEUtils.toValueString(demo1.filterName).trim().toLowerCase();\n      if (filterName) {\n        var filterRE = new RegExp(filterName, 'gi');\n        var searchProps = ['nickName', 'username'];\n        var rest = demo1.tableData.filter(function (item) {\n          return searchProps.some(function (key) {\n            return XEUtils.toValueString(item[key]).toLowerCase().indexOf(filterName) > -1;\n          });\n        });\n        demo1.list = rest.map(function (row) {\n          var item = Object.assign({}, row);\n          searchProps.forEach(function (key) {\n            item[key] = XEUtils.toValueString(item[key]).replace(filterRE, function (match) {\n              return \"<span class=\\\"keyword-lighten\\\">\".concat(match, \"</span>\");\n            });\n          });\n          return item;\n        });\n      } else {\n        demo1.list = demo1.tableData;\n      }\n    };\n    searchEvent1();\n    return {\n      demo1: demo1,\n      searchEvent1: searchEvent1\n    };\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;AAoCA;AACA;AACA;AAEA;EACAA;IACA;MACA;MACA;MACA;MACA;MACAC;IACA;EACA;EACA;EACAC;IACAC;IACA;MACAC;MACAC;MACAC;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;MACA;IACA;IACA;IACA,wBAEA;IACAC;MACAC;IACA;IACA;MACA;MACA;QACA;QACA;QACA;UAAA;YAAA;UAAA;QAAA;QACAC;UACA;UACAC;YACAC;cAAA;YAAA;UACA;UACA;QACA;MACA;QACAF;MACA;IACA;IACAG;IACA;MACAH;MACAG;IACA;EACA;AAEA","names":["data","getTableData","setup","console","filterName","list","tableData","onMounted","getUserList","demo1","searchProps","item","searchEvent1"],"sourceRoot":"src/views/system","sources":["roleList.vue"],"sourcesContent":["<template>\r\n    <div id=\"box\">\r\n      <vxe-toolbar>\r\n          <template #buttons>\r\n            <vxe-input v-model=\"demo1.filterName\" type=\"search\" placeholder=\"输入账号或姓名\" @keyup=\"searchEvent1\"></vxe-input>\r\n            <vxe-button status=\"primary\" icon=\"vxe-icon-square-plus\" @click=\"insertEvent()\">新增</vxe-button>\r\n          </template>\r\n        </vxe-toolbar>\r\n        <vxe-table :data=\"demo1.list\" class=\"table\"\r\n            border\r\n            ref=\"userTable\"\r\n            height=\"80%\"\r\n            :row-config=\"{isHover: true}\">\r\n            <vxe-column type=\"seq\" width=\"100\"></vxe-column>\r\n            <vxe-column field=\"nickName\" title=\"姓名\" width=\"100\" sortable type=\"html\"></vxe-column>\r\n            <vxe-column field=\"username\" title=\"账号\" width=\"100\" type=\"html\"></vxe-column>\r\n            <vxe-column field=\"mobile\" title=\"电话\" width=\"120\"></vxe-column>\r\n            <vxe-column class=\"test\" field=\"identity\" title=\"身份证\" width=\"100\"></vxe-column>\r\n            <vxe-column field=\"homeAddress\" title=\"家庭住址\" width=\"150\"></vxe-column>\r\n            <vxe-column field=\"onboardingTime\" title=\"入职时间\" width=\"130\" sortable></vxe-column>\r\n            <vxe-column field=\"departureTime\" title=\"离职时间\" width=\"130\" sortable></vxe-column>\r\n            <vxe-column field=\"status\" title=\"状态\" width=\"100\"></vxe-column>\r\n            <vxe-column field=\"departureTime\" title=\"操作\" width=\"180\">\r\n              <vxe-button status=\"primary\" content=\"编辑\"></vxe-button>\r\n              <vxe-button status=\"danger\" content=\"删除\"></vxe-button>\r\n            </vxe-column>\r\n            <template #empty>\r\n            <span style=\"color: red;\">\r\n              <img src=\"https://n.sinaimg.cn/sinacn17/w120h120/20180314/89fc-fyscsmv5911424.gif\">\r\n              <p>没有更多数据了！</p>\r\n            </span>\r\n          </template>\r\n      </vxe-table>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { defineComponent,getCurrentInstance,onMounted ,reactive } from 'vue'\r\nimport XEUtils from 'xe-utils'\r\nimport {getUserList} from \"../../api/system\"\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      // submenu: {\r\n      //   submenuHide: false,\r\n      //   submenuShow: true\r\n      // },\r\n      getTableData:[]\r\n    }\r\n  },\r\n  // setup表示允许在组件内部定义响应式状态和事件处理逻辑\r\n    setup () {\r\n      console.log(\"setup\")\r\n      let demo1 = reactive({\r\n        filterName: '',\r\n        list: [],\r\n        tableData: [        {\r\n            \"userId\": 1,\r\n            \"username\": \"admin\",\r\n            \"nickName\": \"超管\",\r\n            \"mobile\": \"18076757556\",\r\n            \"identity\": \"452402200004090930\",\r\n            \"homeAddress\": \"广西桂林\",\r\n            \"onboardingTime\": \"11月 17, 2022\",\r\n            \"status\": \"在职\"\r\n        }]\r\n      })\r\n      //挂载后调用函数获取项目数据\r\n      function GetUserList(){\r\n        \r\n      }\r\n      onMounted(() => {\r\n        getUserList();\r\n      });\r\n      const searchEvent1 = () => {\r\n        const filterName = XEUtils.toValueString(demo1.filterName).trim().toLowerCase()\r\n        if (filterName) {\r\n          const filterRE = new RegExp(filterName, 'gi')\r\n          const searchProps = ['nickName','username']\r\n          const rest = demo1.tableData.filter(item => searchProps.some(key => XEUtils.toValueString(item[key]).toLowerCase().indexOf(filterName) > -1))\r\n          demo1.list = rest.map(row => {\r\n            const item = Object.assign({}, row)\r\n            searchProps.forEach(key => {\r\n              item[key] = XEUtils.toValueString(item[key]).replace(filterRE, match => `<span class=\"keyword-lighten\">${match}</span>`)\r\n            })\r\n            return item\r\n          })\r\n        } else {\r\n          demo1.list = demo1.tableData\r\n        }\r\n      }\r\n      searchEvent1()\r\n        return {\r\n          demo1,\r\n          searchEvent1\r\n      }\r\n    },\r\n\r\n  }\r\n\r\n</script>\r\n  \r\n  <style scoped>\r\n  #box{\r\n    width: 95%;\r\n    margin: auto;\r\n    margin-top: 20px;\r\n  /* background-color: red; */\r\n  }\r\n  #box .table{\r\n    margin: auto;\r\n    overflow: auto;\r\n  }\r\n  </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}