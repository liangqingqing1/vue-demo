{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.array.join.js\");\nrequire(\"core-js/modules/es.array.map.js\");\nrequire(\"core-js/modules/es.number.constructor.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calcTreeLine = calcTreeLine;\nexports.clearTableAllStatus = clearTableAllStatus;\nexports.clearTableDefaultStatus = clearTableDefaultStatus;\nexports.colToVisible = colToVisible;\nexports.getColReMinWidth = getColReMinWidth;\nexports.getColumnConfig = getColumnConfig;\nexports.getOffsetSize = getOffsetSize;\nexports.getRowid = getRowid;\nexports.getRowkey = getRowkey;\nexports.handleFieldOrColumn = handleFieldOrColumn;\nexports.isColumnInfo = isColumnInfo;\nexports.mergeBodyMethod = mergeBodyMethod;\nexports.removeScrollListener = removeScrollListener;\nexports.restoreScrollListener = restoreScrollListener;\nexports.restoreScrollLocation = restoreScrollLocation;\nexports.rowToVisible = rowToVisible;\nexports.toFilters = toFilters;\nexports.toTreePathSeq = toTreePathSeq;\nvar _vXETable = _interopRequireDefault(require(\"../../v-x-e-table\"));\nvar _xeUtils = _interopRequireDefault(require(\"xe-utils\"));\nvar _columnInfo = require(\"./columnInfo\");\nvar _dom = _interopRequireDefault(require(\"../../tools/dom\"));\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nvar lineOffsetSizes = {\n  mini: 3,\n  small: 2,\n  medium: 1\n};\nfunction restoreScrollLocation(_vm, scrollLeft, scrollTop) {\n  return _vm.clearScroll().then(function () {\n    if (scrollLeft || scrollTop) {\n      // 重置最后滚动状态\n      _vm.lastScrollLeft = 0;\n      _vm.lastScrollTop = 0;\n      // 还原滚动状态\n      return _vm.scrollTo(scrollLeft, scrollTop);\n    }\n  });\n}\nfunction toTreePathSeq(path) {\n  return path.map(function (num, i) {\n    return i % 2 === 0 ? Number(num) + 1 : '.';\n  }).join('');\n}\nfunction removeScrollListener(scrollElem) {\n  if (scrollElem && scrollElem._onscroll) {\n    scrollElem.onscroll = null;\n  }\n}\nfunction restoreScrollListener(scrollElem) {\n  if (scrollElem && scrollElem._onscroll) {\n    scrollElem.onscroll = scrollElem._onscroll;\n  }\n}\n\n// 行主键 key\nfunction getRowkey($xetable) {\n  return $xetable.rowOpts.keyField || $xetable.rowId || '_X_ROW_KEY';\n}\n\n// 行主键 value\nfunction getRowid($xetable, row) {\n  var rowid = _xeUtils.default.get(row, getRowkey($xetable));\n  return _xeUtils.default.eqNull(rowid) ? '' : encodeURIComponent(rowid);\n}\nfunction getPaddingLeftRightSize(elem) {\n  if (elem) {\n    var computedStyle = getComputedStyle(elem);\n    var paddingLeft = _xeUtils.default.toNumber(computedStyle.paddingLeft);\n    var paddingRight = _xeUtils.default.toNumber(computedStyle.paddingRight);\n    return paddingLeft + paddingRight;\n  }\n  return 0;\n}\nfunction getElemenMarginWidth(elem) {\n  if (elem) {\n    var computedStyle = getComputedStyle(elem);\n    var marginLeft = _xeUtils.default.toNumber(computedStyle.marginLeft);\n    var marginRight = _xeUtils.default.toNumber(computedStyle.marginRight);\n    return elem.offsetWidth + marginLeft + marginRight;\n  }\n  return 0;\n}\nfunction handleFieldOrColumn(_vm, fieldOrColumn) {\n  if (fieldOrColumn) {\n    return _xeUtils.default.isString(fieldOrColumn) ? _vm.getColumnByField(fieldOrColumn) : fieldOrColumn;\n  }\n  return null;\n}\nfunction queryCellElement(cell, selector) {\n  return cell.querySelector('.vxe-cell' + selector);\n}\nfunction toFilters(filters) {\n  if (filters && _xeUtils.default.isArray(filters)) {\n    return filters.map(function (_ref) {\n      var label = _ref.label,\n        value = _ref.value,\n        data = _ref.data,\n        resetValue = _ref.resetValue,\n        checked = _ref.checked;\n      return {\n        label: label,\n        value: value,\n        data: data,\n        resetValue: resetValue,\n        checked: !!checked,\n        _checked: !!checked\n      };\n    });\n  }\n  return filters;\n}\nfunction getColReMinWidth(params) {\n  var $table = params.$table,\n    column = params.column,\n    cell = params.cell;\n  var allColumnHeaderOverflow = $table.showHeaderOverflow,\n    resizableOpts = $table.resizableOpts;\n  var minWidth = resizableOpts.minWidth;\n  // 如果自定义调整宽度逻辑\n  if (minWidth) {\n    var customMinWidth = _xeUtils.default.isFunction(minWidth) ? minWidth(params) : minWidth;\n    if (customMinWidth !== 'auto') {\n      return Math.max(1, _xeUtils.default.toNumber(customMinWidth));\n    }\n  }\n  var showHeaderOverflow = column.showHeaderOverflow,\n    colMinWidth = column.minWidth;\n  var headOverflow = _xeUtils.default.isUndefined(showHeaderOverflow) || _xeUtils.default.isNull(showHeaderOverflow) ? allColumnHeaderOverflow : showHeaderOverflow;\n  var showEllipsis = headOverflow === 'ellipsis';\n  var showTitle = headOverflow === 'title';\n  var showTooltip = headOverflow === true || headOverflow === 'tooltip';\n  var hasEllipsis = showTitle || showTooltip || showEllipsis;\n  var minTitleWidth = _xeUtils.default.floor((_xeUtils.default.toNumber(getComputedStyle(cell).fontSize) || 14) * 1.6);\n  var paddingLeftRight = getPaddingLeftRightSize(cell) + getPaddingLeftRightSize(queryCellElement(cell, ''));\n  var mWidth = minTitleWidth + paddingLeftRight;\n  // 默认最小宽处理\n  if (hasEllipsis) {\n    var checkboxIconWidth = getPaddingLeftRightSize(queryCellElement(cell, '--title>.vxe-cell--checkbox'));\n    var requiredIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--required-icon'));\n    var editIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--edit-icon'));\n    var helpIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell-help-icon'));\n    var sortIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--sort'));\n    var filterIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--filter'));\n    mWidth += checkboxIconWidth + requiredIconWidth + editIconWidth + helpIconWidth + filterIconWidth + sortIconWidth;\n  }\n  // 如果设置最小宽\n  if (colMinWidth) {\n    var tableBody = $table.$refs.tableBody;\n    var bodyElem = tableBody ? tableBody.$el : null;\n    if (bodyElem) {\n      if (_dom.default.isScale(colMinWidth)) {\n        var bodyWidth = bodyElem.clientWidth - 1;\n        var meanWidth = bodyWidth / 100;\n        return Math.max(mWidth, Math.floor(_xeUtils.default.toInteger(colMinWidth) * meanWidth));\n      } else if (_dom.default.isPx(colMinWidth)) {\n        return Math.max(mWidth, _xeUtils.default.toInteger(colMinWidth));\n      }\n    }\n  }\n  return mWidth;\n}\nfunction countTreeExpand(prevRow, params) {\n  var count = 1;\n  if (!prevRow) {\n    return count;\n  }\n  var $table = params.$table;\n  var rowChildren = prevRow[$table.treeOpts.children];\n  if ($table.isTreeExpandByRow(prevRow)) {\n    for (var index = 0; index < rowChildren.length; index++) {\n      count += countTreeExpand(rowChildren[index], params);\n    }\n  }\n  return count;\n}\nfunction getOffsetSize($xetable) {\n  return lineOffsetSizes[$xetable.vSize] || 0;\n}\nfunction calcTreeLine(params, items, rIndex) {\n  var $table = params.$table;\n  var expandSize = 1;\n  if (rIndex) {\n    expandSize = countTreeExpand(items[rIndex - 1], params);\n  }\n  return $table.rowHeight * expandSize - (rIndex ? 1 : 12 - getOffsetSize($table));\n}\nfunction mergeBodyMethod(mergeList, _rowIndex, _columnIndex) {\n  for (var mIndex = 0; mIndex < mergeList.length; mIndex++) {\n    var _mergeList$mIndex = mergeList[mIndex],\n      mergeRowIndex = _mergeList$mIndex.row,\n      mergeColIndex = _mergeList$mIndex.col,\n      mergeRowspan = _mergeList$mIndex.rowspan,\n      mergeColspan = _mergeList$mIndex.colspan;\n    if (mergeColIndex > -1 && mergeRowIndex > -1 && mergeRowspan && mergeColspan) {\n      if (mergeRowIndex === _rowIndex && mergeColIndex === _columnIndex) {\n        return {\n          rowspan: mergeRowspan,\n          colspan: mergeColspan\n        };\n      }\n      if (_rowIndex >= mergeRowIndex && _rowIndex < mergeRowIndex + mergeRowspan && _columnIndex >= mergeColIndex && _columnIndex < mergeColIndex + mergeColspan) {\n        return {\n          rowspan: 0,\n          colspan: 0\n        };\n      }\n    }\n  }\n}\nfunction clearTableDefaultStatus(_vm) {\n  _vm.initStatus = false;\n  _vm.clearSort();\n  _vm.clearCurrentRow();\n  _vm.clearCurrentColumn();\n  _vm.clearRadioRow();\n  _vm.clearRadioReserve();\n  _vm.clearCheckboxRow();\n  _vm.clearCheckboxReserve();\n  _vm.clearRowExpand();\n  _vm.clearTreeExpand();\n  _vm.clearTreeExpandReserve();\n  if (_vm.clearActived && _vXETable.default._edit) {\n    _vm.clearActived();\n  }\n  if (_vm.clearSelected && (_vm.keyboardConfig || _vm.mouseConfig)) {\n    _vm.clearSelected();\n  }\n  if (_vm.clearCellAreas && _vm.mouseConfig) {\n    _vm.clearCellAreas();\n    _vm.clearCopyCellArea();\n  }\n  return _vm.clearScroll();\n}\nfunction clearTableAllStatus(_vm) {\n  if (_vm.clearFilter && _vXETable.default._filter) {\n    _vm.clearFilter();\n  }\n  return clearTableDefaultStatus(_vm);\n}\nfunction isColumnInfo(column) {\n  return column instanceof _columnInfo.ColumnInfo;\n}\nfunction getColumnConfig($xetable, _vm, options) {\n  return isColumnInfo(_vm) ? _vm : new _columnInfo.ColumnInfo($xetable, _vm, options);\n}\nfunction rowToVisible($xetable, row) {\n  var tableBody = $xetable.$refs.tableBody;\n  var bodyElem = tableBody ? tableBody.$el : null;\n  if (bodyElem) {\n    var trElem = bodyElem.querySelector(\"[rowid=\\\"\".concat(getRowid($xetable, row), \"\\\"]\"));\n    if (trElem) {\n      var bodyHeight = bodyElem.clientHeight;\n      var bodySrcollTop = bodyElem.scrollTop;\n      var trOffsetTop = trElem.offsetTop + (trElem.offsetParent ? trElem.offsetParent.offsetTop : 0);\n      var trHeight = trElem.clientHeight;\n      // 检测行是否在可视区中\n      if (trOffsetTop < bodySrcollTop || trOffsetTop > bodySrcollTop + bodyHeight) {\n        // 向上定位\n        return $xetable.scrollTo(null, trOffsetTop);\n      } else if (trOffsetTop + trHeight >= bodyHeight + bodySrcollTop) {\n        // 向下定位\n        return $xetable.scrollTo(null, bodySrcollTop + trHeight);\n      }\n    } else {\n      // 如果是虚拟渲染跨行滚动\n      if ($xetable.scrollYLoad) {\n        return $xetable.scrollTo(null, ($xetable.afterFullData.indexOf(row) - 1) * $xetable.scrollYStore.rowHeight);\n      }\n    }\n  }\n  return Promise.resolve();\n}\nfunction colToVisible($xetable, column) {\n  var tableBody = $xetable.$refs.tableBody;\n  var bodyElem = tableBody ? tableBody.$el : null;\n  if (bodyElem) {\n    var tdElem = bodyElem.querySelector(\".\".concat(column.id));\n    if (tdElem) {\n      var bodyWidth = bodyElem.clientWidth;\n      var bodySrcollLeft = bodyElem.scrollLeft;\n      var tdOffsetLeft = tdElem.offsetLeft + (tdElem.offsetParent ? tdElem.offsetParent.offsetLeft : 0);\n      var tdWidth = tdElem.clientWidth;\n      // 检测行是否在可视区中\n      if (tdOffsetLeft < bodySrcollLeft || tdOffsetLeft > bodySrcollLeft + bodyWidth) {\n        // 向左定位\n        return $xetable.scrollTo(tdOffsetLeft);\n      } else if (tdOffsetLeft + tdWidth >= bodyWidth + bodySrcollLeft) {\n        // 向右定位\n        return $xetable.scrollTo(bodySrcollLeft + tdWidth);\n      }\n    } else {\n      // 如果是虚拟渲染跨行滚动\n      if ($xetable.scrollXLoad) {\n        var visibleColumn = $xetable.visibleColumn;\n        var scrollLeft = 0;\n        for (var index = 0; index < visibleColumn.length; index++) {\n          if (visibleColumn[index] === column) {\n            break;\n          }\n          scrollLeft += visibleColumn[index].renderWidth;\n        }\n        return $xetable.scrollTo(scrollLeft);\n      }\n    }\n  }\n  return Promise.resolve();\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","calcTreeLine","clearTableAllStatus","clearTableDefaultStatus","colToVisible","getColReMinWidth","getColumnConfig","getOffsetSize","getRowid","getRowkey","handleFieldOrColumn","isColumnInfo","mergeBodyMethod","removeScrollListener","restoreScrollListener","restoreScrollLocation","rowToVisible","toFilters","toTreePathSeq","_vXETable","_interopRequireDefault","require","_xeUtils","_columnInfo","_dom","obj","__esModule","default","lineOffsetSizes","mini","small","medium","_vm","scrollLeft","scrollTop","clearScroll","then","lastScrollLeft","lastScrollTop","scrollTo","path","map","num","i","Number","join","scrollElem","_onscroll","onscroll","$xetable","rowOpts","keyField","rowId","row","rowid","get","eqNull","encodeURIComponent","getPaddingLeftRightSize","elem","computedStyle","getComputedStyle","paddingLeft","toNumber","paddingRight","getElemenMarginWidth","marginLeft","marginRight","offsetWidth","fieldOrColumn","isString","getColumnByField","queryCellElement","cell","selector","querySelector","filters","isArray","_ref","label","data","resetValue","checked","_checked","params","$table","column","allColumnHeaderOverflow","showHeaderOverflow","resizableOpts","minWidth","customMinWidth","isFunction","Math","max","colMinWidth","headOverflow","isUndefined","isNull","showEllipsis","showTitle","showTooltip","hasEllipsis","minTitleWidth","floor","fontSize","paddingLeftRight","mWidth","checkboxIconWidth","requiredIconWidth","editIconWidth","helpIconWidth","sortIconWidth","filterIconWidth","tableBody","$refs","bodyElem","$el","isScale","bodyWidth","clientWidth","meanWidth","toInteger","isPx","countTreeExpand","prevRow","count","rowChildren","treeOpts","children","isTreeExpandByRow","index","length","vSize","items","rIndex","expandSize","rowHeight","mergeList","_rowIndex","_columnIndex","mIndex","_mergeList$mIndex","mergeRowIndex","mergeColIndex","col","mergeRowspan","rowspan","mergeColspan","colspan","initStatus","clearSort","clearCurrentRow","clearCurrentColumn","clearRadioRow","clearRadioReserve","clearCheckboxRow","clearCheckboxReserve","clearRowExpand","clearTreeExpand","clearTreeExpandReserve","clearActived","_edit","clearSelected","keyboardConfig","mouseConfig","clearCellAreas","clearCopyCellArea","clearFilter","_filter","ColumnInfo","options","trElem","concat","bodyHeight","clientHeight","bodySrcollTop","trOffsetTop","offsetTop","offsetParent","trHeight","scrollYLoad","afterFullData","indexOf","scrollYStore","Promise","resolve","tdElem","id","bodySrcollLeft","tdOffsetLeft","offsetLeft","tdWidth","scrollXLoad","visibleColumn","renderWidth"],"sources":["D:/program/LanqiaoVue/vue-demo/node_modules/vxe-table/lib/table/src/util.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calcTreeLine = calcTreeLine;\nexports.clearTableAllStatus = clearTableAllStatus;\nexports.clearTableDefaultStatus = clearTableDefaultStatus;\nexports.colToVisible = colToVisible;\nexports.getColReMinWidth = getColReMinWidth;\nexports.getColumnConfig = getColumnConfig;\nexports.getOffsetSize = getOffsetSize;\nexports.getRowid = getRowid;\nexports.getRowkey = getRowkey;\nexports.handleFieldOrColumn = handleFieldOrColumn;\nexports.isColumnInfo = isColumnInfo;\nexports.mergeBodyMethod = mergeBodyMethod;\nexports.removeScrollListener = removeScrollListener;\nexports.restoreScrollListener = restoreScrollListener;\nexports.restoreScrollLocation = restoreScrollLocation;\nexports.rowToVisible = rowToVisible;\nexports.toFilters = toFilters;\nexports.toTreePathSeq = toTreePathSeq;\nvar _vXETable = _interopRequireDefault(require(\"../../v-x-e-table\"));\nvar _xeUtils = _interopRequireDefault(require(\"xe-utils\"));\nvar _columnInfo = require(\"./columnInfo\");\nvar _dom = _interopRequireDefault(require(\"../../tools/dom\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nvar lineOffsetSizes = {\n  mini: 3,\n  small: 2,\n  medium: 1\n};\nfunction restoreScrollLocation(_vm, scrollLeft, scrollTop) {\n  return _vm.clearScroll().then(function () {\n    if (scrollLeft || scrollTop) {\n      // 重置最后滚动状态\n      _vm.lastScrollLeft = 0;\n      _vm.lastScrollTop = 0;\n      // 还原滚动状态\n      return _vm.scrollTo(scrollLeft, scrollTop);\n    }\n  });\n}\nfunction toTreePathSeq(path) {\n  return path.map(function (num, i) {\n    return i % 2 === 0 ? Number(num) + 1 : '.';\n  }).join('');\n}\nfunction removeScrollListener(scrollElem) {\n  if (scrollElem && scrollElem._onscroll) {\n    scrollElem.onscroll = null;\n  }\n}\nfunction restoreScrollListener(scrollElem) {\n  if (scrollElem && scrollElem._onscroll) {\n    scrollElem.onscroll = scrollElem._onscroll;\n  }\n}\n\n// 行主键 key\nfunction getRowkey($xetable) {\n  return $xetable.rowOpts.keyField || $xetable.rowId || '_X_ROW_KEY';\n}\n\n// 行主键 value\nfunction getRowid($xetable, row) {\n  var rowid = _xeUtils.default.get(row, getRowkey($xetable));\n  return _xeUtils.default.eqNull(rowid) ? '' : encodeURIComponent(rowid);\n}\nfunction getPaddingLeftRightSize(elem) {\n  if (elem) {\n    var computedStyle = getComputedStyle(elem);\n    var paddingLeft = _xeUtils.default.toNumber(computedStyle.paddingLeft);\n    var paddingRight = _xeUtils.default.toNumber(computedStyle.paddingRight);\n    return paddingLeft + paddingRight;\n  }\n  return 0;\n}\nfunction getElemenMarginWidth(elem) {\n  if (elem) {\n    var computedStyle = getComputedStyle(elem);\n    var marginLeft = _xeUtils.default.toNumber(computedStyle.marginLeft);\n    var marginRight = _xeUtils.default.toNumber(computedStyle.marginRight);\n    return elem.offsetWidth + marginLeft + marginRight;\n  }\n  return 0;\n}\nfunction handleFieldOrColumn(_vm, fieldOrColumn) {\n  if (fieldOrColumn) {\n    return _xeUtils.default.isString(fieldOrColumn) ? _vm.getColumnByField(fieldOrColumn) : fieldOrColumn;\n  }\n  return null;\n}\nfunction queryCellElement(cell, selector) {\n  return cell.querySelector('.vxe-cell' + selector);\n}\nfunction toFilters(filters) {\n  if (filters && _xeUtils.default.isArray(filters)) {\n    return filters.map(function (_ref) {\n      var label = _ref.label,\n        value = _ref.value,\n        data = _ref.data,\n        resetValue = _ref.resetValue,\n        checked = _ref.checked;\n      return {\n        label: label,\n        value: value,\n        data: data,\n        resetValue: resetValue,\n        checked: !!checked,\n        _checked: !!checked\n      };\n    });\n  }\n  return filters;\n}\nfunction getColReMinWidth(params) {\n  var $table = params.$table,\n    column = params.column,\n    cell = params.cell;\n  var allColumnHeaderOverflow = $table.showHeaderOverflow,\n    resizableOpts = $table.resizableOpts;\n  var minWidth = resizableOpts.minWidth;\n  // 如果自定义调整宽度逻辑\n  if (minWidth) {\n    var customMinWidth = _xeUtils.default.isFunction(minWidth) ? minWidth(params) : minWidth;\n    if (customMinWidth !== 'auto') {\n      return Math.max(1, _xeUtils.default.toNumber(customMinWidth));\n    }\n  }\n  var showHeaderOverflow = column.showHeaderOverflow,\n    colMinWidth = column.minWidth;\n  var headOverflow = _xeUtils.default.isUndefined(showHeaderOverflow) || _xeUtils.default.isNull(showHeaderOverflow) ? allColumnHeaderOverflow : showHeaderOverflow;\n  var showEllipsis = headOverflow === 'ellipsis';\n  var showTitle = headOverflow === 'title';\n  var showTooltip = headOverflow === true || headOverflow === 'tooltip';\n  var hasEllipsis = showTitle || showTooltip || showEllipsis;\n  var minTitleWidth = _xeUtils.default.floor((_xeUtils.default.toNumber(getComputedStyle(cell).fontSize) || 14) * 1.6);\n  var paddingLeftRight = getPaddingLeftRightSize(cell) + getPaddingLeftRightSize(queryCellElement(cell, ''));\n  var mWidth = minTitleWidth + paddingLeftRight;\n  // 默认最小宽处理\n  if (hasEllipsis) {\n    var checkboxIconWidth = getPaddingLeftRightSize(queryCellElement(cell, '--title>.vxe-cell--checkbox'));\n    var requiredIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--required-icon'));\n    var editIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--edit-icon'));\n    var helpIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell-help-icon'));\n    var sortIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--sort'));\n    var filterIconWidth = getElemenMarginWidth(queryCellElement(cell, '>.vxe-cell--filter'));\n    mWidth += checkboxIconWidth + requiredIconWidth + editIconWidth + helpIconWidth + filterIconWidth + sortIconWidth;\n  }\n  // 如果设置最小宽\n  if (colMinWidth) {\n    var tableBody = $table.$refs.tableBody;\n    var bodyElem = tableBody ? tableBody.$el : null;\n    if (bodyElem) {\n      if (_dom.default.isScale(colMinWidth)) {\n        var bodyWidth = bodyElem.clientWidth - 1;\n        var meanWidth = bodyWidth / 100;\n        return Math.max(mWidth, Math.floor(_xeUtils.default.toInteger(colMinWidth) * meanWidth));\n      } else if (_dom.default.isPx(colMinWidth)) {\n        return Math.max(mWidth, _xeUtils.default.toInteger(colMinWidth));\n      }\n    }\n  }\n  return mWidth;\n}\nfunction countTreeExpand(prevRow, params) {\n  var count = 1;\n  if (!prevRow) {\n    return count;\n  }\n  var $table = params.$table;\n  var rowChildren = prevRow[$table.treeOpts.children];\n  if ($table.isTreeExpandByRow(prevRow)) {\n    for (var index = 0; index < rowChildren.length; index++) {\n      count += countTreeExpand(rowChildren[index], params);\n    }\n  }\n  return count;\n}\nfunction getOffsetSize($xetable) {\n  return lineOffsetSizes[$xetable.vSize] || 0;\n}\nfunction calcTreeLine(params, items, rIndex) {\n  var $table = params.$table;\n  var expandSize = 1;\n  if (rIndex) {\n    expandSize = countTreeExpand(items[rIndex - 1], params);\n  }\n  return $table.rowHeight * expandSize - (rIndex ? 1 : 12 - getOffsetSize($table));\n}\nfunction mergeBodyMethod(mergeList, _rowIndex, _columnIndex) {\n  for (var mIndex = 0; mIndex < mergeList.length; mIndex++) {\n    var _mergeList$mIndex = mergeList[mIndex],\n      mergeRowIndex = _mergeList$mIndex.row,\n      mergeColIndex = _mergeList$mIndex.col,\n      mergeRowspan = _mergeList$mIndex.rowspan,\n      mergeColspan = _mergeList$mIndex.colspan;\n    if (mergeColIndex > -1 && mergeRowIndex > -1 && mergeRowspan && mergeColspan) {\n      if (mergeRowIndex === _rowIndex && mergeColIndex === _columnIndex) {\n        return {\n          rowspan: mergeRowspan,\n          colspan: mergeColspan\n        };\n      }\n      if (_rowIndex >= mergeRowIndex && _rowIndex < mergeRowIndex + mergeRowspan && _columnIndex >= mergeColIndex && _columnIndex < mergeColIndex + mergeColspan) {\n        return {\n          rowspan: 0,\n          colspan: 0\n        };\n      }\n    }\n  }\n}\nfunction clearTableDefaultStatus(_vm) {\n  _vm.initStatus = false;\n  _vm.clearSort();\n  _vm.clearCurrentRow();\n  _vm.clearCurrentColumn();\n  _vm.clearRadioRow();\n  _vm.clearRadioReserve();\n  _vm.clearCheckboxRow();\n  _vm.clearCheckboxReserve();\n  _vm.clearRowExpand();\n  _vm.clearTreeExpand();\n  _vm.clearTreeExpandReserve();\n  if (_vm.clearActived && _vXETable.default._edit) {\n    _vm.clearActived();\n  }\n  if (_vm.clearSelected && (_vm.keyboardConfig || _vm.mouseConfig)) {\n    _vm.clearSelected();\n  }\n  if (_vm.clearCellAreas && _vm.mouseConfig) {\n    _vm.clearCellAreas();\n    _vm.clearCopyCellArea();\n  }\n  return _vm.clearScroll();\n}\nfunction clearTableAllStatus(_vm) {\n  if (_vm.clearFilter && _vXETable.default._filter) {\n    _vm.clearFilter();\n  }\n  return clearTableDefaultStatus(_vm);\n}\nfunction isColumnInfo(column) {\n  return column instanceof _columnInfo.ColumnInfo;\n}\nfunction getColumnConfig($xetable, _vm, options) {\n  return isColumnInfo(_vm) ? _vm : new _columnInfo.ColumnInfo($xetable, _vm, options);\n}\nfunction rowToVisible($xetable, row) {\n  var tableBody = $xetable.$refs.tableBody;\n  var bodyElem = tableBody ? tableBody.$el : null;\n  if (bodyElem) {\n    var trElem = bodyElem.querySelector(\"[rowid=\\\"\".concat(getRowid($xetable, row), \"\\\"]\"));\n    if (trElem) {\n      var bodyHeight = bodyElem.clientHeight;\n      var bodySrcollTop = bodyElem.scrollTop;\n      var trOffsetTop = trElem.offsetTop + (trElem.offsetParent ? trElem.offsetParent.offsetTop : 0);\n      var trHeight = trElem.clientHeight;\n      // 检测行是否在可视区中\n      if (trOffsetTop < bodySrcollTop || trOffsetTop > bodySrcollTop + bodyHeight) {\n        // 向上定位\n        return $xetable.scrollTo(null, trOffsetTop);\n      } else if (trOffsetTop + trHeight >= bodyHeight + bodySrcollTop) {\n        // 向下定位\n        return $xetable.scrollTo(null, bodySrcollTop + trHeight);\n      }\n    } else {\n      // 如果是虚拟渲染跨行滚动\n      if ($xetable.scrollYLoad) {\n        return $xetable.scrollTo(null, ($xetable.afterFullData.indexOf(row) - 1) * $xetable.scrollYStore.rowHeight);\n      }\n    }\n  }\n  return Promise.resolve();\n}\nfunction colToVisible($xetable, column) {\n  var tableBody = $xetable.$refs.tableBody;\n  var bodyElem = tableBody ? tableBody.$el : null;\n  if (bodyElem) {\n    var tdElem = bodyElem.querySelector(\".\".concat(column.id));\n    if (tdElem) {\n      var bodyWidth = bodyElem.clientWidth;\n      var bodySrcollLeft = bodyElem.scrollLeft;\n      var tdOffsetLeft = tdElem.offsetLeft + (tdElem.offsetParent ? tdElem.offsetParent.offsetLeft : 0);\n      var tdWidth = tdElem.clientWidth;\n      // 检测行是否在可视区中\n      if (tdOffsetLeft < bodySrcollLeft || tdOffsetLeft > bodySrcollLeft + bodyWidth) {\n        // 向左定位\n        return $xetable.scrollTo(tdOffsetLeft);\n      } else if (tdOffsetLeft + tdWidth >= bodyWidth + bodySrcollLeft) {\n        // 向右定位\n        return $xetable.scrollTo(bodySrcollLeft + tdWidth);\n      }\n    } else {\n      // 如果是虚拟渲染跨行滚动\n      if ($xetable.scrollXLoad) {\n        var visibleColumn = $xetable.visibleColumn;\n        var scrollLeft = 0;\n        for (var index = 0; index < visibleColumn.length; index++) {\n          if (visibleColumn[index] === column) {\n            break;\n          }\n          scrollLeft += visibleColumn[index].renderWidth;\n        }\n        return $xetable.scrollTo(scrollLeft);\n      }\n    }\n  }\n  return Promise.resolve();\n}"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}