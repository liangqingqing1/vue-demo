{"ast":null,"code":"require(\"core-js/modules/es.array.concat.js\");\nvar helperCreateTreeFunc = require('./helperCreateTreeFunc');\nvar map = require('./map');\nfunction mapTreeItem(parent, obj, iterate, context, path, node, parseChildren, opts) {\n  var paths, nodes, rest;\n  var mapChildren = opts.mapChildren || parseChildren;\n  return map(obj, function (item, index) {\n    paths = path.concat(['' + index]);\n    nodes = node.concat([item]);\n    rest = iterate.call(context, item, index, obj, paths, parent, nodes);\n    if (rest && item && parseChildren && item[parseChildren]) {\n      rest[mapChildren] = mapTreeItem(item, item[parseChildren], iterate, context, paths, nodes, parseChildren, opts);\n    }\n    return rest;\n  });\n}\n\n/**\r\n  * 从树结构中指定方法后的返回值组成的新数组\r\n  *\r\n  * @param {Object} obj 对象/数组\r\n  * @param {Function} iterate(item, index, items, path, parent, nodes) 回调\r\n  * @param {Object} options {children: 'children'}\r\n  * @param {Object} context 上下文\r\n  * @return {Object/Array}\r\n  */\nvar mapTree = helperCreateTreeFunc(mapTreeItem);\nmodule.exports = mapTree;","map":{"version":3,"names":["helperCreateTreeFunc","require","map","mapTreeItem","parent","obj","iterate","context","path","node","parseChildren","opts","paths","nodes","rest","mapChildren","item","index","concat","call","mapTree","module","exports"],"sources":["D:/program/LanqiaoVue/vue-demo/node_modules/xe-utils/mapTree.js"],"sourcesContent":["var helperCreateTreeFunc = require('./helperCreateTreeFunc')\r\n\r\nvar map = require('./map')\r\n\r\nfunction mapTreeItem (parent, obj, iterate, context, path, node, parseChildren, opts) {\r\n  var paths, nodes, rest\r\n  var mapChildren = opts.mapChildren || parseChildren\r\n  return map(obj, function (item, index) {\r\n    paths = path.concat(['' + index])\r\n    nodes = node.concat([item])\r\n    rest = iterate.call(context, item, index, obj, paths, parent, nodes)\r\n    if (rest && item && parseChildren && item[parseChildren]) {\r\n      rest[mapChildren] = mapTreeItem(item, item[parseChildren], iterate, context, paths, nodes, parseChildren, opts)\r\n    }\r\n    return rest\r\n  })\r\n}\r\n\r\n/**\r\n  * 从树结构中指定方法后的返回值组成的新数组\r\n  *\r\n  * @param {Object} obj 对象/数组\r\n  * @param {Function} iterate(item, index, items, path, parent, nodes) 回调\r\n  * @param {Object} options {children: 'children'}\r\n  * @param {Object} context 上下文\r\n  * @return {Object/Array}\r\n  */\r\nvar mapTree = helperCreateTreeFunc(mapTreeItem)\r\n\r\nmodule.exports = mapTree\r\n"],"mappings":";AAAA,IAAIA,oBAAoB,GAAGC,OAAO,CAAC,wBAAwB,CAAC;AAE5D,IAAIC,GAAG,GAAGD,OAAO,CAAC,OAAO,CAAC;AAE1B,SAASE,WAAW,CAAEC,MAAM,EAAEC,GAAG,EAAEC,OAAO,EAAEC,OAAO,EAAEC,IAAI,EAAEC,IAAI,EAAEC,aAAa,EAAEC,IAAI,EAAE;EACpF,IAAIC,KAAK,EAAEC,KAAK,EAAEC,IAAI;EACtB,IAAIC,WAAW,GAAGJ,IAAI,CAACI,WAAW,IAAIL,aAAa;EACnD,OAAOR,GAAG,CAACG,GAAG,EAAE,UAAUW,IAAI,EAAEC,KAAK,EAAE;IACrCL,KAAK,GAAGJ,IAAI,CAACU,MAAM,CAAC,CAAC,EAAE,GAAGD,KAAK,CAAC,CAAC;IACjCJ,KAAK,GAAGJ,IAAI,CAACS,MAAM,CAAC,CAACF,IAAI,CAAC,CAAC;IAC3BF,IAAI,GAAGR,OAAO,CAACa,IAAI,CAACZ,OAAO,EAAES,IAAI,EAAEC,KAAK,EAAEZ,GAAG,EAAEO,KAAK,EAAER,MAAM,EAAES,KAAK,CAAC;IACpE,IAAIC,IAAI,IAAIE,IAAI,IAAIN,aAAa,IAAIM,IAAI,CAACN,aAAa,CAAC,EAAE;MACxDI,IAAI,CAACC,WAAW,CAAC,GAAGZ,WAAW,CAACa,IAAI,EAAEA,IAAI,CAACN,aAAa,CAAC,EAAEJ,OAAO,EAAEC,OAAO,EAAEK,KAAK,EAAEC,KAAK,EAAEH,aAAa,EAAEC,IAAI,CAAC;IACjH;IACA,OAAOG,IAAI;EACb,CAAC,CAAC;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIM,OAAO,GAAGpB,oBAAoB,CAACG,WAAW,CAAC;AAE/CkB,MAAM,CAACC,OAAO,GAAGF,OAAO"},"metadata":{},"sourceType":"script","externalDependencies":[]}