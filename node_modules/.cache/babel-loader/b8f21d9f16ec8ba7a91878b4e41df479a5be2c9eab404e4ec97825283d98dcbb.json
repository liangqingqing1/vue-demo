{"ast":null,"code":"require(\"core-js/modules/es.array.concat.js\");\nvar slice = require('./slice');\n\n/**\r\n  * 创建一个只能调用一次的函数,只会返回第一次执行后的结果\r\n  *\r\n  * @param {Function} callback 函数\r\n  * @param {Object} context 上下文\r\n  * @param {*} args 额外的参数\r\n  * @return {Object}\r\n  */\nfunction once(callback, context) {\n  var done = false;\n  var rest = null;\n  var args = slice(arguments, 2);\n  return function () {\n    if (done) {\n      return rest;\n    }\n    rest = callback.apply(context, slice(arguments).concat(args));\n    done = true;\n    return rest;\n  };\n}\nmodule.exports = once;","map":{"version":3,"names":["slice","require","once","callback","context","done","rest","args","arguments","apply","concat","module","exports"],"sources":["D:/program/LanqiaoVue/vue-demo/node_modules/xe-utils/once.js"],"sourcesContent":["var slice = require('./slice')\r\n\r\n/**\r\n  * 创建一个只能调用一次的函数,只会返回第一次执行后的结果\r\n  *\r\n  * @param {Function} callback 函数\r\n  * @param {Object} context 上下文\r\n  * @param {*} args 额外的参数\r\n  * @return {Object}\r\n  */\r\nfunction once (callback, context) {\r\n  var done = false\r\n  var rest = null\r\n  var args = slice(arguments, 2)\r\n  return function () {\r\n    if (done) {\r\n      return rest\r\n    }\r\n    rest = callback.apply(context, slice(arguments).concat(args))\r\n    done = true\r\n    return rest\r\n  }\r\n}\r\n\r\nmodule.exports = once\r\n"],"mappings":";AAAA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAS,CAAC;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,IAAI,CAAEC,QAAQ,EAAEC,OAAO,EAAE;EAChC,IAAIC,IAAI,GAAG,KAAK;EAChB,IAAIC,IAAI,GAAG,IAAI;EACf,IAAIC,IAAI,GAAGP,KAAK,CAACQ,SAAS,EAAE,CAAC,CAAC;EAC9B,OAAO,YAAY;IACjB,IAAIH,IAAI,EAAE;MACR,OAAOC,IAAI;IACb;IACAA,IAAI,GAAGH,QAAQ,CAACM,KAAK,CAACL,OAAO,EAAEJ,KAAK,CAACQ,SAAS,CAAC,CAACE,MAAM,CAACH,IAAI,CAAC,CAAC;IAC7DF,IAAI,GAAG,IAAI;IACX,OAAOC,IAAI;EACb,CAAC;AACH;AAEAK,MAAM,CAACC,OAAO,GAAGV,IAAI"},"metadata":{},"sourceType":"script","externalDependencies":[]}