{"ast":null,"code":"\"use strict\";\n\nrequire(\"core-js/modules/es.symbol.js\");\nrequire(\"core-js/modules/es.symbol.description.js\");\nrequire(\"core-js/modules/es.object.to-string.js\");\nrequire(\"core-js/modules/es.symbol.iterator.js\");\nrequire(\"core-js/modules/es.string.iterator.js\");\nrequire(\"core-js/modules/web.dom-collections.iterator.js\");\nrequire(\"core-js/modules/es.weak-map.js\");\nrequire(\"core-js/modules/es.object.get-own-property-descriptor.js\");\nrequire(\"core-js/modules/es.object.keys.js\");\nrequire(\"core-js/modules/es.array.filter.js\");\nrequire(\"core-js/modules/es.array.push.js\");\nrequire(\"core-js/modules/web.dom-collections.for-each.js\");\nrequire(\"core-js/modules/es.object.get-own-property-descriptors.js\");\nrequire(\"core-js/modules/es.error.cause.js\");\nrequire(\"core-js/modules/es.array.slice.js\");\nrequire(\"core-js/modules/es.function.name.js\");\nrequire(\"core-js/modules/es.array.from.js\");\nrequire(\"core-js/modules/es.regexp.exec.js\");\nrequire(\"core-js/modules/es.regexp.test.js\");\nrequire(\"core-js/modules/es.array.map.js\");\nrequire(\"core-js/modules/es.array.unshift.js\");\nrequire(\"core-js/modules/es.array.concat.js\");\nrequire(\"core-js/modules/es.array.splice.js\");\nrequire(\"core-js/modules/es.array.find.js\");\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _xeUtils = _interopRequireDefault(require(\"xe-utils\"));\nvar _vXETable = _interopRequireDefault(require(\"../../v-x-e-table\"));\nvar _utils = _interopRequireWildcard(require(\"../../tools/utils\"));\nvar _util = require(\"../../table/src/util\");\nvar _dom = _interopRequireWildcard(require(\"../../tools/dom\"));\nvar _log = require(\"../../tools/log\");\nfunction _getRequireWildcardCache(nodeInterop) {\n  if (typeof WeakMap !== \"function\") return null;\n  var cacheBabelInterop = new WeakMap();\n  var cacheNodeInterop = new WeakMap();\n  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {\n    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;\n  })(nodeInterop);\n}\nfunction _interopRequireWildcard(obj, nodeInterop) {\n  if (!nodeInterop && obj && obj.__esModule) {\n    return obj;\n  }\n  if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n  var cache = _getRequireWildcardCache(nodeInterop);\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n  for (var key in obj) {\n    if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n  newObj.default = obj;\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n  return newObj;\n}\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n  return arr2;\n}\nfunction insertTreeRow(_vm, newRecords, isAppend) {\n  var tableFullTreeData = _vm.tableFullTreeData,\n    afterFullData = _vm.afterFullData,\n    fullDataRowIdData = _vm.fullDataRowIdData,\n    fullAllDataRowIdData = _vm.fullAllDataRowIdData,\n    treeOpts = _vm.treeOpts;\n  var rowField = treeOpts.rowField,\n    parentField = treeOpts.parentField,\n    children = treeOpts.children,\n    mapChildren = treeOpts.mapChildren;\n  var funcName = isAppend ? 'push' : 'unshift';\n  newRecords.forEach(function (item) {\n    var parentRowId = item[parentField];\n    var rowid = (0, _util.getRowid)(_vm, item);\n    var matchObj = parentRowId ? _xeUtils.default.findTree(tableFullTreeData, function (item) {\n      return parentRowId === item[rowField];\n    }, {\n      children: mapChildren\n    }) : null;\n    if (matchObj) {\n      var parentRow = matchObj.item;\n      var parentRest = fullAllDataRowIdData[(0, _util.getRowid)(_vm, parentRow)];\n      var parentLevel = parentRest ? parentRest.level : 0;\n      var parentChilds = parentRow[children];\n      if (!_xeUtils.default.isArray(parentChilds)) {\n        parentChilds = parentRow[children] = [];\n      }\n      parentChilds[funcName](item);\n      var rest = {\n        row: item,\n        rowid: rowid,\n        seq: -1,\n        index: -1,\n        _index: -1,\n        $index: -1,\n        items: parentChilds,\n        parent: parent,\n        level: parentLevel + 1\n      };\n      fullDataRowIdData[rowid] = rest;\n      fullAllDataRowIdData[rowid] = rest;\n    } else {\n      if (process.env.NODE_ENV === 'development') {\n        if (parentRowId) {\n          (0, _log.warnLog)('vxe.error.unableInsert');\n        }\n      }\n      afterFullData[funcName](item);\n      tableFullTreeData[funcName](item);\n      var _rest = {\n        row: item,\n        rowid: rowid,\n        seq: -1,\n        index: -1,\n        _index: -1,\n        $index: -1,\n        items: tableFullTreeData,\n        parent: null,\n        level: 0\n      };\n      fullDataRowIdData[rowid] = _rest;\n      fullAllDataRowIdData[rowid] = _rest;\n    }\n  });\n}\nvar _default = {\n  methods: {\n    /**\r\n     * 往表格中插入临时数据\r\n     *\r\n     * @param {*} records\r\n     */\n    _insert: function _insert(records) {\n      return this.insertAt(records);\n    },\n    /**\r\n     * 往表格指定行中插入临时数据\r\n     * 如果 row 为空则从插入到顶部\r\n     * 如果 row 为 -1 则从插入到底部\r\n     * 如果 row 为有效行则插入到该行的位置\r\n     * @param {Object/Array} records 新的数据\r\n     * @param {Row} row 指定行\r\n     */\n    _insertAt: function _insertAt(records, row) {\n      var _this = this,\n        _editStore$insertList;\n      var tableFullTreeData = this.tableFullTreeData,\n        mergeList = this.mergeList,\n        afterFullData = this.afterFullData,\n        editStore = this.editStore,\n        tableFullData = this.tableFullData,\n        treeConfig = this.treeConfig,\n        fullDataRowIdData = this.fullDataRowIdData,\n        fullAllDataRowIdData = this.fullAllDataRowIdData,\n        treeOpts = this.treeOpts;\n      var transform = treeOpts.transform,\n        rowField = treeOpts.rowField,\n        mapChildren = treeOpts.mapChildren;\n      if (!_xeUtils.default.isArray(records)) {\n        records = [records];\n      }\n      var newRecords = records.map(function (record) {\n        return _this.defineField(Object.assign({}, record));\n      });\n      if (!row) {\n        // 如果为虚拟树\n        if (treeConfig && transform) {\n          insertTreeRow(this, newRecords, false);\n        } else {\n          afterFullData.unshift.apply(afterFullData, _toConsumableArray(newRecords));\n          tableFullData.unshift.apply(tableFullData, _toConsumableArray(newRecords));\n          // 刷新单元格合并\n          mergeList.forEach(function (mergeItem) {\n            var mergeRowIndex = mergeItem.row;\n            if (mergeRowIndex > 0) {\n              mergeItem.row = mergeRowIndex + newRecords.length;\n            }\n          });\n        }\n      } else {\n        if (row === -1) {\n          // 如果为虚拟树\n          if (treeConfig && transform) {\n            insertTreeRow(this, newRecords, true);\n          } else {\n            afterFullData.push.apply(afterFullData, _toConsumableArray(newRecords));\n            tableFullData.push.apply(tableFullData, _toConsumableArray(newRecords));\n            // 刷新单元格合并\n            mergeList.forEach(function (mergeItem) {\n              var mergeRowIndex = mergeItem.row,\n                mergeRowspan = mergeItem.rowspan;\n              if (mergeRowIndex + mergeRowspan > afterFullData.length) {\n                mergeItem.rowspan = mergeRowspan + newRecords.length;\n              }\n            });\n          }\n        } else {\n          // 如果为虚拟树\n          if (treeConfig && transform) {\n            var matchObj = _xeUtils.default.findTree(tableFullTreeData, function (item) {\n              return row[rowField] === item[rowField];\n            }, {\n              children: mapChildren\n            });\n            if (matchObj) {\n              var parentRow = matchObj.parent;\n              var parentChilds = matchObj.items;\n              var parentRest = fullAllDataRowIdData[(0, _util.getRowid)(this, parentRow)];\n              var parentLevel = parentRest ? parentRest.level : 0;\n              newRecords.forEach(function (item, i) {\n                var rowid = (0, _util.getRowid)(_this, item);\n                if (process.env.NODE_ENV === 'development') {\n                  if (item[treeOpts.parentField]) {\n                    if (parentRow && item[treeOpts.parentField] !== parentRow[rowField]) {\n                      (0, _log.errLog)('vxe.error.errProp', [\"\".concat(treeOpts.parentField, \"=\").concat(item[treeOpts.parentField]), \"\".concat(treeOpts.parentField, \"=\").concat(parentRow[rowField])]);\n                    }\n                  }\n                }\n                if (parentRow) {\n                  item[treeOpts.parentField] = parentRow[rowField];\n                }\n                parentChilds.splice(matchObj.index + i, 0, item);\n                var rest = {\n                  row: item,\n                  rowid: rowid,\n                  seq: -1,\n                  index: -1,\n                  _index: -1,\n                  $index: -1,\n                  items: parentChilds,\n                  parent: parentRow,\n                  level: parentLevel + 1\n                };\n                fullDataRowIdData[rowid] = rest;\n                fullAllDataRowIdData[rowid] = rest;\n              });\n            } else {\n              if (process.env.NODE_ENV === 'development') {\n                (0, _log.warnLog)('vxe.error.unableInsert');\n              }\n              insertTreeRow(this, newRecords, true);\n            }\n          } else {\n            if (treeConfig) {\n              throw new Error((0, _log.getLog)('vxe.error.noTree', ['insert']));\n            }\n            var afIndex = -1;\n            // 如果是可视索引\n            if (_xeUtils.default.isNumber(row)) {\n              if (row < afterFullData.length) {\n                afIndex = row;\n              }\n            } else {\n              afIndex = this.findRowIndexOf(afterFullData, row);\n            }\n            if (afIndex === -1) {\n              throw new Error((0, _log.errLog)('vxe.error.unableInsert'));\n            }\n            afterFullData.splice.apply(afterFullData, [afIndex, 0].concat(_toConsumableArray(newRecords)));\n            tableFullData.splice.apply(tableFullData, [this.findRowIndexOf(tableFullData, row), 0].concat(_toConsumableArray(newRecords)));\n            // 刷新单元格合并\n            mergeList.forEach(function (mergeItem) {\n              var mergeRowIndex = mergeItem.row,\n                mergeRowspan = mergeItem.rowspan;\n              if (mergeRowIndex > afIndex) {\n                mergeItem.row = mergeRowIndex + newRecords.length;\n              } else if (mergeRowIndex + mergeRowspan > afIndex) {\n                mergeItem.rowspan = mergeRowspan + newRecords.length;\n              }\n            });\n          }\n        }\n      }\n      (_editStore$insertList = editStore.insertList).unshift.apply(_editStore$insertList, _toConsumableArray(newRecords));\n      this.handleTableData(treeConfig && transform);\n      if (!(treeConfig && transform)) {\n        this.updateAfterDataIndex();\n      }\n      this.updateFooter();\n      this.cacheRowMap();\n      this.checkSelectionStatus();\n      if (this.scrollYLoad) {\n        this.updateScrollYSpace();\n      }\n      return this.$nextTick().then(function () {\n        _this.updateCellAreas();\n        return _this.recalculate();\n      }).then(function () {\n        return {\n          row: newRecords.length ? newRecords[newRecords.length - 1] : null,\n          rows: newRecords\n        };\n      });\n    },\n    /**\r\n     * 删除指定行数据\r\n     * 如果传 row 则删除一行\r\n     * 如果传 rows 则删除多行\r\n     * 如果为空则删除所有\r\n     */\n    _remove: function _remove(rows) {\n      var _this2 = this;\n      var afterFullData = this.afterFullData,\n        tableFullData = this.tableFullData,\n        tableFullTreeData = this.tableFullTreeData,\n        treeConfig = this.treeConfig,\n        mergeList = this.mergeList,\n        editStore = this.editStore,\n        checkboxOpts = this.checkboxOpts,\n        selection = this.selection,\n        isInsertByRow = this.isInsertByRow,\n        treeOpts = this.treeOpts;\n      var transform = treeOpts.transform;\n      var actived = editStore.actived,\n        removeList = editStore.removeList,\n        insertList = editStore.insertList;\n      var checkField = checkboxOpts.checkField;\n      var rest = [];\n      if (!rows) {\n        rows = tableFullData;\n      } else if (!_xeUtils.default.isArray(rows)) {\n        rows = [rows];\n      }\n      // 如果是新增，则保存记录\n      rows.forEach(function (row) {\n        if (!isInsertByRow(row)) {\n          removeList.push(row);\n        }\n      });\n      // 如果绑定了多选属性，则更新状态\n      if (!checkField) {\n        rows.forEach(function (row) {\n          var sIndex = _this2.findRowIndexOf(selection, row);\n          if (sIndex > -1) {\n            selection.splice(sIndex, 1);\n          }\n        });\n      }\n      // 从数据源中移除\n      if (tableFullData === rows) {\n        rows = rest = tableFullData.slice(0);\n        this.tableFullData = [];\n        this.afterFullData = [];\n        this.clearMergeCells();\n      } else {\n        // 如果为虚拟树\n        if (treeConfig && transform) {\n          rows.forEach(function (row) {\n            var rowid = (0, _util.getRowid)(_this2, row);\n            var matchObj = _xeUtils.default.findTree(tableFullTreeData, function (item) {\n              return rowid === (0, _util.getRowid)(_this2, item);\n            }, treeOpts);\n            if (matchObj) {\n              var rItems = matchObj.items.splice(matchObj.index, 1);\n              rest.push(rItems[0]);\n            }\n            var afIndex = _this2.findRowIndexOf(afterFullData, row);\n            if (afIndex > -1) {\n              afterFullData.splice(afIndex, 1);\n            }\n          });\n        } else {\n          rows.forEach(function (row) {\n            var tfIndex = _this2.findRowIndexOf(tableFullData, row);\n            if (tfIndex > -1) {\n              var rItems = tableFullData.splice(tfIndex, 1);\n              rest.push(rItems[0]);\n            }\n            var afIndex = _this2.findRowIndexOf(afterFullData, row);\n            if (afIndex > -1) {\n              // 刷新单元格合并\n              mergeList.forEach(function (mergeItem) {\n                var mergeRowIndex = mergeItem.row,\n                  mergeRowspan = mergeItem.rowspan;\n                if (mergeRowIndex > afIndex) {\n                  mergeItem.row = mergeRowIndex - 1;\n                } else if (mergeRowIndex + mergeRowspan > afIndex) {\n                  mergeItem.rowspan = mergeRowspan - 1;\n                }\n              });\n              afterFullData.splice(afIndex, 1);\n            }\n          });\n        }\n      }\n      // 如果当前行被激活编辑，则清除激活状态\n      if (actived.row && this.findRowIndexOf(rows, actived.row) > -1) {\n        this.clearActived();\n      }\n      // 从新增中移除已删除的数据\n      rows.forEach(function (row) {\n        var iIndex = _this2.findRowIndexOf(insertList, row);\n        if (iIndex > -1) {\n          insertList.splice(iIndex, 1);\n        }\n      });\n      this.handleTableData(treeConfig && transform);\n      if (!(treeConfig && transform)) {\n        this.updateAfterDataIndex();\n      }\n      this.updateFooter();\n      this.cacheRowMap();\n      this.checkSelectionStatus();\n      if (this.scrollYLoad) {\n        this.updateScrollYSpace();\n      }\n      return this.$nextTick().then(function () {\n        _this2.updateCellAreas();\n        return _this2.recalculate();\n      }).then(function () {\n        return {\n          row: rest.length ? rest[rest.length - 1] : null,\n          rows: rest\n        };\n      });\n    },\n    /**\r\n     * 删除复选框选中的数据\r\n     */\n    _removeCheckboxRow: function _removeCheckboxRow() {\n      var _this3 = this;\n      return this.remove(this.getCheckboxRecords()).then(function (params) {\n        _this3.clearCheckboxRow();\n        return params;\n      });\n    },\n    /**\r\n     * 删除单选框选中的数据\r\n     */\n    _removeRadioRow: function _removeRadioRow() {\n      var _this4 = this;\n      var radioRecord = this.getRadioRecord();\n      return this.remove(radioRecord || []).then(function (params) {\n        _this4.clearRadioRow();\n        return params;\n      });\n    },\n    /**\r\n     * 删除当前行选中的数据\r\n     */\n    _removeCurrentRow: function _removeCurrentRow() {\n      var _this5 = this;\n      var currentRecord = this.getCurrentRecord();\n      return this.remove(currentRecord || []).then(function (params) {\n        _this5.clearCurrentRow();\n        return params;\n      });\n    },\n    /**\r\n     * 获取表格数据集，包含新增、删除、修改\r\n     */\n    _getRecordset: function _getRecordset() {\n      return {\n        insertRecords: this.getInsertRecords(),\n        removeRecords: this.getRemoveRecords(),\n        updateRecords: this.getUpdateRecords()\n      };\n    },\n    /**\r\n     * 获取新增的临时数据\r\n     */\n    _getInsertRecords: function _getInsertRecords() {\n      var _this6 = this;\n      var treeConfig = this.treeConfig,\n        tableFullTreeData = this.tableFullTreeData,\n        tableFullData = this.tableFullData,\n        treeOpts = this.treeOpts;\n      var insertList = this.editStore.insertList;\n      var insertRecords = [];\n      if (insertList.length) {\n        // 如果为虚拟树\n        if (treeConfig && treeOpts.transform) {\n          insertList.forEach(function (row) {\n            var rowid = (0, _util.getRowid)(_this6, row);\n            var matchObj = _xeUtils.default.findTree(tableFullTreeData, function (item) {\n              return rowid === (0, _util.getRowid)(_this6, item);\n            }, treeOpts);\n            if (matchObj) {\n              insertRecords.push(row);\n            }\n          });\n        } else {\n          insertList.forEach(function (row) {\n            if (tableFullData.indexOf(row) > -1) {\n              insertRecords.push(row);\n            }\n          });\n        }\n      }\n      return insertRecords;\n    },\n    /**\r\n     * 获取已删除的数据\r\n     */\n    _getRemoveRecords: function _getRemoveRecords() {\n      return this.editStore.removeList;\n    },\n    /**\r\n     * 获取更新数据\r\n     * 只精准匹配 row 的更改\r\n     * 如果是树表格，子节点更改状态不会影响父节点的更新状态\r\n     */\n    _getUpdateRecords: function _getUpdateRecords() {\n      var keepSource = this.keepSource,\n        tableFullData = this.tableFullData,\n        isUpdateByRow = this.isUpdateByRow,\n        treeConfig = this.treeConfig,\n        treeOpts = this.treeOpts,\n        editStore = this.editStore;\n      if (keepSource) {\n        var actived = editStore.actived;\n        var row = actived.row,\n          column = actived.column;\n        if (row || column) {\n          this._syncActivedCell();\n        }\n        if (treeConfig) {\n          return _xeUtils.default.filterTree(tableFullData, function (row) {\n            return isUpdateByRow(row);\n          }, treeOpts);\n        }\n        return tableFullData.filter(function (row) {\n          return isUpdateByRow(row);\n        });\n      }\n      return [];\n    },\n    /**\r\n     * 处理激活编辑\r\n     */\n    handleActived: function handleActived(params, evnt) {\n      var _this7 = this;\n      var editStore = this.editStore,\n        editOpts = this.editOpts,\n        tableColumn = this.tableColumn,\n        editConfig = this.editConfig,\n        mouseConfig = this.mouseConfig;\n      var mode = editOpts.mode;\n      var actived = editStore.actived;\n      var row = params.row,\n        column = params.column;\n      var editRender = column.editRender;\n      var cell = params.cell = params.cell || this.getCell(row, column);\n      var beforeEditMethod = editOpts.beforeEditMethod || editOpts.activeMethod;\n      if ((0, _utils.isEnableConf)(editConfig) && (0, _utils.isEnableConf)(editRender) && cell) {\n        if (actived.row !== row || (mode === 'cell' ? actived.column !== column : false)) {\n          // 判断是否禁用编辑\n          var type = 'edit-disabled';\n          if (!beforeEditMethod || beforeEditMethod(_objectSpread(_objectSpread({}, params), {}, {\n            $table: this\n          }))) {\n            if (mouseConfig) {\n              this.clearSelected(evnt);\n              this.clearCellAreas(evnt);\n              this.clearCopyCellArea(evnt);\n            }\n            this.closeTooltip();\n            if (actived.column) {\n              this.clearActived(evnt);\n            }\n            type = 'edit-actived';\n            column.renderHeight = cell.offsetHeight;\n            actived.args = params;\n            actived.row = row;\n            actived.column = column;\n            if (mode === 'row') {\n              tableColumn.forEach(function (column) {\n                return _this7._getColumnModel(row, column);\n              });\n            } else {\n              this._getColumnModel(row, column);\n            }\n            this.$nextTick(function () {\n              _this7.handleFocus(params, evnt);\n            });\n          }\n          this.emitEvent(type, {\n            row: row,\n            rowIndex: this.getRowIndex(row),\n            $rowIndex: this.getVMRowIndex(row),\n            column: column,\n            columnIndex: this.getColumnIndex(column),\n            $columnIndex: this.getVMColumnIndex(column)\n          }, evnt);\n        } else {\n          var oldColumn = actived.column;\n          if (mouseConfig) {\n            this.clearSelected(evnt);\n            this.clearCellAreas(evnt);\n            this.clearCopyCellArea(evnt);\n          }\n          if (oldColumn !== column) {\n            var oldModel = oldColumn.model;\n            if (oldModel.update) {\n              _utils.default.setCellValue(row, oldColumn, oldModel.value);\n            }\n            this.clearValidate();\n          }\n          column.renderHeight = cell.offsetHeight;\n          actived.args = params;\n          actived.column = column;\n          setTimeout(function () {\n            _this7.handleFocus(params, evnt);\n          });\n        }\n        this.focus();\n      }\n      return this.$nextTick();\n    },\n    _getColumnModel: function _getColumnModel(row, column) {\n      var model = column.model,\n        editRender = column.editRender;\n      if (editRender) {\n        model.value = _utils.default.getCellValue(row, column);\n        model.update = false;\n      }\n    },\n    _setColumnModel: function _setColumnModel(row, column) {\n      var model = column.model,\n        editRender = column.editRender;\n      if (editRender && model.update) {\n        _utils.default.setCellValue(row, column, model.value);\n        model.update = false;\n        model.value = null;\n      }\n    },\n    _syncActivedCell: function _syncActivedCell() {\n      var _this8 = this;\n      var tableColumn = this.tableColumn,\n        editStore = this.editStore,\n        editOpts = this.editOpts;\n      var actived = editStore.actived;\n      var row = actived.row,\n        column = actived.column;\n      if (row || column) {\n        if (editOpts.mode === 'row') {\n          tableColumn.forEach(function (column) {\n            return _this8._setColumnModel(row, column);\n          });\n        } else {\n          this._setColumnModel(row, column);\n        }\n      }\n    },\n    _clearActived: function _clearActived(evnt) {\n      // if (process.env.NODE_ENV === 'development') {\n      //   warnLog('vxe.error.delFunc', ['clearActived', 'clearEdit'])\n      // }\n      // 即将废弃\n      return this.clearEdit(evnt);\n    },\n    /**\r\n     * 清除激活的编辑\r\n     */\n    _clearEdit: function _clearEdit(evnt) {\n      var editStore = this.editStore;\n      var actived = editStore.actived;\n      var row = actived.row,\n        column = actived.column;\n      if (row || column) {\n        this._syncActivedCell();\n        actived.args = null;\n        actived.row = null;\n        actived.column = null;\n        this.updateFooter();\n        this.emitEvent('edit-closed', {\n          row: row,\n          rowIndex: this.getRowIndex(row),\n          $rowIndex: this.getVMRowIndex(row),\n          column: column,\n          columnIndex: this.getColumnIndex(column),\n          $columnIndex: this.getVMColumnIndex(column)\n        }, evnt);\n      }\n      return _vXETable.default._valid ? this.clearValidate() : this.$nextTick();\n    },\n    _getActiveRecord: function _getActiveRecord() {\n      // if (process.env.NODE_ENV === 'development') {\n      //   warnLog('vxe.error.delFunc', ['getActiveRecord', 'getEditRecord'])\n      // }\n      // 即将废弃\n      return this.getEditRecord();\n    },\n    _getEditRecord: function _getEditRecord() {\n      var $el = this.$el,\n        editStore = this.editStore,\n        afterFullData = this.afterFullData;\n      var actived = editStore.actived;\n      var args = actived.args,\n        row = actived.row;\n      if (args && this.findRowIndexOf(afterFullData, row) > -1 && $el.querySelectorAll('.vxe-body--column.col--actived').length) {\n        return Object.assign({}, args);\n      }\n      return null;\n    },\n    _isActiveByRow: function _isActiveByRow(row) {\n      // if (process.env.NODE_ENV === 'development') {\n      //   warnLog('vxe.error.delFunc', ['isActiveByRow', 'isEditByRow'])\n      // }\n      // 即将废弃\n      return this.isEditByRow(row);\n    },\n    /**\r\n     * 判断行是否为激活编辑状态\r\n     * @param {Row} row 行对象\r\n     */\n    _isEditByRow: function _isEditByRow(row) {\n      return this.editStore.actived.row === row;\n    },\n    /**\r\n     * 处理聚焦\r\n     */\n    handleFocus: function handleFocus(params) {\n      var row = params.row,\n        column = params.column,\n        cell = params.cell;\n      var editRender = column.editRender;\n      if ((0, _utils.isEnableConf)(editRender)) {\n        var compRender = _vXETable.default.renderer.get(editRender.name);\n        var autofocus = editRender.autofocus,\n          autoselect = editRender.autoselect;\n        var inputElem;\n        if (!autofocus && compRender) {\n          autofocus = compRender.autofocus;\n        }\n        if (!autoselect && compRender) {\n          autoselect = compRender.autoselect;\n        }\n        // 如果指定了聚焦 class\n        if (_xeUtils.default.isFunction(autofocus)) {\n          inputElem = autofocus.call(this, params);\n        } else if (autofocus) {\n          inputElem = cell.querySelector(autofocus);\n          if (inputElem) {\n            inputElem.focus();\n          }\n        }\n        if (inputElem) {\n          if (autoselect) {\n            inputElem.select();\n          } else {\n            // 保持一致行为，光标移到末端\n            if (_dom.browse.msie) {\n              var textRange = inputElem.createTextRange();\n              textRange.collapse(false);\n              textRange.select();\n            }\n          }\n        } else {\n          // 显示到可视区中\n          this.scrollToRow(row, column);\n        }\n      }\n    },\n    _setActiveRow: function _setActiveRow(row) {\n      // if (process.env.NODE_ENV === 'development') {\n      //   warnLog('vxe.error.delFunc', ['setActiveRow', 'setEditRow'])\n      // }\n      // 即将废弃\n      return this.setEditRow(row);\n    },\n    /**\r\n     * 激活行编辑\r\n     */\n    _setEditRow: function _setEditRow(row) {\n      return this.setEditCell(row, _xeUtils.default.find(this.visibleColumn, function (column) {\n        return (0, _utils.isEnableConf)(column.editRender);\n      }));\n    },\n    _setActiveCell: function _setActiveCell(row) {\n      // if (process.env.NODE_ENV === 'development') {\n      //   warnLog('vxe.error.delFunc', ['setActiveCell', 'setEditCell'])\n      // }\n      // 即将废弃\n      return this.setEditCell(row);\n    },\n    /**\r\n     * 激活单元格编辑\r\n     */\n    _setEditCell: function _setEditCell(row, fieldOrColumn) {\n      var _this9 = this;\n      var editConfig = this.editConfig;\n      var column = _xeUtils.default.isString(fieldOrColumn) ? this.getColumnByField(fieldOrColumn) : fieldOrColumn;\n      if (row && column && (0, _utils.isEnableConf)(editConfig) && (0, _utils.isEnableConf)(column.editRender)) {\n        return this.scrollToRow(row, true).then(function () {\n          var cell = _this9.getCell(row, column);\n          if (cell) {\n            _this9.handleActived({\n              row: row,\n              rowIndex: _this9.getRowIndex(row),\n              column: column,\n              columnIndex: _this9.getColumnIndex(column),\n              cell: cell,\n              $table: _this9\n            });\n            _this9.lastCallTime = Date.now();\n          }\n        });\n      }\n      return this.$nextTick();\n    },\n    /**\r\n     * 只对 trigger=dblclick 有效，选中单元格\r\n     */\n    _setSelectCell: function _setSelectCell(row, fieldOrColumn) {\n      var tableData = this.tableData,\n        editOpts = this.editOpts,\n        visibleColumn = this.visibleColumn;\n      var column = _xeUtils.default.isString(fieldOrColumn) ? this.getColumnByField(fieldOrColumn) : fieldOrColumn;\n      if (row && column && editOpts.trigger !== 'manual') {\n        var rowIndex = this.findRowIndexOf(tableData, row);\n        if (rowIndex > -1) {\n          var cell = this.getCell(row, column);\n          var params = {\n            row: row,\n            rowIndex: rowIndex,\n            column: column,\n            columnIndex: visibleColumn.indexOf(column),\n            cell: cell\n          };\n          this.handleSelected(params, {});\n        }\n      }\n      return this.$nextTick();\n    },\n    /**\r\n     * 处理选中源\r\n     */\n    handleSelected: function handleSelected(params, evnt) {\n      var _this10 = this;\n      var mouseConfig = this.mouseConfig,\n        mouseOpts = this.mouseOpts,\n        editOpts = this.editOpts,\n        editStore = this.editStore;\n      var actived = editStore.actived,\n        selected = editStore.selected;\n      var row = params.row,\n        column = params.column;\n      var isMouseSelected = mouseConfig && mouseOpts.selected;\n      var selectMethod = function selectMethod() {\n        if (isMouseSelected && (selected.row !== row || selected.column !== column)) {\n          if (actived.row !== row || (editOpts.mode === 'cell' ? actived.column !== column : false)) {\n            _this10.clearActived(evnt);\n            _this10.clearSelected(evnt);\n            _this10.clearCellAreas(evnt);\n            _this10.clearCopyCellArea(evnt);\n            selected.args = params;\n            selected.row = row;\n            selected.column = column;\n            if (isMouseSelected) {\n              _this10.addColSdCls();\n            }\n            _this10.focus();\n            if (evnt) {\n              _this10.emitEvent('cell-selected', params, evnt);\n            }\n          }\n        }\n        return _this10.$nextTick();\n      };\n      return selectMethod();\n    },\n    /**\r\n     * 获取选中的单元格\r\n     */\n    _getSelectedCell: function _getSelectedCell() {\n      var _this$editStore$selec = this.editStore.selected,\n        args = _this$editStore$selec.args,\n        column = _this$editStore$selec.column;\n      if (args && column) {\n        return Object.assign({}, args);\n      }\n      return null;\n    },\n    /**\r\n     * 清除所选中源状态\r\n     */\n    _clearSelected: function _clearSelected() {\n      var selected = this.editStore.selected;\n      selected.row = null;\n      selected.column = null;\n      this.reColTitleSdCls();\n      this.reColSdCls();\n      return this.$nextTick();\n    },\n    reColTitleSdCls: function reColTitleSdCls() {\n      var headerElem = this.elemStore['main-header-list'];\n      if (headerElem) {\n        _xeUtils.default.arrayEach(headerElem.querySelectorAll('.col--title-selected'), function (elem) {\n          return _dom.default.removeClass(elem, 'col--title-selected');\n        });\n      }\n    },\n    reColSdCls: function reColSdCls() {\n      var cell = this.$el.querySelector('.col--selected');\n      if (cell) {\n        _dom.default.removeClass(cell, 'col--selected');\n      }\n    },\n    addColSdCls: function addColSdCls() {\n      var selected = this.editStore.selected;\n      var row = selected.row,\n        column = selected.column;\n      this.reColSdCls();\n      if (row && column) {\n        var cell = this.getCell(row, column);\n        if (cell) {\n          _dom.default.addClass(cell, 'col--selected');\n        }\n      }\n    }\n  }\n};\nexports.default = _default;","map":{"version":3,"names":["_typeof","obj","Symbol","iterator","constructor","prototype","Object","defineProperty","exports","value","default","_xeUtils","_interopRequireDefault","require","_vXETable","_utils","_interopRequireWildcard","_util","_dom","_log","_getRequireWildcardCache","nodeInterop","WeakMap","cacheBabelInterop","cacheNodeInterop","__esModule","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","configurable","writable","_toConsumableArray","arr","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","TypeError","o","minLen","_arrayLikeToArray","n","toString","slice","name","Array","from","test","iter","isArray","len","arr2","insertTreeRow","_vm","newRecords","isAppend","tableFullTreeData","afterFullData","fullDataRowIdData","fullAllDataRowIdData","treeOpts","rowField","parentField","children","mapChildren","funcName","item","parentRowId","rowid","getRowid","matchObj","findTree","parentRow","parentRest","parentLevel","level","parentChilds","rest","row","seq","index","_index","$index","items","parent","process","env","NODE_ENV","warnLog","_rest","_default","methods","_insert","records","insertAt","_insertAt","_this","_editStore$insertList","mergeList","editStore","tableFullData","treeConfig","transform","map","record","defineField","assign","unshift","mergeItem","mergeRowIndex","mergeRowspan","rowspan","errLog","concat","splice","Error","getLog","afIndex","isNumber","findRowIndexOf","insertList","handleTableData","updateAfterDataIndex","updateFooter","cacheRowMap","checkSelectionStatus","scrollYLoad","updateScrollYSpace","$nextTick","then","updateCellAreas","recalculate","rows","_remove","_this2","checkboxOpts","selection","isInsertByRow","actived","removeList","checkField","sIndex","clearMergeCells","rItems","tfIndex","clearActived","iIndex","_removeCheckboxRow","_this3","remove","getCheckboxRecords","params","clearCheckboxRow","_removeRadioRow","_this4","radioRecord","getRadioRecord","clearRadioRow","_removeCurrentRow","_this5","currentRecord","getCurrentRecord","clearCurrentRow","_getRecordset","insertRecords","getInsertRecords","removeRecords","getRemoveRecords","updateRecords","getUpdateRecords","_getInsertRecords","_this6","indexOf","_getRemoveRecords","_getUpdateRecords","keepSource","isUpdateByRow","column","_syncActivedCell","filterTree","handleActived","evnt","_this7","editOpts","tableColumn","editConfig","mouseConfig","mode","editRender","cell","getCell","beforeEditMethod","activeMethod","isEnableConf","type","$table","clearSelected","clearCellAreas","clearCopyCellArea","closeTooltip","renderHeight","offsetHeight","args","_getColumnModel","handleFocus","emitEvent","rowIndex","getRowIndex","$rowIndex","getVMRowIndex","columnIndex","getColumnIndex","$columnIndex","getVMColumnIndex","oldColumn","oldModel","model","update","setCellValue","clearValidate","setTimeout","focus","getCellValue","_setColumnModel","_this8","_clearActived","clearEdit","_clearEdit","_valid","_getActiveRecord","getEditRecord","_getEditRecord","$el","querySelectorAll","_isActiveByRow","isEditByRow","_isEditByRow","compRender","renderer","autofocus","autoselect","inputElem","isFunction","querySelector","select","browse","msie","textRange","createTextRange","collapse","scrollToRow","_setActiveRow","setEditRow","_setEditRow","setEditCell","find","visibleColumn","_setActiveCell","_setEditCell","fieldOrColumn","_this9","isString","getColumnByField","lastCallTime","Date","now","_setSelectCell","tableData","trigger","handleSelected","_this10","mouseOpts","selected","isMouseSelected","selectMethod","addColSdCls","_getSelectedCell","_this$editStore$selec","_clearSelected","reColTitleSdCls","reColSdCls","headerElem","elemStore","arrayEach","elem","removeClass","addClass"],"sources":["D:/program/LanqiaoVue/vue-demo/node_modules/vxe-table/lib/edit/src/mixin.js"],"sourcesContent":["\"use strict\";\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _xeUtils = _interopRequireDefault(require(\"xe-utils\"));\nvar _vXETable = _interopRequireDefault(require(\"../../v-x-e-table\"));\nvar _utils = _interopRequireWildcard(require(\"../../tools/utils\"));\nvar _util = require(\"../../table/src/util\");\nvar _dom = _interopRequireWildcard(require(\"../../tools/dom\"));\nvar _log = require(\"../../tools/log\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction insertTreeRow(_vm, newRecords, isAppend) {\n  var tableFullTreeData = _vm.tableFullTreeData,\n    afterFullData = _vm.afterFullData,\n    fullDataRowIdData = _vm.fullDataRowIdData,\n    fullAllDataRowIdData = _vm.fullAllDataRowIdData,\n    treeOpts = _vm.treeOpts;\n  var rowField = treeOpts.rowField,\n    parentField = treeOpts.parentField,\n    children = treeOpts.children,\n    mapChildren = treeOpts.mapChildren;\n  var funcName = isAppend ? 'push' : 'unshift';\n  newRecords.forEach(function (item) {\n    var parentRowId = item[parentField];\n    var rowid = (0, _util.getRowid)(_vm, item);\n    var matchObj = parentRowId ? _xeUtils.default.findTree(tableFullTreeData, function (item) {\n      return parentRowId === item[rowField];\n    }, {\n      children: mapChildren\n    }) : null;\n    if (matchObj) {\n      var parentRow = matchObj.item;\n      var parentRest = fullAllDataRowIdData[(0, _util.getRowid)(_vm, parentRow)];\n      var parentLevel = parentRest ? parentRest.level : 0;\n      var parentChilds = parentRow[children];\n      if (!_xeUtils.default.isArray(parentChilds)) {\n        parentChilds = parentRow[children] = [];\n      }\n      parentChilds[funcName](item);\n      var rest = {\n        row: item,\n        rowid: rowid,\n        seq: -1,\n        index: -1,\n        _index: -1,\n        $index: -1,\n        items: parentChilds,\n        parent: parent,\n        level: parentLevel + 1\n      };\n      fullDataRowIdData[rowid] = rest;\n      fullAllDataRowIdData[rowid] = rest;\n    } else {\n      if (process.env.NODE_ENV === 'development') {\n        if (parentRowId) {\n          (0, _log.warnLog)('vxe.error.unableInsert');\n        }\n      }\n      afterFullData[funcName](item);\n      tableFullTreeData[funcName](item);\n      var _rest = {\n        row: item,\n        rowid: rowid,\n        seq: -1,\n        index: -1,\n        _index: -1,\n        $index: -1,\n        items: tableFullTreeData,\n        parent: null,\n        level: 0\n      };\n      fullDataRowIdData[rowid] = _rest;\n      fullAllDataRowIdData[rowid] = _rest;\n    }\n  });\n}\nvar _default = {\n  methods: {\n    /**\r\n     * 往表格中插入临时数据\r\n     *\r\n     * @param {*} records\r\n     */\n    _insert: function _insert(records) {\n      return this.insertAt(records);\n    },\n    /**\r\n     * 往表格指定行中插入临时数据\r\n     * 如果 row 为空则从插入到顶部\r\n     * 如果 row 为 -1 则从插入到底部\r\n     * 如果 row 为有效行则插入到该行的位置\r\n     * @param {Object/Array} records 新的数据\r\n     * @param {Row} row 指定行\r\n     */\n    _insertAt: function _insertAt(records, row) {\n      var _this = this,\n        _editStore$insertList;\n      var tableFullTreeData = this.tableFullTreeData,\n        mergeList = this.mergeList,\n        afterFullData = this.afterFullData,\n        editStore = this.editStore,\n        tableFullData = this.tableFullData,\n        treeConfig = this.treeConfig,\n        fullDataRowIdData = this.fullDataRowIdData,\n        fullAllDataRowIdData = this.fullAllDataRowIdData,\n        treeOpts = this.treeOpts;\n      var transform = treeOpts.transform,\n        rowField = treeOpts.rowField,\n        mapChildren = treeOpts.mapChildren;\n      if (!_xeUtils.default.isArray(records)) {\n        records = [records];\n      }\n      var newRecords = records.map(function (record) {\n        return _this.defineField(Object.assign({}, record));\n      });\n      if (!row) {\n        // 如果为虚拟树\n        if (treeConfig && transform) {\n          insertTreeRow(this, newRecords, false);\n        } else {\n          afterFullData.unshift.apply(afterFullData, _toConsumableArray(newRecords));\n          tableFullData.unshift.apply(tableFullData, _toConsumableArray(newRecords));\n          // 刷新单元格合并\n          mergeList.forEach(function (mergeItem) {\n            var mergeRowIndex = mergeItem.row;\n            if (mergeRowIndex > 0) {\n              mergeItem.row = mergeRowIndex + newRecords.length;\n            }\n          });\n        }\n      } else {\n        if (row === -1) {\n          // 如果为虚拟树\n          if (treeConfig && transform) {\n            insertTreeRow(this, newRecords, true);\n          } else {\n            afterFullData.push.apply(afterFullData, _toConsumableArray(newRecords));\n            tableFullData.push.apply(tableFullData, _toConsumableArray(newRecords));\n            // 刷新单元格合并\n            mergeList.forEach(function (mergeItem) {\n              var mergeRowIndex = mergeItem.row,\n                mergeRowspan = mergeItem.rowspan;\n              if (mergeRowIndex + mergeRowspan > afterFullData.length) {\n                mergeItem.rowspan = mergeRowspan + newRecords.length;\n              }\n            });\n          }\n        } else {\n          // 如果为虚拟树\n          if (treeConfig && transform) {\n            var matchObj = _xeUtils.default.findTree(tableFullTreeData, function (item) {\n              return row[rowField] === item[rowField];\n            }, {\n              children: mapChildren\n            });\n            if (matchObj) {\n              var parentRow = matchObj.parent;\n              var parentChilds = matchObj.items;\n              var parentRest = fullAllDataRowIdData[(0, _util.getRowid)(this, parentRow)];\n              var parentLevel = parentRest ? parentRest.level : 0;\n              newRecords.forEach(function (item, i) {\n                var rowid = (0, _util.getRowid)(_this, item);\n                if (process.env.NODE_ENV === 'development') {\n                  if (item[treeOpts.parentField]) {\n                    if (parentRow && item[treeOpts.parentField] !== parentRow[rowField]) {\n                      (0, _log.errLog)('vxe.error.errProp', [\"\".concat(treeOpts.parentField, \"=\").concat(item[treeOpts.parentField]), \"\".concat(treeOpts.parentField, \"=\").concat(parentRow[rowField])]);\n                    }\n                  }\n                }\n                if (parentRow) {\n                  item[treeOpts.parentField] = parentRow[rowField];\n                }\n                parentChilds.splice(matchObj.index + i, 0, item);\n                var rest = {\n                  row: item,\n                  rowid: rowid,\n                  seq: -1,\n                  index: -1,\n                  _index: -1,\n                  $index: -1,\n                  items: parentChilds,\n                  parent: parentRow,\n                  level: parentLevel + 1\n                };\n                fullDataRowIdData[rowid] = rest;\n                fullAllDataRowIdData[rowid] = rest;\n              });\n            } else {\n              if (process.env.NODE_ENV === 'development') {\n                (0, _log.warnLog)('vxe.error.unableInsert');\n              }\n              insertTreeRow(this, newRecords, true);\n            }\n          } else {\n            if (treeConfig) {\n              throw new Error((0, _log.getLog)('vxe.error.noTree', ['insert']));\n            }\n            var afIndex = -1;\n            // 如果是可视索引\n            if (_xeUtils.default.isNumber(row)) {\n              if (row < afterFullData.length) {\n                afIndex = row;\n              }\n            } else {\n              afIndex = this.findRowIndexOf(afterFullData, row);\n            }\n            if (afIndex === -1) {\n              throw new Error((0, _log.errLog)('vxe.error.unableInsert'));\n            }\n            afterFullData.splice.apply(afterFullData, [afIndex, 0].concat(_toConsumableArray(newRecords)));\n            tableFullData.splice.apply(tableFullData, [this.findRowIndexOf(tableFullData, row), 0].concat(_toConsumableArray(newRecords)));\n            // 刷新单元格合并\n            mergeList.forEach(function (mergeItem) {\n              var mergeRowIndex = mergeItem.row,\n                mergeRowspan = mergeItem.rowspan;\n              if (mergeRowIndex > afIndex) {\n                mergeItem.row = mergeRowIndex + newRecords.length;\n              } else if (mergeRowIndex + mergeRowspan > afIndex) {\n                mergeItem.rowspan = mergeRowspan + newRecords.length;\n              }\n            });\n          }\n        }\n      }\n      (_editStore$insertList = editStore.insertList).unshift.apply(_editStore$insertList, _toConsumableArray(newRecords));\n      this.handleTableData(treeConfig && transform);\n      if (!(treeConfig && transform)) {\n        this.updateAfterDataIndex();\n      }\n      this.updateFooter();\n      this.cacheRowMap();\n      this.checkSelectionStatus();\n      if (this.scrollYLoad) {\n        this.updateScrollYSpace();\n      }\n      return this.$nextTick().then(function () {\n        _this.updateCellAreas();\n        return _this.recalculate();\n      }).then(function () {\n        return {\n          row: newRecords.length ? newRecords[newRecords.length - 1] : null,\n          rows: newRecords\n        };\n      });\n    },\n    /**\r\n     * 删除指定行数据\r\n     * 如果传 row 则删除一行\r\n     * 如果传 rows 则删除多行\r\n     * 如果为空则删除所有\r\n     */\n    _remove: function _remove(rows) {\n      var _this2 = this;\n      var afterFullData = this.afterFullData,\n        tableFullData = this.tableFullData,\n        tableFullTreeData = this.tableFullTreeData,\n        treeConfig = this.treeConfig,\n        mergeList = this.mergeList,\n        editStore = this.editStore,\n        checkboxOpts = this.checkboxOpts,\n        selection = this.selection,\n        isInsertByRow = this.isInsertByRow,\n        treeOpts = this.treeOpts;\n      var transform = treeOpts.transform;\n      var actived = editStore.actived,\n        removeList = editStore.removeList,\n        insertList = editStore.insertList;\n      var checkField = checkboxOpts.checkField;\n      var rest = [];\n      if (!rows) {\n        rows = tableFullData;\n      } else if (!_xeUtils.default.isArray(rows)) {\n        rows = [rows];\n      }\n      // 如果是新增，则保存记录\n      rows.forEach(function (row) {\n        if (!isInsertByRow(row)) {\n          removeList.push(row);\n        }\n      });\n      // 如果绑定了多选属性，则更新状态\n      if (!checkField) {\n        rows.forEach(function (row) {\n          var sIndex = _this2.findRowIndexOf(selection, row);\n          if (sIndex > -1) {\n            selection.splice(sIndex, 1);\n          }\n        });\n      }\n      // 从数据源中移除\n      if (tableFullData === rows) {\n        rows = rest = tableFullData.slice(0);\n        this.tableFullData = [];\n        this.afterFullData = [];\n        this.clearMergeCells();\n      } else {\n        // 如果为虚拟树\n        if (treeConfig && transform) {\n          rows.forEach(function (row) {\n            var rowid = (0, _util.getRowid)(_this2, row);\n            var matchObj = _xeUtils.default.findTree(tableFullTreeData, function (item) {\n              return rowid === (0, _util.getRowid)(_this2, item);\n            }, treeOpts);\n            if (matchObj) {\n              var rItems = matchObj.items.splice(matchObj.index, 1);\n              rest.push(rItems[0]);\n            }\n            var afIndex = _this2.findRowIndexOf(afterFullData, row);\n            if (afIndex > -1) {\n              afterFullData.splice(afIndex, 1);\n            }\n          });\n        } else {\n          rows.forEach(function (row) {\n            var tfIndex = _this2.findRowIndexOf(tableFullData, row);\n            if (tfIndex > -1) {\n              var rItems = tableFullData.splice(tfIndex, 1);\n              rest.push(rItems[0]);\n            }\n            var afIndex = _this2.findRowIndexOf(afterFullData, row);\n            if (afIndex > -1) {\n              // 刷新单元格合并\n              mergeList.forEach(function (mergeItem) {\n                var mergeRowIndex = mergeItem.row,\n                  mergeRowspan = mergeItem.rowspan;\n                if (mergeRowIndex > afIndex) {\n                  mergeItem.row = mergeRowIndex - 1;\n                } else if (mergeRowIndex + mergeRowspan > afIndex) {\n                  mergeItem.rowspan = mergeRowspan - 1;\n                }\n              });\n              afterFullData.splice(afIndex, 1);\n            }\n          });\n        }\n      }\n      // 如果当前行被激活编辑，则清除激活状态\n      if (actived.row && this.findRowIndexOf(rows, actived.row) > -1) {\n        this.clearActived();\n      }\n      // 从新增中移除已删除的数据\n      rows.forEach(function (row) {\n        var iIndex = _this2.findRowIndexOf(insertList, row);\n        if (iIndex > -1) {\n          insertList.splice(iIndex, 1);\n        }\n      });\n      this.handleTableData(treeConfig && transform);\n      if (!(treeConfig && transform)) {\n        this.updateAfterDataIndex();\n      }\n      this.updateFooter();\n      this.cacheRowMap();\n      this.checkSelectionStatus();\n      if (this.scrollYLoad) {\n        this.updateScrollYSpace();\n      }\n      return this.$nextTick().then(function () {\n        _this2.updateCellAreas();\n        return _this2.recalculate();\n      }).then(function () {\n        return {\n          row: rest.length ? rest[rest.length - 1] : null,\n          rows: rest\n        };\n      });\n    },\n    /**\r\n     * 删除复选框选中的数据\r\n     */\n    _removeCheckboxRow: function _removeCheckboxRow() {\n      var _this3 = this;\n      return this.remove(this.getCheckboxRecords()).then(function (params) {\n        _this3.clearCheckboxRow();\n        return params;\n      });\n    },\n    /**\r\n     * 删除单选框选中的数据\r\n     */\n    _removeRadioRow: function _removeRadioRow() {\n      var _this4 = this;\n      var radioRecord = this.getRadioRecord();\n      return this.remove(radioRecord || []).then(function (params) {\n        _this4.clearRadioRow();\n        return params;\n      });\n    },\n    /**\r\n     * 删除当前行选中的数据\r\n     */\n    _removeCurrentRow: function _removeCurrentRow() {\n      var _this5 = this;\n      var currentRecord = this.getCurrentRecord();\n      return this.remove(currentRecord || []).then(function (params) {\n        _this5.clearCurrentRow();\n        return params;\n      });\n    },\n    /**\r\n     * 获取表格数据集，包含新增、删除、修改\r\n     */\n    _getRecordset: function _getRecordset() {\n      return {\n        insertRecords: this.getInsertRecords(),\n        removeRecords: this.getRemoveRecords(),\n        updateRecords: this.getUpdateRecords()\n      };\n    },\n    /**\r\n     * 获取新增的临时数据\r\n     */\n    _getInsertRecords: function _getInsertRecords() {\n      var _this6 = this;\n      var treeConfig = this.treeConfig,\n        tableFullTreeData = this.tableFullTreeData,\n        tableFullData = this.tableFullData,\n        treeOpts = this.treeOpts;\n      var insertList = this.editStore.insertList;\n      var insertRecords = [];\n      if (insertList.length) {\n        // 如果为虚拟树\n        if (treeConfig && treeOpts.transform) {\n          insertList.forEach(function (row) {\n            var rowid = (0, _util.getRowid)(_this6, row);\n            var matchObj = _xeUtils.default.findTree(tableFullTreeData, function (item) {\n              return rowid === (0, _util.getRowid)(_this6, item);\n            }, treeOpts);\n            if (matchObj) {\n              insertRecords.push(row);\n            }\n          });\n        } else {\n          insertList.forEach(function (row) {\n            if (tableFullData.indexOf(row) > -1) {\n              insertRecords.push(row);\n            }\n          });\n        }\n      }\n      return insertRecords;\n    },\n    /**\r\n     * 获取已删除的数据\r\n     */\n    _getRemoveRecords: function _getRemoveRecords() {\n      return this.editStore.removeList;\n    },\n    /**\r\n     * 获取更新数据\r\n     * 只精准匹配 row 的更改\r\n     * 如果是树表格，子节点更改状态不会影响父节点的更新状态\r\n     */\n    _getUpdateRecords: function _getUpdateRecords() {\n      var keepSource = this.keepSource,\n        tableFullData = this.tableFullData,\n        isUpdateByRow = this.isUpdateByRow,\n        treeConfig = this.treeConfig,\n        treeOpts = this.treeOpts,\n        editStore = this.editStore;\n      if (keepSource) {\n        var actived = editStore.actived;\n        var row = actived.row,\n          column = actived.column;\n        if (row || column) {\n          this._syncActivedCell();\n        }\n        if (treeConfig) {\n          return _xeUtils.default.filterTree(tableFullData, function (row) {\n            return isUpdateByRow(row);\n          }, treeOpts);\n        }\n        return tableFullData.filter(function (row) {\n          return isUpdateByRow(row);\n        });\n      }\n      return [];\n    },\n    /**\r\n     * 处理激活编辑\r\n     */\n    handleActived: function handleActived(params, evnt) {\n      var _this7 = this;\n      var editStore = this.editStore,\n        editOpts = this.editOpts,\n        tableColumn = this.tableColumn,\n        editConfig = this.editConfig,\n        mouseConfig = this.mouseConfig;\n      var mode = editOpts.mode;\n      var actived = editStore.actived;\n      var row = params.row,\n        column = params.column;\n      var editRender = column.editRender;\n      var cell = params.cell = params.cell || this.getCell(row, column);\n      var beforeEditMethod = editOpts.beforeEditMethod || editOpts.activeMethod;\n      if ((0, _utils.isEnableConf)(editConfig) && (0, _utils.isEnableConf)(editRender) && cell) {\n        if (actived.row !== row || (mode === 'cell' ? actived.column !== column : false)) {\n          // 判断是否禁用编辑\n          var type = 'edit-disabled';\n          if (!beforeEditMethod || beforeEditMethod(_objectSpread(_objectSpread({}, params), {}, {\n            $table: this\n          }))) {\n            if (mouseConfig) {\n              this.clearSelected(evnt);\n              this.clearCellAreas(evnt);\n              this.clearCopyCellArea(evnt);\n            }\n            this.closeTooltip();\n            if (actived.column) {\n              this.clearActived(evnt);\n            }\n            type = 'edit-actived';\n            column.renderHeight = cell.offsetHeight;\n            actived.args = params;\n            actived.row = row;\n            actived.column = column;\n            if (mode === 'row') {\n              tableColumn.forEach(function (column) {\n                return _this7._getColumnModel(row, column);\n              });\n            } else {\n              this._getColumnModel(row, column);\n            }\n            this.$nextTick(function () {\n              _this7.handleFocus(params, evnt);\n            });\n          }\n          this.emitEvent(type, {\n            row: row,\n            rowIndex: this.getRowIndex(row),\n            $rowIndex: this.getVMRowIndex(row),\n            column: column,\n            columnIndex: this.getColumnIndex(column),\n            $columnIndex: this.getVMColumnIndex(column)\n          }, evnt);\n        } else {\n          var oldColumn = actived.column;\n          if (mouseConfig) {\n            this.clearSelected(evnt);\n            this.clearCellAreas(evnt);\n            this.clearCopyCellArea(evnt);\n          }\n          if (oldColumn !== column) {\n            var oldModel = oldColumn.model;\n            if (oldModel.update) {\n              _utils.default.setCellValue(row, oldColumn, oldModel.value);\n            }\n            this.clearValidate();\n          }\n          column.renderHeight = cell.offsetHeight;\n          actived.args = params;\n          actived.column = column;\n          setTimeout(function () {\n            _this7.handleFocus(params, evnt);\n          });\n        }\n        this.focus();\n      }\n      return this.$nextTick();\n    },\n    _getColumnModel: function _getColumnModel(row, column) {\n      var model = column.model,\n        editRender = column.editRender;\n      if (editRender) {\n        model.value = _utils.default.getCellValue(row, column);\n        model.update = false;\n      }\n    },\n    _setColumnModel: function _setColumnModel(row, column) {\n      var model = column.model,\n        editRender = column.editRender;\n      if (editRender && model.update) {\n        _utils.default.setCellValue(row, column, model.value);\n        model.update = false;\n        model.value = null;\n      }\n    },\n    _syncActivedCell: function _syncActivedCell() {\n      var _this8 = this;\n      var tableColumn = this.tableColumn,\n        editStore = this.editStore,\n        editOpts = this.editOpts;\n      var actived = editStore.actived;\n      var row = actived.row,\n        column = actived.column;\n      if (row || column) {\n        if (editOpts.mode === 'row') {\n          tableColumn.forEach(function (column) {\n            return _this8._setColumnModel(row, column);\n          });\n        } else {\n          this._setColumnModel(row, column);\n        }\n      }\n    },\n    _clearActived: function _clearActived(evnt) {\n      // if (process.env.NODE_ENV === 'development') {\n      //   warnLog('vxe.error.delFunc', ['clearActived', 'clearEdit'])\n      // }\n      // 即将废弃\n      return this.clearEdit(evnt);\n    },\n    /**\r\n     * 清除激活的编辑\r\n     */\n    _clearEdit: function _clearEdit(evnt) {\n      var editStore = this.editStore;\n      var actived = editStore.actived;\n      var row = actived.row,\n        column = actived.column;\n      if (row || column) {\n        this._syncActivedCell();\n        actived.args = null;\n        actived.row = null;\n        actived.column = null;\n        this.updateFooter();\n        this.emitEvent('edit-closed', {\n          row: row,\n          rowIndex: this.getRowIndex(row),\n          $rowIndex: this.getVMRowIndex(row),\n          column: column,\n          columnIndex: this.getColumnIndex(column),\n          $columnIndex: this.getVMColumnIndex(column)\n        }, evnt);\n      }\n      return _vXETable.default._valid ? this.clearValidate() : this.$nextTick();\n    },\n    _getActiveRecord: function _getActiveRecord() {\n      // if (process.env.NODE_ENV === 'development') {\n      //   warnLog('vxe.error.delFunc', ['getActiveRecord', 'getEditRecord'])\n      // }\n      // 即将废弃\n      return this.getEditRecord();\n    },\n    _getEditRecord: function _getEditRecord() {\n      var $el = this.$el,\n        editStore = this.editStore,\n        afterFullData = this.afterFullData;\n      var actived = editStore.actived;\n      var args = actived.args,\n        row = actived.row;\n      if (args && this.findRowIndexOf(afterFullData, row) > -1 && $el.querySelectorAll('.vxe-body--column.col--actived').length) {\n        return Object.assign({}, args);\n      }\n      return null;\n    },\n    _isActiveByRow: function _isActiveByRow(row) {\n      // if (process.env.NODE_ENV === 'development') {\n      //   warnLog('vxe.error.delFunc', ['isActiveByRow', 'isEditByRow'])\n      // }\n      // 即将废弃\n      return this.isEditByRow(row);\n    },\n    /**\r\n     * 判断行是否为激活编辑状态\r\n     * @param {Row} row 行对象\r\n     */\n    _isEditByRow: function _isEditByRow(row) {\n      return this.editStore.actived.row === row;\n    },\n    /**\r\n     * 处理聚焦\r\n     */\n    handleFocus: function handleFocus(params) {\n      var row = params.row,\n        column = params.column,\n        cell = params.cell;\n      var editRender = column.editRender;\n      if ((0, _utils.isEnableConf)(editRender)) {\n        var compRender = _vXETable.default.renderer.get(editRender.name);\n        var autofocus = editRender.autofocus,\n          autoselect = editRender.autoselect;\n        var inputElem;\n        if (!autofocus && compRender) {\n          autofocus = compRender.autofocus;\n        }\n        if (!autoselect && compRender) {\n          autoselect = compRender.autoselect;\n        }\n        // 如果指定了聚焦 class\n        if (_xeUtils.default.isFunction(autofocus)) {\n          inputElem = autofocus.call(this, params);\n        } else if (autofocus) {\n          inputElem = cell.querySelector(autofocus);\n          if (inputElem) {\n            inputElem.focus();\n          }\n        }\n        if (inputElem) {\n          if (autoselect) {\n            inputElem.select();\n          } else {\n            // 保持一致行为，光标移到末端\n            if (_dom.browse.msie) {\n              var textRange = inputElem.createTextRange();\n              textRange.collapse(false);\n              textRange.select();\n            }\n          }\n        } else {\n          // 显示到可视区中\n          this.scrollToRow(row, column);\n        }\n      }\n    },\n    _setActiveRow: function _setActiveRow(row) {\n      // if (process.env.NODE_ENV === 'development') {\n      //   warnLog('vxe.error.delFunc', ['setActiveRow', 'setEditRow'])\n      // }\n      // 即将废弃\n      return this.setEditRow(row);\n    },\n    /**\r\n     * 激活行编辑\r\n     */\n    _setEditRow: function _setEditRow(row) {\n      return this.setEditCell(row, _xeUtils.default.find(this.visibleColumn, function (column) {\n        return (0, _utils.isEnableConf)(column.editRender);\n      }));\n    },\n    _setActiveCell: function _setActiveCell(row) {\n      // if (process.env.NODE_ENV === 'development') {\n      //   warnLog('vxe.error.delFunc', ['setActiveCell', 'setEditCell'])\n      // }\n      // 即将废弃\n      return this.setEditCell(row);\n    },\n    /**\r\n     * 激活单元格编辑\r\n     */\n    _setEditCell: function _setEditCell(row, fieldOrColumn) {\n      var _this9 = this;\n      var editConfig = this.editConfig;\n      var column = _xeUtils.default.isString(fieldOrColumn) ? this.getColumnByField(fieldOrColumn) : fieldOrColumn;\n      if (row && column && (0, _utils.isEnableConf)(editConfig) && (0, _utils.isEnableConf)(column.editRender)) {\n        return this.scrollToRow(row, true).then(function () {\n          var cell = _this9.getCell(row, column);\n          if (cell) {\n            _this9.handleActived({\n              row: row,\n              rowIndex: _this9.getRowIndex(row),\n              column: column,\n              columnIndex: _this9.getColumnIndex(column),\n              cell: cell,\n              $table: _this9\n            });\n            _this9.lastCallTime = Date.now();\n          }\n        });\n      }\n      return this.$nextTick();\n    },\n    /**\r\n     * 只对 trigger=dblclick 有效，选中单元格\r\n     */\n    _setSelectCell: function _setSelectCell(row, fieldOrColumn) {\n      var tableData = this.tableData,\n        editOpts = this.editOpts,\n        visibleColumn = this.visibleColumn;\n      var column = _xeUtils.default.isString(fieldOrColumn) ? this.getColumnByField(fieldOrColumn) : fieldOrColumn;\n      if (row && column && editOpts.trigger !== 'manual') {\n        var rowIndex = this.findRowIndexOf(tableData, row);\n        if (rowIndex > -1) {\n          var cell = this.getCell(row, column);\n          var params = {\n            row: row,\n            rowIndex: rowIndex,\n            column: column,\n            columnIndex: visibleColumn.indexOf(column),\n            cell: cell\n          };\n          this.handleSelected(params, {});\n        }\n      }\n      return this.$nextTick();\n    },\n    /**\r\n     * 处理选中源\r\n     */\n    handleSelected: function handleSelected(params, evnt) {\n      var _this10 = this;\n      var mouseConfig = this.mouseConfig,\n        mouseOpts = this.mouseOpts,\n        editOpts = this.editOpts,\n        editStore = this.editStore;\n      var actived = editStore.actived,\n        selected = editStore.selected;\n      var row = params.row,\n        column = params.column;\n      var isMouseSelected = mouseConfig && mouseOpts.selected;\n      var selectMethod = function selectMethod() {\n        if (isMouseSelected && (selected.row !== row || selected.column !== column)) {\n          if (actived.row !== row || (editOpts.mode === 'cell' ? actived.column !== column : false)) {\n            _this10.clearActived(evnt);\n            _this10.clearSelected(evnt);\n            _this10.clearCellAreas(evnt);\n            _this10.clearCopyCellArea(evnt);\n            selected.args = params;\n            selected.row = row;\n            selected.column = column;\n            if (isMouseSelected) {\n              _this10.addColSdCls();\n            }\n            _this10.focus();\n            if (evnt) {\n              _this10.emitEvent('cell-selected', params, evnt);\n            }\n          }\n        }\n        return _this10.$nextTick();\n      };\n      return selectMethod();\n    },\n    /**\r\n     * 获取选中的单元格\r\n     */\n    _getSelectedCell: function _getSelectedCell() {\n      var _this$editStore$selec = this.editStore.selected,\n        args = _this$editStore$selec.args,\n        column = _this$editStore$selec.column;\n      if (args && column) {\n        return Object.assign({}, args);\n      }\n      return null;\n    },\n    /**\r\n     * 清除所选中源状态\r\n     */\n    _clearSelected: function _clearSelected() {\n      var selected = this.editStore.selected;\n      selected.row = null;\n      selected.column = null;\n      this.reColTitleSdCls();\n      this.reColSdCls();\n      return this.$nextTick();\n    },\n    reColTitleSdCls: function reColTitleSdCls() {\n      var headerElem = this.elemStore['main-header-list'];\n      if (headerElem) {\n        _xeUtils.default.arrayEach(headerElem.querySelectorAll('.col--title-selected'), function (elem) {\n          return _dom.default.removeClass(elem, 'col--title-selected');\n        });\n      }\n    },\n    reColSdCls: function reColSdCls() {\n      var cell = this.$el.querySelector('.col--selected');\n      if (cell) {\n        _dom.default.removeClass(cell, 'col--selected');\n      }\n    },\n    addColSdCls: function addColSdCls() {\n      var selected = this.editStore.selected;\n      var row = selected.row,\n        column = selected.column;\n      this.reColSdCls();\n      if (row && column) {\n        var cell = this.getCell(row, column);\n        if (cell) {\n          _dom.default.addClass(cell, 'col--selected');\n        }\n      }\n    }\n  }\n};\nexports.default = _default;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}