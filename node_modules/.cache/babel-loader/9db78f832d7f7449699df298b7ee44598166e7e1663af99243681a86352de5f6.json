{"ast":null,"code":"import \"core-js/modules/es.array.sort.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.join.js\";\nimport \"core-js/modules/es.array.concat.js\";\n// 给 vue 实例挂载内部对象，例如\nVue.prototype.$XModal = VXETable.modal;\nVue.prototype.$XPrint = VXETable.print;\nVue.prototype.$XSaveFile = VXETable.saveFile;\nVue.prototype.$XReadFile = VXETable.readFile;\nexport default {\n  name: \"logList\",\n  data: function data() {\n    var _this = this;\n    return {\n      formData: {\n        name: ''\n      },\n      gridOptions: {\n        resizable: true,\n        showOverflow: true,\n        border: 'inner',\n        height: 548,\n        rowId: 'id',\n        printConfig: {\n          columns: [{\n            field: 'id'\n          }, {\n            field: 'name'\n          }, {\n            field: 'email'\n          }, {\n            field: 'nickname'\n          }, {\n            field: 'age'\n          }, {\n            field: 'role'\n          }, {\n            field: 'amount'\n          }, {\n            field: 'updateDate'\n          }, {\n            field: 'createDate'\n          }],\n          modes: ['current', 'selected', 'all']\n        },\n        sortConfig: {\n          trigger: 'cell',\n          remote: true,\n          defaultSort: {\n            field: 'name',\n            order: 'desc'\n          }\n        },\n        filterConfig: {\n          remote: true\n        },\n        pagerConfig: {\n          // perfect: true,\n          pageSize: 10,\n          pageSizes: [5, 10, 15, 20, 50, 100, 200, 500, 1000]\n        },\n        exportConfig: {\n          // 默认选中类型\n          type: 'xlsx',\n          // 局部自定义类型\n          types: ['xlsx', 'csv', 'html', 'xml', 'txt', 'pdf'],\n          // 自定义数据量列表\n          modes: ['current', 'selected', 'all']\n        },\n        checkboxConfig: {\n          labelField: 'id',\n          reserve: true,\n          // 分页场景下，继续保留选中状态\n          highlight: true,\n          range: true\n        },\n        proxyConfig: {\n          seq: true,\n          // 启用动态序号代理\n          sort: true,\n          // 启用排序代理\n          filter: true,\n          // 启用筛选代理\n          props: {\n            result: 'result',\n            // 配置响应结果列表字段\n            total: 'page.total' // 配置响应结果总页数字段\n          },\n\n          ajax: {\n            // 接收 Promise 对象\n            query: function query(_ref) {\n              var page = _ref.page,\n                sorts = _ref.sorts,\n                filters = _ref.filters;\n              var queryParams = Object.assign({}, _this.formData);\n              // 处理排序条件\n              var firstSort = sorts[0];\n              if (firstSort) {\n                queryParams.sort = firstSort.property;\n                queryParams.order = firstSort.order;\n              }\n              // 处理筛选条件\n              filters.forEach(function (_ref2) {\n                var property = _ref2.property,\n                  values = _ref2.values;\n                queryParams[property] = values.join(',');\n              });\n              return XEAjax.get(\"https://api.xuliangzhan.com:10443/api/pub/page/list/\".concat(page.pageSize, \"/\").concat(page.currentPage), queryParams);\n            },\n            // 被某些特殊功能所触发，例如：导出数据 mode=all 时，会触发该方法并对返回的数据进行导出\n            queryAll: function queryAll() {\n              return XEAjax.get('https://api.xuliangzhan.com:10443/api/pub/all');\n            }\n          }\n        },\n        toolbarConfig: {\n          export: true,\n          print: true,\n          custom: true,\n          zoom: true,\n          slots: {\n            buttons: 'toolbar_buttons'\n          }\n        },\n        columns: [{\n          type: 'seq',\n          width: 60,\n          fixed: 'left',\n          title: '序号'\n        }, {\n          type: 'checkbox',\n          title: 'ID',\n          width: 120,\n          fixed: 'left'\n        }, {\n          field: 'name',\n          title: '姓名',\n          minWidth: 160,\n          sortable: true\n        }, {\n          field: 'email',\n          title: '邮箱',\n          minWidth: 160,\n          editRender: {\n            name: 'input'\n          }\n        }, {\n          field: 'nickname',\n          title: '昵称',\n          sortable: true,\n          minWidth: 160\n        }, {\n          field: 'age',\n          title: '年龄',\n          visible: false,\n          sortable: true,\n          width: 100\n        }, {\n          field: 'role',\n          title: '职位',\n          sortable: true,\n          minWidth: 160,\n          filters: [{\n            label: '前端开发',\n            value: '前端',\n            checked: true\n          }, {\n            label: '后端开发',\n            value: '后端'\n          }, {\n            label: '测试',\n            value: '测试'\n          }, {\n            label: '程序员鼓励师',\n            value: '程序员鼓励师'\n          }],\n          filterMultiple: false\n        }, {\n          field: 'amount',\n          title: '收入',\n          width: 140,\n          formatter: this.formatAmount\n        }, {\n          field: 'updateDate',\n          title: '更新时间',\n          visible: false,\n          width: 160,\n          sortable: true,\n          formatter: this.formatDate\n        }, {\n          field: 'createDate',\n          title: '创建时间',\n          visible: false,\n          width: 160,\n          sortable: true,\n          formatter: this.formatDate\n        }]\n      }\n    };\n  },\n  created: function created() {},\n  methods: {\n    searchEvent: function searchEvent() {\n      this.$refs.xGrid.commitProxy('reload');\n    },\n    formatAmount: function formatAmount(_ref3) {\n      var cellValue = _ref3.cellValue;\n      return cellValue ? \"\\uFFE5\".concat(XEUtils.commafy(XEUtils.toNumber(cellValue), {\n        digits: 2\n      })) : '';\n    },\n    formatDate: function formatDate(_ref4) {\n      var cellValue = _ref4.cellValue;\n      return XEUtils.toDateString(cellValue, 'yyyy-MM-dd HH:ss:mm');\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;AA4BA;AACAA;AACAA;AACAA;AACAA;AACA;EAEAC;EACAC;IAAA;IACA;MACAC;QACAF;MACA;MACAG;QACAC;QACAC;QACAC;QACAC;QACAC;QACAC;UACAC,UACA;YAAAC;UAAA,GACA;YAAAA;UAAA,GACA;YAAAA;UAAA,GACA;YAAAA;UAAA,GACA;YAAAA;UAAA,GACA;YAAAA;UAAA,GACA;YAAAA;UAAA,GACA;YAAAA;UAAA,GACA;YAAAA;UAAA,EACA;UACAC;QACA;QACAC;UACAC;UACAC;UACAC;YACAL;YACAM;UACA;QACA;QACAC;UACAH;QACA;QACAI;UACA;UACAC;UACAC;QACA;QACAC;UACA;UACAC;UACA;UACAC;UACA;UACAZ;QACA;QACAa;UACAC;UACAC;UAAA;UACAC;UACAC;QACA;QACAC;UACAC;UAAA;UACAC;UAAA;UACAC;UAAA;UACAC;YACAC;YAAA;YACAC;UACA;;UACAC;YACA;YACAC;cAAA;gBAAAC;gBAAAC;cACA;cACA;cACA;cACA;gBACAC;gBACAA;cACA;cACA;cACAD;gBAAA;kBAAAE;gBACAD;cACA;cACA;YACA;YACA;YACAE;cAAA;YAAA;UACA;QACA;QACAC;UACAC;UACAC;UACAC;UACAC;UACAC;YACAC;UACA;QACA;QACAxC,UACA;UAAAa;UAAA4B;UAAAC;UAAAC;QAAA,GACA;UAAA9B;UAAA8B;UAAAF;UAAAC;QAAA,GACA;UAAAzC;UAAA0C;UAAAC;UAAAC;QAAA,GACA;UAAA5C;UAAA0C;UAAAC;UAAAE;YAAAxD;UAAA;QAAA,GACA;UAAAW;UAAA0C;UAAAE;UAAAD;QAAA,GACA;UAAA3C;UAAA0C;UAAAI;UAAAF;UAAAJ;QAAA,GACA;UACAxC;UACA0C;UACAE;UACAD;UACAd,UACA;YAAAkB;YAAAC;YAAAC;UAAA,GACA;YAAAF;YAAAC;UAAA,GACA;YAAAD;YAAAC;UAAA,GACA;YAAAD;YAAAC;UAAA,EACA;UACAE;QACA,GACA;UAAAlD;UAAA0C;UAAAF;UAAAW;QAAA,GACA;UACAnD;UACA0C;UACAI;UACAN;UACAI;UACAO;QACA,GACA;UACAnD;UACA0C;UACAI;UACAN;UACAI;UACAO;QACA;MAEA;IACA;EACA;EACAC,6BAEA;EACAC;IACAC;MACA;IACA;IACAC;MAAA;MACA;QAAAC;MAAA;IACA;IACAC;MAAA;MACA;IACA;EACA;AAEA","names":["Vue","name","data","formData","gridOptions","resizable","showOverflow","border","height","rowId","printConfig","columns","field","modes","sortConfig","trigger","remote","defaultSort","order","filterConfig","pagerConfig","pageSize","pageSizes","exportConfig","type","types","checkboxConfig","labelField","reserve","highlight","range","proxyConfig","seq","sort","filter","props","result","total","ajax","query","sorts","filters","queryParams","values","queryAll","toolbarConfig","export","print","custom","zoom","slots","buttons","width","fixed","title","minWidth","sortable","editRender","visible","label","value","checked","filterMultiple","formatter","created","methods","searchEvent","formatAmount","digits","formatDate"],"sourceRoot":"src/views/system","sources":["logList.vue"],"sourcesContent":["<template>\r\n    <div id=\"box\">\r\n      <template>\r\n        <div style=\"padding: 0 50px 0 50px\">\r\n            <vxe-grid ref=\"xGrid\" v-bind=\"gridOptions\">\r\n                <!--将表单放在工具栏中-->\r\n                <template v-slot:toolbar_buttons>\r\n                    <vxe-form :data=\"formData\" @submit=\"searchEvent\" @reset=\"searchEvent\">\r\n                        <!-- 搜索的字段 -->\r\n                        <vxe-form-item field=\"name\"\r\n                                       :item-render=\"{name: 'input', attrs: {placeholder: '请输入名称'}}\"></vxe-form-item>\r\n                        <vxe-form-item\r\n                                :item-render=\"{ name: '$buttons', children: [{ props: { type: 'submit', content: '查询', status: 'primary' } }, { props: { type: 'reset', content: '重置' } }] }\"></vxe-form-item>\r\n                    </vxe-form>\r\n                </template>\r\n \r\n                <!--自定义空数据模板-->\r\n                <template v-slot:empty>\r\n                    <span style=\"color: red;\">\r\n                        <p>没有更多数据了！</p>\r\n                    </span>\r\n                </template>\r\n            </vxe-grid>\r\n        </div>\r\n    </template>\r\n    </div>\r\n  </template>\r\n  <script>\r\n// 给 vue 实例挂载内部对象，例如\r\nVue.prototype.$XModal = VXETable.modal;\r\nVue.prototype.$XPrint = VXETable.print;\r\nVue.prototype.$XSaveFile = VXETable.saveFile;\r\nVue.prototype.$XReadFile = VXETable.readFile;\r\n  export default {\r\n    \r\n    name: \"logList\",\r\n    data() {\r\n        return {\r\n            formData: {\r\n                name: '',\r\n            },\r\n            gridOptions: {\r\n                resizable: true,\r\n                showOverflow: true,\r\n                border: 'inner',\r\n                height: 548,\r\n                rowId: 'id',\r\n                printConfig: {\r\n                    columns: [\r\n                        {field: 'id'},\r\n                        {field: 'name'},\r\n                        {field: 'email'},\r\n                        {field: 'nickname'},\r\n                        {field: 'age'},\r\n                        {field: 'role'},\r\n                        {field: 'amount'},\r\n                        {field: 'updateDate'},\r\n                        {field: 'createDate'},\r\n                    ],\r\n                    modes: ['current', 'selected', 'all']\r\n                },\r\n                sortConfig: {\r\n                    trigger: 'cell',\r\n                    remote: true,\r\n                    defaultSort: {\r\n                        field: 'name',\r\n                        order: 'desc'\r\n                    }\r\n                },\r\n                filterConfig: {\r\n                    remote: true\r\n                },\r\n                pagerConfig: {\r\n                    // perfect: true,\r\n                    pageSize: 10,\r\n                    pageSizes: [5, 10, 15, 20, 50, 100, 200, 500, 1000]\r\n                },\r\n                exportConfig: {\r\n                    // 默认选中类型\r\n                    type: 'xlsx',\r\n                    // 局部自定义类型\r\n                    types: ['xlsx', 'csv', 'html', 'xml', 'txt', 'pdf'],\r\n                    // 自定义数据量列表\r\n                    modes: ['current', 'selected', 'all']\r\n                },\r\n                checkboxConfig: {\r\n                    labelField: 'id',\r\n                    reserve: true,  // 分页场景下，继续保留选中状态\r\n                    highlight: true,\r\n                    range: true\r\n                },\r\n                proxyConfig: {\r\n                    seq: true, // 启用动态序号代理\r\n                    sort: true, // 启用排序代理\r\n                    filter: true, // 启用筛选代理\r\n                    props: {\r\n                        result: 'result', // 配置响应结果列表字段\r\n                        total: 'page.total' // 配置响应结果总页数字段\r\n                    },\r\n                    ajax: {\r\n                        // 接收 Promise 对象\r\n                        query: ({page, sorts, filters}) => {\r\n                            const queryParams = Object.assign({}, this.formData);\r\n                            // 处理排序条件\r\n                            const firstSort = sorts[0];\r\n                            if (firstSort) {\r\n                                queryParams.sort = firstSort.property;\r\n                                queryParams.order = firstSort.order\r\n                            }\r\n                            // 处理筛选条件\r\n                            filters.forEach(({property, values}) => {\r\n                                queryParams[property] = values.join(',')\r\n                            });\r\n                            return XEAjax.get(`https://api.xuliangzhan.com:10443/api/pub/page/list/${page.pageSize}/${page.currentPage}`, queryParams)\r\n                        },\r\n                        // 被某些特殊功能所触发，例如：导出数据 mode=all 时，会触发该方法并对返回的数据进行导出\r\n                        queryAll: () => XEAjax.get('https://api.xuliangzhan.com:10443/api/pub/all')\r\n                    }\r\n                },\r\n                toolbarConfig: {\r\n                    export: true,\r\n                    print: true,\r\n                    custom: true,\r\n                    zoom: true,\r\n                    slots: {\r\n                        buttons: 'toolbar_buttons'\r\n                    }\r\n                },\r\n                columns: [\r\n                    {type: 'seq', width: 60, fixed: 'left', title: '序号'},\r\n                    {type: 'checkbox', title: 'ID', width: 120, fixed: 'left'},\r\n                    {field: 'name', title: '姓名', minWidth: 160, sortable: true},\r\n                    {field: 'email', title: '邮箱', minWidth: 160, editRender: {name: 'input'}},\r\n                    {field: 'nickname', title: '昵称', sortable: true, minWidth: 160},\r\n                    {field: 'age', title: '年龄', visible: false, sortable: true, width: 100},\r\n                    {\r\n                        field: 'role',\r\n                        title: '职位',\r\n                        sortable: true,\r\n                        minWidth: 160,\r\n                        filters: [\r\n                            {label: '前端开发', value: '前端', checked: true},\r\n                            {label: '后端开发', value: '后端'},\r\n                            {label: '测试', value: '测试'},\r\n                            {label: '程序员鼓励师', value: '程序员鼓励师'}\r\n                        ],\r\n                        filterMultiple: false\r\n                    },\r\n                    {field: 'amount', title: '收入', width: 140, formatter: this.formatAmount},\r\n                    {\r\n                        field: 'updateDate',\r\n                        title: '更新时间',\r\n                        visible: false,\r\n                        width: 160,\r\n                        sortable: true,\r\n                        formatter: this.formatDate\r\n                    },\r\n                    {\r\n                        field: 'createDate',\r\n                        title: '创建时间',\r\n                        visible: false,\r\n                        width: 160,\r\n                        sortable: true,\r\n                        formatter: this.formatDate\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n    },\r\n    created() {\r\n \r\n    },\r\n    methods: {\r\n        searchEvent() {\r\n            this.$refs.xGrid.commitProxy('reload')\r\n        },\r\n        formatAmount({cellValue}) {\r\n            return cellValue ? `￥${XEUtils.commafy(XEUtils.toNumber(cellValue), {digits: 2})}` : ''\r\n        },\r\n        formatDate({cellValue}) {\r\n            return XEUtils.toDateString(cellValue, 'yyyy-MM-dd HH:ss:mm')\r\n        }\r\n    }\r\n\r\n  }\r\n  </script>\r\n  \r\n  <style scoped>\r\n  \r\n  </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}