{"ast":null,"code":"var staticStrFirst = require('./staticStrFirst');\nvar staticStrLast = require('./staticStrLast');\nvar staticDayTime = require('./staticDayTime');\nvar helperGetDateFullYear = require('./helperGetDateFullYear');\nvar helperGetDateTime = require('./helperGetDateTime');\nvar helperGetDateMonth = require('./helperGetDateMonth');\nvar toStringDate = require('./toStringDate');\nvar isValidDate = require('./isValidDate');\nvar isNumber = require('./isNumber');\n\n/**\r\n  * 返回前几月或后几月的日期\r\n  *\r\n  * @param {Date} date 日期或数字\r\n  * @param {Number} offsetMonth 月(默认当前月)、前几个月、后几个月\r\n  * @param {Number/String} offsetDay 获取哪天：月初(first)、月末(last)、指定天数(数值)，如果为空，但超过指定月份的天数时，则默认单月最后一天\r\n  * @return {Date}\r\n  */\nfunction getWhatMonth(date, offsetMonth, offsetDay) {\n  var monthNum = offsetMonth && !isNaN(offsetMonth) ? offsetMonth : 0;\n  date = toStringDate(date);\n  if (isValidDate(date)) {\n    if (offsetDay === staticStrFirst) {\n      return new Date(helperGetDateFullYear(date), helperGetDateMonth(date) + monthNum, 1);\n    } else if (offsetDay === staticStrLast) {\n      return new Date(helperGetDateTime(getWhatMonth(date, monthNum + 1, staticStrFirst)) - 1);\n    } else if (isNumber(offsetDay)) {\n      date.setDate(offsetDay);\n    }\n    if (monthNum) {\n      var currDate = date.getDate();\n      date.setMonth(helperGetDateMonth(date) + monthNum);\n      if (currDate !== date.getDate()) {\n        // 当为指定天数，且被跨月了，则默认单月最后一天\n        date.setDate(1);\n        return new Date(helperGetDateTime(date) - staticDayTime);\n      }\n    }\n  }\n  return date;\n}\nmodule.exports = getWhatMonth;","map":{"version":3,"names":["staticStrFirst","require","staticStrLast","staticDayTime","helperGetDateFullYear","helperGetDateTime","helperGetDateMonth","toStringDate","isValidDate","isNumber","getWhatMonth","date","offsetMonth","offsetDay","monthNum","isNaN","Date","setDate","currDate","getDate","setMonth","module","exports"],"sources":["D:/program/LanqiaoVue/vue-demo/node_modules/xe-utils/getWhatMonth.js"],"sourcesContent":["var staticStrFirst = require('./staticStrFirst')\r\nvar staticStrLast = require('./staticStrLast')\r\nvar staticDayTime = require('./staticDayTime')\r\n\r\nvar helperGetDateFullYear = require('./helperGetDateFullYear')\r\nvar helperGetDateTime = require('./helperGetDateTime')\r\nvar helperGetDateMonth = require('./helperGetDateMonth')\r\n\r\nvar toStringDate = require('./toStringDate')\r\nvar isValidDate = require('./isValidDate')\r\nvar isNumber = require('./isNumber')\r\n\r\n/**\r\n  * 返回前几月或后几月的日期\r\n  *\r\n  * @param {Date} date 日期或数字\r\n  * @param {Number} offsetMonth 月(默认当前月)、前几个月、后几个月\r\n  * @param {Number/String} offsetDay 获取哪天：月初(first)、月末(last)、指定天数(数值)，如果为空，但超过指定月份的天数时，则默认单月最后一天\r\n  * @return {Date}\r\n  */\r\nfunction getWhatMonth (date, offsetMonth, offsetDay) {\r\n  var monthNum = offsetMonth && !isNaN(offsetMonth) ? offsetMonth : 0\r\n  date = toStringDate(date)\r\n  if (isValidDate(date)) {\r\n    if (offsetDay === staticStrFirst) {\r\n      return new Date(helperGetDateFullYear(date), helperGetDateMonth(date) + monthNum, 1)\r\n    } else if (offsetDay === staticStrLast) {\r\n      return new Date(helperGetDateTime(getWhatMonth(date, monthNum + 1, staticStrFirst)) - 1)\r\n    } else if (isNumber(offsetDay)) {\r\n      date.setDate(offsetDay)\r\n    }\r\n    if (monthNum) {\r\n      var currDate = date.getDate()\r\n      date.setMonth(helperGetDateMonth(date) + monthNum)\r\n      if (currDate !== date.getDate()) {\r\n        // 当为指定天数，且被跨月了，则默认单月最后一天\r\n        date.setDate(1)\r\n        return new Date(helperGetDateTime(date) - staticDayTime)\r\n      }\r\n    }\r\n  }\r\n  return date\r\n}\r\n\r\nmodule.exports = getWhatMonth\r\n"],"mappings":"AAAA,IAAIA,cAAc,GAAGC,OAAO,CAAC,kBAAkB,CAAC;AAChD,IAAIC,aAAa,GAAGD,OAAO,CAAC,iBAAiB,CAAC;AAC9C,IAAIE,aAAa,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAE9C,IAAIG,qBAAqB,GAAGH,OAAO,CAAC,yBAAyB,CAAC;AAC9D,IAAII,iBAAiB,GAAGJ,OAAO,CAAC,qBAAqB,CAAC;AACtD,IAAIK,kBAAkB,GAAGL,OAAO,CAAC,sBAAsB,CAAC;AAExD,IAAIM,YAAY,GAAGN,OAAO,CAAC,gBAAgB,CAAC;AAC5C,IAAIO,WAAW,GAAGP,OAAO,CAAC,eAAe,CAAC;AAC1C,IAAIQ,QAAQ,GAAGR,OAAO,CAAC,YAAY,CAAC;;AAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASS,YAAY,CAAEC,IAAI,EAAEC,WAAW,EAAEC,SAAS,EAAE;EACnD,IAAIC,QAAQ,GAAGF,WAAW,IAAI,CAACG,KAAK,CAACH,WAAW,CAAC,GAAGA,WAAW,GAAG,CAAC;EACnED,IAAI,GAAGJ,YAAY,CAACI,IAAI,CAAC;EACzB,IAAIH,WAAW,CAACG,IAAI,CAAC,EAAE;IACrB,IAAIE,SAAS,KAAKb,cAAc,EAAE;MAChC,OAAO,IAAIgB,IAAI,CAACZ,qBAAqB,CAACO,IAAI,CAAC,EAAEL,kBAAkB,CAACK,IAAI,CAAC,GAAGG,QAAQ,EAAE,CAAC,CAAC;IACtF,CAAC,MAAM,IAAID,SAAS,KAAKX,aAAa,EAAE;MACtC,OAAO,IAAIc,IAAI,CAACX,iBAAiB,CAACK,YAAY,CAACC,IAAI,EAAEG,QAAQ,GAAG,CAAC,EAAEd,cAAc,CAAC,CAAC,GAAG,CAAC,CAAC;IAC1F,CAAC,MAAM,IAAIS,QAAQ,CAACI,SAAS,CAAC,EAAE;MAC9BF,IAAI,CAACM,OAAO,CAACJ,SAAS,CAAC;IACzB;IACA,IAAIC,QAAQ,EAAE;MACZ,IAAII,QAAQ,GAAGP,IAAI,CAACQ,OAAO,EAAE;MAC7BR,IAAI,CAACS,QAAQ,CAACd,kBAAkB,CAACK,IAAI,CAAC,GAAGG,QAAQ,CAAC;MAClD,IAAII,QAAQ,KAAKP,IAAI,CAACQ,OAAO,EAAE,EAAE;QAC/B;QACAR,IAAI,CAACM,OAAO,CAAC,CAAC,CAAC;QACf,OAAO,IAAID,IAAI,CAACX,iBAAiB,CAACM,IAAI,CAAC,GAAGR,aAAa,CAAC;MAC1D;IACF;EACF;EACA,OAAOQ,IAAI;AACb;AAEAU,MAAM,CAACC,OAAO,GAAGZ,YAAY"},"metadata":{},"sourceType":"script","externalDependencies":[]}