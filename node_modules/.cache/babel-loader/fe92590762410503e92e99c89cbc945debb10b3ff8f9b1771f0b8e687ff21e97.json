{"ast":null,"code":"import \"core-js/modules/es.string.trim.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { defineComponent, getCurrentInstance, onMounted, reactive } from 'vue';\nimport XEUtils from 'xe-utils';\nimport { getUserList } from \"../../api/system\";\nexport default {\n  data: function data() {\n    return {\n      getTableData: []\n    };\n  },\n  // setup表示允许在组件内部定义响应式状态和事件处理逻辑\n  setup: function setup() {\n    console.log(\"setup\");\n    var data = reactive({\n      filterName: '',\n      list: [],\n      tableData: []\n    });\n    function GetUserList() {\n      console.log(\"GetUserList()\");\n      getUserList().then(function (res) {\n        data.tableData = res.data.data;\n        data.list = res.data.data;\n      });\n    }\n    //挂载后调用函数获取项目数据\n    onMounted(function () {\n      GetUserList();\n    });\n    var searchEvent1 = function searchEvent1() {\n      var filterName = XEUtils.toValueString(data.filterName).trim().toLowerCase();\n      if (filterName) {\n        var filterRE = new RegExp(filterName, 'gi');\n        var searchProps = ['nickName', 'username'];\n        var rest = data.tableData.filter(function (item) {\n          return searchProps.some(function (key) {\n            return XEUtils.toValueString(item[key]).toLowerCase().indexOf(filterName) > -1;\n          });\n        });\n        data.list = rest.map(function (row) {\n          var item = Object.assign({}, row);\n          searchProps.forEach(function (key) {\n            item[key] = XEUtils.toValueString(item[key]).replace(filterRE, function (match) {\n              return \"<span class=\\\"keyword-lighten\\\">\".concat(match, \"</span>\");\n            });\n          });\n          return item;\n        });\n      } else {\n        data.list = data.tableData;\n      }\n    };\n    searchEvent1();\n    return {\n      data: data,\n      searchEvent1: searchEvent1\n    };\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;AAMA;AACA;AACA;AAEA;EACAA;IACA;MACAC;IACA;EACA;EACA;EACAC;IACAC;IACA;MACAC;MACAC;MACAC;IACA;IACA;MACAH;MACAI;QACAP;QACAA;MACA;IACA;IACA;IACAQ;MACAC;IACA;IACA;MACA;MACA;QACA;QACA;QACA;UAAA;YAAA;UAAA;QAAA;QACAT;UACA;UACAU;YACAC;cAAA;YAAA;UACA;UACA;QACA;MACA;QACAX;MACA;IACA;IACAY;IACA;MACAZ;MACAY;IACA;EACA;AAEA","names":["data","getTableData","setup","console","filterName","list","tableData","getUserList","onMounted","GetUserList","searchProps","item","searchEvent1"],"sourceRoot":"src/views/system","sources":["roleList.vue"],"sourcesContent":["<template>\r\n  <div id=\"view\">\r\n    角色管理\r\n  </div>\r\n</template>\r\n<script>\r\nimport { defineComponent,getCurrentInstance,onMounted ,reactive } from 'vue'\r\nimport XEUtils from 'xe-utils'\r\nimport {getUserList} from \"../../api/system\"\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      getTableData:[]\r\n    }\r\n  },\r\n  // setup表示允许在组件内部定义响应式状态和事件处理逻辑\r\n    setup () {\r\n      console.log(\"setup\")\r\n      let data = reactive({\r\n        filterName: '',\r\n        list: [],\r\n        tableData:[]\r\n      })\r\n      function GetUserList(){\r\n        console.log(\"GetUserList()\")\r\n        getUserList().then((res)=>{\r\n          data.tableData=res.data.data\r\n          data.list=res.data.data\r\n        })\r\n      }\r\n       //挂载后调用函数获取项目数据\r\n      onMounted(() => {\r\n        GetUserList()\r\n      });\r\n      const searchEvent1 = () => {\r\n        const filterName = XEUtils.toValueString(data.filterName).trim().toLowerCase()\r\n        if (filterName) {\r\n          const filterRE = new RegExp(filterName, 'gi')\r\n          const searchProps = ['nickName','username']\r\n          const rest = data.tableData.filter(item => searchProps.some(key => XEUtils.toValueString(item[key]).toLowerCase().indexOf(filterName) > -1))\r\n          data.list = rest.map(row => {\r\n            const item = Object.assign({}, row)\r\n            searchProps.forEach(key => {\r\n              item[key] = XEUtils.toValueString(item[key]).replace(filterRE, match => `<span class=\"keyword-lighten\">${match}</span>`)\r\n            })\r\n            return item\r\n          })\r\n        } else {\r\n          data.list = data.tableData\r\n        }\r\n      }\r\n      searchEvent1()\r\n        return {\r\n          data,\r\n          searchEvent1\r\n      }\r\n    },\r\n\r\n  }\r\n\r\n</script>\r\n  \r\n  <style scoped>\r\n  #box{\r\n    width: 95%;\r\n    height: 100%;\r\n    margin: auto;\r\n    margin-top: 20px;\r\n  }\r\n  #box .table{\r\n    margin-top: 20px;\r\n    margin: auto;\r\n  }\r\n  \r\n  </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}